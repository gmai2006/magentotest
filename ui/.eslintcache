[{"/backup/apps/magentotest/ui/src/index.js":"1","/backup/apps/magentotest/ui/src/App.js":"2","/backup/apps/magentotest/ui/src/reportWebVitals.js":"3","/backup/apps/magentotest/ui/src/init.js":"4","/backup/apps/magentotest/ui/src/pages/Overview.js":"5","/backup/apps/magentotest/ui/src/pages/Query.js":"6","/backup/apps/magentotest/ui/src/components/TableMenu.js":"7","/backup/apps/magentotest/ui/src/components/Sidebar/index.js":"8","/backup/apps/magentotest/ui/src/pages/tables/AdminUser.js":"9","/backup/apps/magentotest/ui/src/pages/tables/AdminPasswords.js":"10","/backup/apps/magentotest/ui/src/pages/tables/AdminSystemMessages.js":"11","/backup/apps/magentotest/ui/src/pages/tables/AdminUserSession.js":"12","/backup/apps/magentotest/ui/src/pages/tables/AdminnotificationInbox.js":"13","/backup/apps/magentotest/ui/src/pages/tables/AmazonCustomer.js":"14","/backup/apps/magentotest/ui/src/pages/tables/AmazonPendingRefund.js":"15","/backup/apps/magentotest/ui/src/pages/tables/AmazonPendingAuthorization.js":"16","/backup/apps/magentotest/ui/src/pages/tables/AmazonPendingCapture.js":"17","/backup/apps/magentotest/ui/src/pages/tables/AmazonSalesOrder.js":"18","/backup/apps/magentotest/ui/src/pages/tables/AmazonQuote.js":"19","/backup/apps/magentotest/ui/src/pages/tables/AuthorizationRule.js":"20","/backup/apps/magentotest/ui/src/pages/tables/AuthorizationRole.js":"21","/backup/apps/magentotest/ui/src/pages/tables/CacheTag.js":"22","/backup/apps/magentotest/ui/src/pages/tables/Cache.js":"23","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryEntity.js":"24","/backup/apps/magentotest/ui/src/pages/tables/CaptchaLog.js":"25","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryEntityDatetime.js":"26","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryEntityDecimal.js":"27","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryEntityText.js":"28","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryEntityInt.js":"29","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryEntityVarchar.js":"30","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryProduct.js":"31","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryProductIndexReplica.js":"32","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryProductIndex.js":"33","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryProductIndexStore1Replica.js":"34","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryProductIndexStore1.js":"35","/backup/apps/magentotest/ui/src/pages/tables/CatalogCompareItem.js":"36","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryProductIndexTmp.js":"37","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductBundleOption.js":"38","/backup/apps/magentotest/ui/src/pages/tables/CatalogEavAttribute.js":"39","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductBundlePriceIndex.js":"40","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductBundleOptionValue.js":"41","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductBundleSelection.js":"42","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductBundleSelectionPrice.js":"43","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityDatetime.js":"44","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityDecimal.js":"45","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityGallery.js":"46","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityInt.js":"47","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityMediaGallery.js":"48","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityMediaGalleryValue.js":"49","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityMediaGalleryValueVideo.js":"50","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityMediaGalleryValueToEntity.js":"51","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityText.js":"52","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityTierPrice.js":"53","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductFrontendAction.js":"54","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityVarchar.js":"55","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEav.js":"56","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavDecimal.js":"57","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavDecimalReplica.js":"58","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavDecimalIdx.js":"59","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavDecimalTmp.js":"60","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavIdx.js":"61","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavTmp.js":"62","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavReplica.js":"63","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceBundleIdx.js":"64","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPrice.js":"65","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceBundleOptTmp.js":"66","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceBundleOptIdx.js":"67","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceBundleSelIdx.js":"68","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceBundleSelTmp.js":"69","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceCfgOptAgrIdx.js":"70","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceBundleTmp.js":"71","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceCfgOptAgrTmp.js":"72","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceCfgOptIdx.js":"73","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceCfgOptTmp.js":"74","/backup/apps/magentotest/ui/src/pages/tables/InventoryStock.js":"75","/backup/apps/magentotest/ui/src/pages/tables/InventorySourceStockLink.js":"76","/backup/apps/magentotest/ui/src/pages/tables/InventorySourceCarrierLink.js":"77","/backup/apps/magentotest/ui/src/pages/tables/InventorySourceItem.js":"78","/backup/apps/magentotest/ui/src/pages/tables/InventoryShipmentSource.js":"79","/backup/apps/magentotest/ui/src/pages/tables/InventorySource.js":"80","/backup/apps/magentotest/ui/src/pages/tables/InventoryReservation.js":"81","/backup/apps/magentotest/ui/src/pages/tables/InventoryGeoname.js":"82","/backup/apps/magentotest/ui/src/pages/tables/InventoryLowStockNotificationConfiguration.js":"83","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntity.js":"84","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductBundleStockIndex.js":"85","/backup/apps/magentotest/ui/src/pages/tables/Integration.js":"86","/backup/apps/magentotest/ui/src/pages/tables/ImportexportImportdata.js":"87","/backup/apps/magentotest/ui/src/pages/tables/IndexerState.js":"88","/backup/apps/magentotest/ui/src/pages/tables/ImportHistory.js":"89","/backup/apps/magentotest/ui/src/pages/tables/GoogleoptimizerCode.js":"90","/backup/apps/magentotest/ui/src/pages/tables/GiftMessage.js":"91","/backup/apps/magentotest/ui/src/pages/tables/Flag.js":"92","/backup/apps/magentotest/ui/src/pages/tables/EmailWishlist.js":"93","/backup/apps/magentotest/ui/src/components/Card/index.js":"94","/backup/apps/magentotest/ui/src/components/Form/index.js":"95","/backup/apps/magentotest/ui/src/summary.js":"96","/backup/apps/magentotest/ui/src/components/Sidebar/tables.js":"97","/backup/apps/magentotest/ui/src/components/Sidebar/queries.js":"98","/backup/apps/magentotest/ui/src/pages/tables/EmailRules.js":"99","/backup/apps/magentotest/ui/src/pages/tables/EmailOrder.js":"100","/backup/apps/magentotest/ui/src/pages/tables/EmailTemplate.js":"101","/backup/apps/magentotest/ui/src/pages/tables/EmailReview.js":"102","/backup/apps/magentotest/ui/src/pages/tables/EmailImporter.js":"103","/backup/apps/magentotest/ui/src/pages/tables/EmailFailedAuth.js":"104","/backup/apps/magentotest/ui/src/pages/tables/EmailContactConsent.js":"105","/backup/apps/magentotest/ui/src/pages/tables/EmailCatalog.js":"106","/backup/apps/magentotest/ui/src/pages/tables/EmailContact.js":"107","/backup/apps/magentotest/ui/src/pages/tables/EmailCampaign.js":"108","/backup/apps/magentotest/ui/src/pages/tables/EmailAutomation.js":"109","/backup/apps/magentotest/ui/src/pages/tables/EmailAbandonedCart.js":"110","/backup/apps/magentotest/ui/src/pages/tables/EavFormType.js":"111","/backup/apps/magentotest/ui/src/pages/tables/EavFormTypeEntity.js":"112","/backup/apps/magentotest/ui/src/pages/tables/EavFormFieldsetLabel.js":"113","/backup/apps/magentotest/ui/src/pages/tables/EavFormFieldset.js":"114","/backup/apps/magentotest/ui/src/pages/tables/EavFormElement.js":"115","/backup/apps/magentotest/ui/src/pages/tables/EavEntityVarchar.js":"116","/backup/apps/magentotest/ui/src/pages/tables/EavEntityType.js":"117","/backup/apps/magentotest/ui/src/pages/tables/EavEntityText.js":"118","/backup/apps/magentotest/ui/src/pages/tables/EavEntityStore.js":"119","/backup/apps/magentotest/ui/src/pages/tables/EavEntityInt.js":"120","/backup/apps/magentotest/ui/src/pages/tables/EavEntityDecimal.js":"121","/backup/apps/magentotest/ui/src/pages/tables/EavEntityDatetime.js":"122","/backup/apps/magentotest/ui/src/pages/tables/EavEntityAttribute.js":"123","/backup/apps/magentotest/ui/src/pages/tables/EavEntity.js":"124","/backup/apps/magentotest/ui/src/pages/tables/EavAttributeSet.js":"125","/backup/apps/magentotest/ui/src/pages/tables/EavAttributeOptionValue.js":"126","/backup/apps/magentotest/ui/src/pages/tables/EavAttributeOptionSwatch.js":"127","/backup/apps/magentotest/ui/src/pages/tables/EavAttributeLabel.js":"128","/backup/apps/magentotest/ui/src/pages/tables/EavAttributeOption.js":"129","/backup/apps/magentotest/ui/src/pages/tables/EavAttributeGroup.js":"130","/backup/apps/magentotest/ui/src/pages/tables/DownloadableSampleTitle.js":"131","/backup/apps/magentotest/ui/src/pages/tables/EavAttribute.js":"132","/backup/apps/magentotest/ui/src/pages/tables/DownloadableSample.js":"133","/backup/apps/magentotest/ui/src/pages/tables/DownloadableLinkTitle.js":"134","/backup/apps/magentotest/ui/src/pages/tables/DownloadableLinkPurchasedItem.js":"135","/backup/apps/magentotest/ui/src/pages/tables/DownloadableLinkPurchased.js":"136","/backup/apps/magentotest/ui/src/pages/tables/DownloadableLinkPrice.js":"137","/backup/apps/magentotest/ui/src/pages/tables/DownloadableLink.js":"138","/backup/apps/magentotest/ui/src/pages/tables/DirectoryCurrencyRate.js":"139","/backup/apps/magentotest/ui/src/pages/tables/DirectoryCountryRegionName.js":"140","/backup/apps/magentotest/ui/src/pages/tables/DirectoryCountryRegion.js":"141","/backup/apps/magentotest/ui/src/pages/tables/DirectoryCountryFormat.js":"142","/backup/apps/magentotest/ui/src/pages/tables/DirectoryCountry.js":"143","/backup/apps/magentotest/ui/src/pages/tables/DesignConfigGridFlat.js":"144","/backup/apps/magentotest/ui/src/pages/tables/DesignChange.js":"145","/backup/apps/magentotest/ui/src/pages/tables/CustomerVisitor.js":"146","/backup/apps/magentotest/ui/src/pages/tables/CustomerLog.js":"147","/backup/apps/magentotest/ui/src/pages/tables/CustomerGroup.js":"148","/backup/apps/magentotest/ui/src/pages/tables/CustomerGridFlat.js":"149","/backup/apps/magentotest/ui/src/pages/tables/CustomerFormAttribute.js":"150","/backup/apps/magentotest/ui/src/pages/tables/CustomerEntityVarchar.js":"151","/backup/apps/magentotest/ui/src/pages/tables/CustomerEntityText.js":"152","/backup/apps/magentotest/ui/src/pages/tables/CustomerEntityInt.js":"153","/backup/apps/magentotest/ui/src/pages/tables/CustomerEntityDecimal.js":"154","/backup/apps/magentotest/ui/src/pages/tables/CustomerEntityDatetime.js":"155","/backup/apps/magentotest/ui/src/pages/tables/CustomerEntity.js":"156","/backup/apps/magentotest/ui/src/pages/tables/CustomerEavAttributeWebsite.js":"157","/backup/apps/magentotest/ui/src/pages/tables/CustomerEavAttribute.js":"158","/backup/apps/magentotest/ui/src/pages/tables/CustomerAddressEntityVarchar.js":"159","/backup/apps/magentotest/ui/src/pages/tables/CustomerAddressEntityInt.js":"160","/backup/apps/magentotest/ui/src/pages/tables/CustomerAddressEntityText.js":"161","/backup/apps/magentotest/ui/src/pages/tables/CustomerAddressEntityDecimal.js":"162","/backup/apps/magentotest/ui/src/pages/tables/CustomerAddressEntityDatetime.js":"163","/backup/apps/magentotest/ui/src/pages/tables/CustomerAddressEntity.js":"164","/backup/apps/magentotest/ui/src/pages/tables/CronSchedule.js":"165","/backup/apps/magentotest/ui/src/pages/tables/CmsPageStore.js":"166","/backup/apps/magentotest/ui/src/pages/tables/CoreConfigData.js":"167","/backup/apps/magentotest/ui/src/pages/tables/CmsPage.js":"168","/backup/apps/magentotest/ui/src/pages/tables/CmsBlockStore.js":"169","/backup/apps/magentotest/ui/src/pages/tables/CmsBlock.js":"170","/backup/apps/magentotest/ui/src/pages/tables/CheckoutAgreementStore.js":"171","/backup/apps/magentotest/ui/src/pages/tables/CatalogsearchFulltextScope1.js":"172","/backup/apps/magentotest/ui/src/pages/tables/CatalogsearchRecommendations.js":"173","/backup/apps/magentotest/ui/src/pages/tables/CheckoutAgreement.js":"174","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleWebsite.js":"175","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleProductReplica.js":"176","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleProductPriceReplica.js":"177","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleProductPrice.js":"178","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleProduct.js":"179","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleGroupWebsite.js":"180","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleGroupWebsiteReplica.js":"181","/backup/apps/magentotest/ui/src/pages/tables/Catalogrule.js":"182","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleCustomerGroup.js":"183","/backup/apps/magentotest/ui/src/pages/tables/CataloginventoryStockStatusTmp.js":"184","/backup/apps/magentotest/ui/src/pages/tables/CataloginventoryStockStatusReplica.js":"185","/backup/apps/magentotest/ui/src/pages/tables/CataloginventoryStockStatusIdx.js":"186","/backup/apps/magentotest/ui/src/pages/tables/CataloginventoryStock.js":"187","/backup/apps/magentotest/ui/src/pages/tables/CataloginventoryStockStatus.js":"188","/backup/apps/magentotest/ui/src/pages/tables/CataloginventoryStockItem.js":"189","/backup/apps/magentotest/ui/src/pages/tables/CatalogUrlRewriteProductCategory.js":"190","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductWebsite.js":"191","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductSuperLink.js":"192","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductSuperAttribute.js":"193","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductSuperAttributeLabel.js":"194","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductRelation.js":"195","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductOptionTypeValue.js":"196","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductOptionTypeTitle.js":"197","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductOptionTypePrice.js":"198","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductOptionTitle.js":"199","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductOptionPrice.js":"200","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductOption.js":"201","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductLinkType.js":"202","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductLinkAttributeVarchar.js":"203","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductLinkAttributeInt.js":"204","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductLinkAttributeDecimal.js":"205","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductLinkAttribute.js":"206","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductLink.js":"207","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexWebsite.js":"208","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexTierPrice.js":"209","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceTmp.js":"210","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceReplica.js":"211","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceOptTmp.js":"212","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceOptIdx.js":"213","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceOptAgrTmp.js":"214","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceOptAgrIdx.js":"215","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceIdx.js":"216","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceFinalTmp.js":"217","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceFinalIdx.js":"218","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceDownlodTmp.js":"219","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceDownlodIdx.js":"220","/backup/apps/magentotest/ui/src/pages/d3_chart.js":"221","/backup/apps/magentotest/ui/src/pages/tables/WishlistItemOption.js":"222","/backup/apps/magentotest/ui/src/pages/tables/WishlistItem.js":"223","/backup/apps/magentotest/ui/src/pages/tables/Wishlist.js":"224","/backup/apps/magentotest/ui/src/pages/tables/WidgetInstancePageLayout.js":"225","/backup/apps/magentotest/ui/src/pages/tables/WidgetInstancePage.js":"226","/backup/apps/magentotest/ui/src/pages/tables/WidgetInstance.js":"227","/backup/apps/magentotest/ui/src/pages/tables/WeeeTax.js":"228","/backup/apps/magentotest/ui/src/pages/tables/Widget.js":"229","/backup/apps/magentotest/ui/src/pages/tables/VertexTaxrequest.js":"230","/backup/apps/magentotest/ui/src/pages/tables/VertexSalesOrderItemVertexTaxCode.js":"231","/backup/apps/magentotest/ui/src/pages/tables/VertexSalesOrderItemTaxCode.js":"232","/backup/apps/magentotest/ui/src/pages/tables/VertexSalesOrderItemInvoiceTextCode.js":"233","/backup/apps/magentotest/ui/src/pages/tables/VertexSalesCreditmemoItemVertexTaxCode.js":"234","/backup/apps/magentotest/ui/src/pages/tables/VertexSalesCreditmemoItemInvoiceTextCode.js":"235","/backup/apps/magentotest/ui/src/pages/tables/VertexSalesCreditmemoItemTaxCode.js":"236","/backup/apps/magentotest/ui/src/pages/tables/VertexOrderInvoiceStatus.js":"237","/backup/apps/magentotest/ui/src/pages/tables/VertexCustomerCode.js":"238","/backup/apps/magentotest/ui/src/pages/tables/VertexInvoiceSent.js":"239","/backup/apps/magentotest/ui/src/pages/tables/VaultPaymentTokenOrderPaymentLink.js":"240","/backup/apps/magentotest/ui/src/pages/tables/VaultPaymentToken.js":"241","/backup/apps/magentotest/ui/src/pages/tables/VariableValue.js":"242","/backup/apps/magentotest/ui/src/pages/tables/Variable.js":"243","/backup/apps/magentotest/ui/src/pages/tables/UrlRewrite.js":"244","/backup/apps/magentotest/ui/src/pages/tables/UiBookmark.js":"245","/backup/apps/magentotest/ui/src/pages/tables/Translation.js":"246","/backup/apps/magentotest/ui/src/pages/tables/ThemeFile.js":"247","/backup/apps/magentotest/ui/src/pages/tables/Theme.js":"248","/backup/apps/magentotest/ui/src/pages/tables/TemandoShipment.js":"249","/backup/apps/magentotest/ui/src/pages/tables/TemandoQuotePickupLocation.js":"250","/backup/apps/magentotest/ui/src/pages/tables/TemandoQuoteCollectionPoint.js":"251","/backup/apps/magentotest/ui/src/pages/tables/TemandoPickupLocationSearch.js":"252","/backup/apps/magentotest/ui/src/pages/tables/TemandoOrderPickupLocation.js":"253","/backup/apps/magentotest/ui/src/pages/tables/TemandoOrderCollectionPoint.js":"254","/backup/apps/magentotest/ui/src/pages/tables/TemandoOrder.js":"255","/backup/apps/magentotest/ui/src/pages/tables/TemandoCollectionPointSearch.js":"256","/backup/apps/magentotest/ui/src/pages/tables/TemandoCheckoutAddress.js":"257","/backup/apps/magentotest/ui/src/pages/tables/TaxOrderAggregatedUpdated.js":"258","/backup/apps/magentotest/ui/src/pages/tables/TaxOrderAggregatedCreated.js":"259","/backup/apps/magentotest/ui/src/pages/tables/TaxClass.js":"260","/backup/apps/magentotest/ui/src/pages/tables/TaxCalculationRule.js":"261","/backup/apps/magentotest/ui/src/pages/tables/TaxCalculationRateTitle.js":"262","/backup/apps/magentotest/ui/src/pages/tables/TaxCalculationRate.js":"263","/backup/apps/magentotest/ui/src/pages/tables/TaxCalculation.js":"264","/backup/apps/magentotest/ui/src/pages/tables/StoreWebsite.js":"265","/backup/apps/magentotest/ui/src/pages/tables/StoreGroup.js":"266","/backup/apps/magentotest/ui/src/pages/tables/Store.js":"267","/backup/apps/magentotest/ui/src/pages/tables/Sitemap.js":"268","/backup/apps/magentotest/ui/src/pages/tables/SignifydCase.js":"269","/backup/apps/magentotest/ui/src/pages/tables/ShippingTablerate.js":"270","/backup/apps/magentotest/ui/src/pages/tables/SetupModule.js":"271","/backup/apps/magentotest/ui/src/pages/tables/Session.js":"272","/backup/apps/magentotest/ui/src/pages/tables/SequenceShipment1.js":"273","/backup/apps/magentotest/ui/src/pages/tables/SequenceShipment0.js":"274","/backup/apps/magentotest/ui/src/pages/tables/SequenceOrder1.js":"275","/backup/apps/magentotest/ui/src/pages/tables/SequenceOrder0.js":"276","/backup/apps/magentotest/ui/src/pages/tables/SequenceInvoice1.js":"277","/backup/apps/magentotest/ui/src/pages/tables/SequenceInvoice0.js":"278","/backup/apps/magentotest/ui/src/pages/tables/SequenceCreditmemo1.js":"279","/backup/apps/magentotest/ui/src/pages/tables/SequenceCreditmemo0.js":"280","/backup/apps/magentotest/ui/src/pages/tables/SendfriendLog.js":"281","/backup/apps/magentotest/ui/src/pages/tables/SearchSynonyms.js":"282","/backup/apps/magentotest/ui/src/pages/tables/SearchQuery.js":"283","/backup/apps/magentotest/ui/src/pages/tables/SalesruleWebsite.js":"284","/backup/apps/magentotest/ui/src/pages/tables/SalesruleProductAttribute.js":"285","/backup/apps/magentotest/ui/src/pages/tables/SalesruleLabel.js":"286","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCustomer.js":"287","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCustomerGroup.js":"288","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCouponUsage.js":"289","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCouponAggregatedUpdated.js":"290","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCouponAggregatedOrder.js":"291","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCouponAggregated.js":"292","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCoupon.js":"293","/backup/apps/magentotest/ui/src/pages/tables/Salesrule.js":"294","/backup/apps/magentotest/ui/src/pages/tables/SalesShippingAggregated.js":"295","/backup/apps/magentotest/ui/src/pages/tables/SalesShippingAggregatedOrder.js":"296","/backup/apps/magentotest/ui/src/pages/tables/SalesShipmentTrack.js":"297","/backup/apps/magentotest/ui/src/pages/tables/SalesShipmentItem.js":"298","/backup/apps/magentotest/ui/src/pages/tables/SalesShipmentGrid.js":"299","/backup/apps/magentotest/ui/src/pages/tables/SalesShipmentComment.js":"300","/backup/apps/magentotest/ui/src/pages/tables/SalesShipment.js":"301","/backup/apps/magentotest/ui/src/pages/tables/SalesSequenceProfile.js":"302","/backup/apps/magentotest/ui/src/pages/tables/SalesSequenceMeta.js":"303","/backup/apps/magentotest/ui/src/pages/tables/SalesRefundedAggregatedOrder.js":"304","/backup/apps/magentotest/ui/src/pages/tables/SalesRefundedAggregated.js":"305","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderTaxItem.js":"306","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderTax.js":"307","/backup/apps/magentotest/ui/src/pages/tables/SalesPaymentTransaction.js":"308","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderStatusState.js":"309","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderStatusLabel.js":"310","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderStatusHistory.js":"311","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderStatus.js":"312","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderPayment.js":"313","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderGrid.js":"314","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderItem.js":"315","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderAggregatedUpdated.js":"316","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderAggregatedCreated.js":"317","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderAddress.js":"318","/backup/apps/magentotest/ui/src/pages/tables/SalesOrder.js":"319","/backup/apps/magentotest/ui/src/pages/tables/SalesInvoicedAggregatedOrder.js":"320","/backup/apps/magentotest/ui/src/pages/tables/SalesInvoicedAggregated.js":"321","/backup/apps/magentotest/ui/src/pages/tables/SalesInvoiceItem.js":"322","/backup/apps/magentotest/ui/src/pages/tables/SalesInvoiceGrid.js":"323","/backup/apps/magentotest/ui/src/pages/tables/SalesInvoiceComment.js":"324","/backup/apps/magentotest/ui/src/pages/tables/SalesInvoice.js":"325","/backup/apps/magentotest/ui/src/pages/tables/SalesCreditmemoItem.js":"326","/backup/apps/magentotest/ui/src/pages/tables/SalesCreditmemoGrid.js":"327","/backup/apps/magentotest/ui/src/pages/tables/SalesCreditmemoComment.js":"328","/backup/apps/magentotest/ui/src/pages/tables/SalesCreditmemo.js":"329","/backup/apps/magentotest/ui/src/pages/tables/SalesBestsellersAggregatedYearly.js":"330","/backup/apps/magentotest/ui/src/pages/tables/SalesBestsellersAggregatedMonthly.js":"331","/backup/apps/magentotest/ui/src/pages/tables/SalesBestsellersAggregatedDaily.js":"332","/backup/apps/magentotest/ui/src/pages/tables/ReviewStore.js":"333","/backup/apps/magentotest/ui/src/pages/tables/ReviewEntitySummary.js":"334","/backup/apps/magentotest/ui/src/pages/tables/ReviewStatus.js":"335","/backup/apps/magentotest/ui/src/pages/tables/ReviewEntity.js":"336","/backup/apps/magentotest/ui/src/pages/tables/ReviewDetail.js":"337","/backup/apps/magentotest/ui/src/pages/tables/Review.js":"338","/backup/apps/magentotest/ui/src/pages/tables/ReportingUsers.js":"339","/backup/apps/magentotest/ui/src/pages/tables/ReportingSystemUpdates.js":"340","/backup/apps/magentotest/ui/src/pages/tables/ReportingOrders.js":"341","/backup/apps/magentotest/ui/src/pages/tables/ReportingModuleStatus.js":"342","/backup/apps/magentotest/ui/src/pages/tables/ReportingCounts.js":"343","/backup/apps/magentotest/ui/src/pages/tables/ReportViewedProductIndex.js":"344","/backup/apps/magentotest/ui/src/pages/tables/ReportViewedProductAggregatedYearly.js":"345","/backup/apps/magentotest/ui/src/pages/tables/ReportViewedProductAggregatedMonthly.js":"346","/backup/apps/magentotest/ui/src/pages/tables/ReportViewedProductAggregatedDaily.js":"347","/backup/apps/magentotest/ui/src/pages/tables/ReportEventTypes.js":"348","/backup/apps/magentotest/ui/src/pages/tables/ReportEvent.js":"349","/backup/apps/magentotest/ui/src/pages/tables/ReportComparedProductIndex.js":"350","/backup/apps/magentotest/ui/src/pages/tables/ReleaseNotificationViewerLog.js":"351","/backup/apps/magentotest/ui/src/pages/tables/RatingTitle.js":"352","/backup/apps/magentotest/ui/src/pages/tables/RatingStore.js":"353","/backup/apps/magentotest/ui/src/pages/tables/RatingOptionVoteAggregated.js":"354","/backup/apps/magentotest/ui/src/pages/tables/RatingOptionVote.js":"355","/backup/apps/magentotest/ui/src/pages/tables/RatingOption.js":"356","/backup/apps/magentotest/ui/src/pages/tables/RatingEntity.js":"357","/backup/apps/magentotest/ui/src/pages/tables/Rating.js":"358","/backup/apps/magentotest/ui/src/pages/tables/QuoteShippingRate.js":"359","/backup/apps/magentotest/ui/src/pages/tables/QuotePayment.js":"360","/backup/apps/magentotest/ui/src/pages/tables/QuoteItemOption.js":"361","/backup/apps/magentotest/ui/src/pages/tables/QuoteItem.js":"362","/backup/apps/magentotest/ui/src/pages/tables/QuoteIdMask.js":"363","/backup/apps/magentotest/ui/src/pages/tables/QuoteAddressItem.js":"364","/backup/apps/magentotest/ui/src/pages/tables/QuoteAddress.js":"365","/backup/apps/magentotest/ui/src/pages/tables/Quote.js":"366","/backup/apps/magentotest/ui/src/pages/tables/QueuePoisonPill.js":"367","/backup/apps/magentotest/ui/src/pages/tables/QueueMessageStatus.js":"368","/backup/apps/magentotest/ui/src/pages/tables/QueueMessage.js":"369","/backup/apps/magentotest/ui/src/pages/tables/Queue.js":"370","/backup/apps/magentotest/ui/src/pages/tables/QueueLock.js":"371","/backup/apps/magentotest/ui/src/pages/tables/ProductAlertStock.js":"372","/backup/apps/magentotest/ui/src/pages/tables/ProductAlertPrice.js":"373","/backup/apps/magentotest/ui/src/pages/tables/PersistentSession.js":"374","/backup/apps/magentotest/ui/src/pages/tables/PaypalSettlementReportRow.js":"375","/backup/apps/magentotest/ui/src/pages/tables/PaypalSettlementReport.js":"376","/backup/apps/magentotest/ui/src/pages/tables/PaypalPaymentTransaction.js":"377","/backup/apps/magentotest/ui/src/pages/tables/PaypalCert.js":"378","/backup/apps/magentotest/ui/src/pages/tables/PaypalBillingAgreementOrder.js":"379","/backup/apps/magentotest/ui/src/pages/tables/PaypalBillingAgreement.js":"380","/backup/apps/magentotest/ui/src/pages/tables/PasswordResetRequestEvent.js":"381","/backup/apps/magentotest/ui/src/pages/tables/PatchList.js":"382","/backup/apps/magentotest/ui/src/pages/tables/OauthTokenRequestLog.js":"383","/backup/apps/magentotest/ui/src/pages/tables/OauthToken.js":"384","/backup/apps/magentotest/ui/src/pages/tables/OauthNonce.js":"385","/backup/apps/magentotest/ui/src/pages/tables/OauthConsumer.js":"386","/backup/apps/magentotest/ui/src/pages/tables/NewsletterTemplate.js":"387","/backup/apps/magentotest/ui/src/pages/tables/NewsletterSubscriber.js":"388","/backup/apps/magentotest/ui/src/pages/tables/NewsletterQueueStoreLink.js":"389","/backup/apps/magentotest/ui/src/pages/tables/NewsletterQueueLink.js":"390","/backup/apps/magentotest/ui/src/pages/tables/NewsletterQueue.js":"391","/backup/apps/magentotest/ui/src/pages/tables/NewsletterProblem.js":"392","/backup/apps/magentotest/ui/src/pages/tables/MviewState.js":"393","/backup/apps/magentotest/ui/src/pages/tables/MspTfaUserConfig.js":"394","/backup/apps/magentotest/ui/src/pages/tables/MspTfaTrusted.js":"395","/backup/apps/magentotest/ui/src/pages/tables/MspTfaCountryCodes.js":"396","/backup/apps/magentotest/ui/src/pages/tables/MagentoOperation.js":"397","/backup/apps/magentotest/ui/src/pages/tables/MagentoBulk.js":"398","/backup/apps/magentotest/ui/src/pages/tables/MagentoAcknowledgedBulk.js":"399","/backup/apps/magentotest/ui/src/pages/tables/LayoutUpdate.js":"400","/backup/apps/magentotest/ui/src/pages/tables/LayoutLink.js":"401","/backup/apps/magentotest/ui/src/pages/tables/KlarnaPaymentsQuote.js":"402","/backup/apps/magentotest/ui/src/pages/tables/KlarnaCoreOrder.js":"403","/backup/apps/magentotest/ui/src/pages/tables/InventoryStockSalesChannel.js":"404"},{"size":478,"mtime":1634450907408,"results":"405","hashOfConfig":"406"},{"size":866,"mtime":1634450907616,"results":"407","hashOfConfig":"406"},{"size":362,"mtime":1634450907404,"results":"408","hashOfConfig":"406"},{"size":145,"mtime":1634450907616,"results":"409","hashOfConfig":"406"},{"size":485,"mtime":1634450907404,"results":"410","hashOfConfig":"406"},{"size":326,"mtime":1634450907404,"results":"411","hashOfConfig":"406"},{"size":67599,"mtime":1634450907636,"results":"412","hashOfConfig":"406"},{"size":2619,"mtime":1634450907636,"results":"413","hashOfConfig":"406"},{"size":2141,"mtime":1634450907432,"results":"414","hashOfConfig":"406"},{"size":1224,"mtime":1634450907428,"results":"415","hashOfConfig":"406"},{"size":1109,"mtime":1634450907432,"results":"416","hashOfConfig":"406"},{"size":1312,"mtime":1634450907432,"results":"417","hashOfConfig":"406"},{"size":1416,"mtime":1634450907436,"results":"418","hashOfConfig":"406"},{"size":1096,"mtime":1634450907436,"results":"419","hashOfConfig":"406"},{"size":1229,"mtime":1634450907440,"results":"420","hashOfConfig":"406"},{"size":1508,"mtime":1634450907436,"results":"421","hashOfConfig":"406"},{"size":1234,"mtime":1634450907440,"results":"422","hashOfConfig":"406"},{"size":1124,"mtime":1634450907440,"results":"423","hashOfConfig":"406"},{"size":1267,"mtime":1634450907440,"results":"424","hashOfConfig":"406"},{"size":1225,"mtime":1634450907440,"results":"425","hashOfConfig":"406"},{"size":1397,"mtime":1634450907440,"results":"426","hashOfConfig":"406"},{"size":1002,"mtime":1634450907440,"results":"427","hashOfConfig":"406"},{"size":1177,"mtime":1634450907440,"results":"428","hashOfConfig":"406"},{"size":1485,"mtime":1634450907440,"results":"429","hashOfConfig":"406"},{"size":1122,"mtime":1634450907440,"results":"430","hashOfConfig":"406"},{"size":1253,"mtime":1634450907448,"results":"431","hashOfConfig":"406"},{"size":1250,"mtime":1634450907448,"results":"432","hashOfConfig":"406"},{"size":1241,"mtime":1634450907448,"results":"433","hashOfConfig":"406"},{"size":1238,"mtime":1634450907448,"results":"434","hashOfConfig":"406"},{"size":1250,"mtime":1634450907448,"results":"435","hashOfConfig":"406"},{"size":1182,"mtime":1634450907448,"results":"436","hashOfConfig":"406"},{"size":1340,"mtime":1634450907448,"results":"437","hashOfConfig":"406"},{"size":1319,"mtime":1634450907448,"results":"438","hashOfConfig":"406"},{"size":1358,"mtime":1634450907448,"results":"439","hashOfConfig":"406"},{"size":1337,"mtime":1634450907448,"results":"440","hashOfConfig":"406"},{"size":1254,"mtime":1634450907448,"results":"441","hashOfConfig":"406"},{"size":1328,"mtime":1634450907448,"results":"442","hashOfConfig":"406"},{"size":1240,"mtime":1634450907452,"results":"443","hashOfConfig":"406"},{"size":2705,"mtime":1634450907452,"results":"444","hashOfConfig":"406"},{"size":1276,"mtime":1634450907452,"results":"445","hashOfConfig":"406"},{"size":1267,"mtime":1634450907452,"results":"446","hashOfConfig":"406"},{"size":1657,"mtime":1634450907452,"results":"447","hashOfConfig":"406"},{"size":1336,"mtime":1634450907452,"results":"448","hashOfConfig":"406"},{"size":1250,"mtime":1634450907452,"results":"449","hashOfConfig":"406"},{"size":1247,"mtime":1634450907452,"results":"450","hashOfConfig":"406"},{"size":1307,"mtime":1634450907452,"results":"451","hashOfConfig":"406"},{"size":1235,"mtime":1634450907456,"results":"452","hashOfConfig":"406"},{"size":1266,"mtime":1634450907460,"results":"453","hashOfConfig":"406"},{"size":1391,"mtime":1634450907460,"results":"454","hashOfConfig":"406"},{"size":1402,"mtime":1634450907460,"results":"455","hashOfConfig":"406"},{"size":1123,"mtime":1634450907460,"results":"456","hashOfConfig":"406"},{"size":1238,"mtime":1634450907460,"results":"457","hashOfConfig":"406"},{"size":1451,"mtime":1634450907460,"results":"458","hashOfConfig":"406"},{"size":1316,"mtime":1634450907460,"results":"459","hashOfConfig":"406"},{"size":1247,"mtime":1634450907460,"results":"460","hashOfConfig":"406"},{"size":1234,"mtime":1634450907460,"results":"461","hashOfConfig":"406"},{"size":1255,"mtime":1634450907460,"results":"462","hashOfConfig":"406"},{"size":1276,"mtime":1634450907460,"results":"463","hashOfConfig":"406"},{"size":1264,"mtime":1634450907460,"results":"464","hashOfConfig":"406"},{"size":1264,"mtime":1634450907460,"results":"465","hashOfConfig":"406"},{"size":1243,"mtime":1634450907464,"results":"466","hashOfConfig":"406"},{"size":1243,"mtime":1634450907464,"results":"467","hashOfConfig":"406"},{"size":1255,"mtime":1634450907464,"results":"468","hashOfConfig":"406"},{"size":1783,"mtime":1634450907464,"results":"469","hashOfConfig":"406"},{"size":1502,"mtime":1634450907464,"results":"470","hashOfConfig":"406"},{"size":1544,"mtime":1634450907468,"results":"471","hashOfConfig":"406"},{"size":1544,"mtime":1634450907464,"results":"472","hashOfConfig":"406"},{"size":1542,"mtime":1634450907472,"results":"473","hashOfConfig":"406"},{"size":1542,"mtime":1634450907472,"results":"474","hashOfConfig":"406"},{"size":1348,"mtime":1634450907472,"results":"475","hashOfConfig":"406"},{"size":1783,"mtime":1634450907472,"results":"476","hashOfConfig":"406"},{"size":1348,"mtime":1634450907472,"results":"477","hashOfConfig":"406"},{"size":1347,"mtime":1634450907472,"results":"478","hashOfConfig":"406"},{"size":1347,"mtime":1634450907472,"results":"479","hashOfConfig":"406"},{"size":1022,"mtime":1634450907516,"results":"480","hashOfConfig":"406"},{"size":1180,"mtime":1634450907516,"results":"481","hashOfConfig":"406"},{"size":1194,"mtime":1634450907512,"results":"482","hashOfConfig":"406"},{"size":1225,"mtime":1634450907512,"results":"483","hashOfConfig":"406"},{"size":1067,"mtime":1634450907512,"results":"484","hashOfConfig":"406"},{"size":1937,"mtime":1634450907512,"results":"485","hashOfConfig":"406"},{"size":1228,"mtime":1634450907512,"results":"486","hashOfConfig":"406"},{"size":1396,"mtime":1634450907512,"results":"487","hashOfConfig":"406"},{"size":1182,"mtime":1634450907512,"results":"488","hashOfConfig":"406"},{"size":1430,"mtime":1634450907452,"results":"489","hashOfConfig":"406"},{"size":1266,"mtime":1634450907452,"results":"490","hashOfConfig":"406"},{"size":1519,"mtime":1634450907512,"results":"491","hashOfConfig":"406"},{"size":1152,"mtime":1634450907512,"results":"492","hashOfConfig":"406"},{"size":1204,"mtime":1634450907512,"results":"493","hashOfConfig":"406"},{"size":1347,"mtime":1634450907512,"results":"494","hashOfConfig":"406"},{"size":1241,"mtime":1634450907512,"results":"495","hashOfConfig":"406"},{"size":1213,"mtime":1634450907512,"results":"496","hashOfConfig":"406"},{"size":1176,"mtime":1634450907512,"results":"497","hashOfConfig":"406"},{"size":1481,"mtime":1634450907512,"results":"498","hashOfConfig":"406"},{"size":1937,"mtime":1634450907408,"results":"499","hashOfConfig":"406"},{"size":724,"mtime":1634450907408,"results":"500","hashOfConfig":"406"},{"size":239,"mtime":1634450940055,"results":"501","hashOfConfig":"406"},{"size":42879,"mtime":1634450907648,"results":"502","hashOfConfig":"406"},{"size":26,"mtime":1634450907404,"results":"503","hashOfConfig":"406"},{"size":1426,"mtime":1634450907508,"results":"504","hashOfConfig":"406"},{"size":1462,"mtime":1634450907508,"results":"505","hashOfConfig":"406"},{"size":1769,"mtime":1634450907512,"results":"506","hashOfConfig":"406"},{"size":1329,"mtime":1634450907508,"results":"507","hashOfConfig":"406"},{"size":1727,"mtime":1634450907508,"results":"508","hashOfConfig":"406"},{"size":1287,"mtime":1634450907508,"results":"509","hashOfConfig":"406"},{"size":1323,"mtime":1634450907508,"results":"510","hashOfConfig":"406"},{"size":1260,"mtime":1634450907508,"results":"511","hashOfConfig":"406"},{"size":1694,"mtime":1634450907508,"results":"512","hashOfConfig":"406"},{"size":1823,"mtime":1634450907508,"results":"513","hashOfConfig":"406"},{"size":1587,"mtime":1634450907508,"results":"514","hashOfConfig":"406"},{"size":1724,"mtime":1634450907508,"results":"515","hashOfConfig":"406"},{"size":1237,"mtime":1634450907508,"results":"516","hashOfConfig":"406"},{"size":1045,"mtime":1634450907508,"results":"517","hashOfConfig":"406"},{"size":1106,"mtime":1634450907508,"results":"518","hashOfConfig":"406"},{"size":1149,"mtime":1634450907504,"results":"519","hashOfConfig":"406"},{"size":1222,"mtime":1634450907504,"results":"520","hashOfConfig":"406"},{"size":1282,"mtime":1634450907504,"results":"521","hashOfConfig":"406"},{"size":2119,"mtime":1634450907504,"results":"522","hashOfConfig":"406"},{"size":1273,"mtime":1634450907504,"results":"523","hashOfConfig":"406"},{"size":1256,"mtime":1634450907504,"results":"524","hashOfConfig":"406"},{"size":1270,"mtime":1634450907504,"results":"525","hashOfConfig":"406"},{"size":1282,"mtime":1634450907504,"results":"526","hashOfConfig":"406"},{"size":1285,"mtime":1634450907504,"results":"527","hashOfConfig":"406"},{"size":1346,"mtime":1634450907504,"results":"528","hashOfConfig":"406"},{"size":1465,"mtime":1634450907504,"results":"529","hashOfConfig":"406"},{"size":1193,"mtime":1634450907504,"results":"530","hashOfConfig":"406"},{"size":1169,"mtime":1634450907504,"results":"531","hashOfConfig":"406"},{"size":1226,"mtime":1634450907504,"results":"532","hashOfConfig":"406"},{"size":1175,"mtime":1634450907504,"results":"533","hashOfConfig":"406"},{"size":1112,"mtime":1634450907504,"results":"534","hashOfConfig":"406"},{"size":1421,"mtime":1634450907500,"results":"535","hashOfConfig":"406"},{"size":1169,"mtime":1634450907500,"results":"536","hashOfConfig":"406"},{"size":2044,"mtime":1634450907500,"results":"537","hashOfConfig":"406"},{"size":1298,"mtime":1634450907500,"results":"538","hashOfConfig":"406"},{"size":1159,"mtime":1634450907500,"results":"539","hashOfConfig":"406"},{"size":1985,"mtime":1634450907500,"results":"540","hashOfConfig":"406"},{"size":1605,"mtime":1634450907500,"results":"541","hashOfConfig":"406"},{"size":1163,"mtime":1634450907500,"results":"542","hashOfConfig":"406"},{"size":1610,"mtime":1634450907500,"results":"543","hashOfConfig":"406"},{"size":1117,"mtime":1634450907500,"results":"544","hashOfConfig":"406"},{"size":1116,"mtime":1634450907500,"results":"545","hashOfConfig":"406"},{"size":1176,"mtime":1634450907500,"results":"546","hashOfConfig":"406"},{"size":1180,"mtime":1634450907500,"results":"547","hashOfConfig":"406"},{"size":1100,"mtime":1634450907500,"results":"548","hashOfConfig":"406"},{"size":1256,"mtime":1634450907496,"results":"549","hashOfConfig":"406"},{"size":1208,"mtime":1634450907496,"results":"550","hashOfConfig":"406"},{"size":1169,"mtime":1634450907496,"results":"551","hashOfConfig":"406"},{"size":1155,"mtime":1634450907496,"results":"552","hashOfConfig":"406"},{"size":1125,"mtime":1634450907496,"results":"553","hashOfConfig":"406"},{"size":2544,"mtime":1634450907496,"results":"554","hashOfConfig":"406"},{"size":1059,"mtime":1634450907496,"results":"555","hashOfConfig":"406"},{"size":1171,"mtime":1634450907496,"results":"556","hashOfConfig":"406"},{"size":1162,"mtime":1634450907496,"results":"557","hashOfConfig":"406"},{"size":1159,"mtime":1634450907496,"results":"558","hashOfConfig":"406"},{"size":1171,"mtime":1634450907496,"results":"559","hashOfConfig":"406"},{"size":1174,"mtime":1634450907496,"results":"560","hashOfConfig":"406"},{"size":2680,"mtime":1634450907496,"results":"561","hashOfConfig":"406"},{"size":1345,"mtime":1634450907496,"results":"562","hashOfConfig":"406"},{"size":1752,"mtime":1634450907496,"results":"563","hashOfConfig":"406"},{"size":1192,"mtime":1634450907492,"results":"564","hashOfConfig":"406"},{"size":1180,"mtime":1634450907492,"results":"565","hashOfConfig":"406"},{"size":1183,"mtime":1634450907492,"results":"566","hashOfConfig":"406"},{"size":1192,"mtime":1634450907492,"results":"567","hashOfConfig":"406"},{"size":1195,"mtime":1634450907492,"results":"568","hashOfConfig":"406"},{"size":2453,"mtime":1634450907492,"results":"569","hashOfConfig":"406"},{"size":1400,"mtime":1634450907492,"results":"570","hashOfConfig":"406"},{"size":1020,"mtime":1634450907492,"results":"571","hashOfConfig":"406"},{"size":1190,"mtime":1634450907492,"results":"572","hashOfConfig":"406"},{"size":2167,"mtime":1634450907488,"results":"573","hashOfConfig":"406"},{"size":1025,"mtime":1634450907488,"results":"574","hashOfConfig":"406"},{"size":1320,"mtime":1634450907488,"results":"575","hashOfConfig":"406"},{"size":1060,"mtime":1634450907488,"results":"576","hashOfConfig":"406"},{"size":1139,"mtime":1634450907488,"results":"577","hashOfConfig":"406"},{"size":1124,"mtime":1634450907488,"results":"578","hashOfConfig":"406"},{"size":1403,"mtime":1634450907488,"results":"579","hashOfConfig":"406"},{"size":1042,"mtime":1634450907488,"results":"580","hashOfConfig":"406"},{"size":1651,"mtime":1634450907488,"results":"581","hashOfConfig":"406"},{"size":1508,"mtime":1634450907488,"results":"582","hashOfConfig":"406"},{"size":1487,"mtime":1634450907488,"results":"583","hashOfConfig":"406"},{"size":1630,"mtime":1634450907488,"results":"584","hashOfConfig":"406"},{"size":1131,"mtime":1634450907484,"results":"585","hashOfConfig":"406"},{"size":1152,"mtime":1634450907488,"results":"586","hashOfConfig":"406"},{"size":1699,"mtime":1634450907484,"results":"587","hashOfConfig":"406"},{"size":1072,"mtime":1634450907484,"results":"588","hashOfConfig":"406"},{"size":1258,"mtime":1634450907484,"results":"589","hashOfConfig":"406"},{"size":1270,"mtime":1634450907484,"results":"590","hashOfConfig":"406"},{"size":1258,"mtime":1634450907484,"results":"591","hashOfConfig":"406"},{"size":1115,"mtime":1634450907480,"results":"592","hashOfConfig":"406"},{"size":1249,"mtime":1634450907484,"results":"593","hashOfConfig":"406"},{"size":2801,"mtime":1634450907484,"results":"594","hashOfConfig":"406"},{"size":1222,"mtime":1634450907480,"results":"595","hashOfConfig":"406"},{"size":1057,"mtime":1634450907480,"results":"596","hashOfConfig":"406"},{"size":1117,"mtime":1634450907480,"results":"597","hashOfConfig":"406"},{"size":1232,"mtime":1634450907480,"results":"598","hashOfConfig":"406"},{"size":1293,"mtime":1634450907480,"results":"599","hashOfConfig":"406"},{"size":1054,"mtime":1634450907480,"results":"600","hashOfConfig":"406"},{"size":1197,"mtime":1634450907480,"results":"601","hashOfConfig":"406"},{"size":1215,"mtime":1634450907480,"results":"602","hashOfConfig":"406"},{"size":1277,"mtime":1634450907480,"results":"603","hashOfConfig":"406"},{"size":1187,"mtime":1634450907480,"results":"604","hashOfConfig":"406"},{"size":1249,"mtime":1634450907480,"results":"605","hashOfConfig":"406"},{"size":1546,"mtime":1634450907480,"results":"606","hashOfConfig":"406"},{"size":1052,"mtime":1634450907480,"results":"607","hashOfConfig":"406"},{"size":1228,"mtime":1634450907480,"results":"608","hashOfConfig":"406"},{"size":1216,"mtime":1634450907480,"results":"609","hashOfConfig":"406"},{"size":1228,"mtime":1634450907480,"results":"610","hashOfConfig":"406"},{"size":1255,"mtime":1634450907476,"results":"611","hashOfConfig":"406"},{"size":1180,"mtime":1634450907476,"results":"612","hashOfConfig":"406"},{"size":1200,"mtime":1634450907476,"results":"613","hashOfConfig":"406"},{"size":1210,"mtime":1634450907476,"results":"614","hashOfConfig":"406"},{"size":1511,"mtime":1634450907476,"results":"615","hashOfConfig":"406"},{"size":1523,"mtime":1634450907476,"results":"616","hashOfConfig":"406"},{"size":1338,"mtime":1634450907476,"results":"617","hashOfConfig":"406"},{"size":1338,"mtime":1634450907476,"results":"618","hashOfConfig":"406"},{"size":1407,"mtime":1634450907476,"results":"619","hashOfConfig":"406"},{"size":1407,"mtime":1634450907476,"results":"620","hashOfConfig":"406"},{"size":1511,"mtime":1634450907476,"results":"621","hashOfConfig":"406"},{"size":1584,"mtime":1634450907476,"results":"622","hashOfConfig":"406"},{"size":1584,"mtime":1634450907476,"results":"623","hashOfConfig":"406"},{"size":1288,"mtime":1634450907472,"results":"624","hashOfConfig":"406"},{"size":1288,"mtime":1634450907472,"results":"625","hashOfConfig":"406"},{"size":1200,"mtime":1634419576061,"results":"626","hashOfConfig":"406"},{"size":1224,"mtime":1634450907612,"results":"627","hashOfConfig":"406"},{"size":1336,"mtime":1634450907612,"results":"628","hashOfConfig":"406"},{"size":1206,"mtime":1634450907612,"results":"629","hashOfConfig":"406"},{"size":1070,"mtime":1634450907612,"results":"630","hashOfConfig":"406"},{"size":1432,"mtime":1634450907612,"results":"631","hashOfConfig":"406"},{"size":1354,"mtime":1634450907612,"results":"632","hashOfConfig":"406"},{"size":1303,"mtime":1634450907612,"results":"633","hashOfConfig":"406"},{"size":1140,"mtime":1634450907612,"results":"634","hashOfConfig":"406"},{"size":1726,"mtime":1634450907596,"results":"635","hashOfConfig":"406"},{"size":1095,"mtime":1634450907596,"results":"636","hashOfConfig":"406"},{"size":1065,"mtime":1634450907596,"results":"637","hashOfConfig":"406"},{"size":1105,"mtime":1634450907596,"results":"638","hashOfConfig":"406"},{"size":1110,"mtime":1634450907592,"results":"639","hashOfConfig":"406"},{"size":1120,"mtime":1634450907592,"results":"640","hashOfConfig":"406"},{"size":1080,"mtime":1634450907592,"results":"641","hashOfConfig":"406"},{"size":1068,"mtime":1634450907592,"results":"642","hashOfConfig":"406"},{"size":1056,"mtime":1634450907588,"results":"643","hashOfConfig":"406"},{"size":1051,"mtime":1634450907592,"results":"644","hashOfConfig":"406"},{"size":1113,"mtime":1634450907588,"results":"645","hashOfConfig":"406"},{"size":1611,"mtime":1634450907588,"results":"646","hashOfConfig":"406"},{"size":1215,"mtime":1634450907588,"results":"647","hashOfConfig":"406"},{"size":1062,"mtime":1634450907588,"results":"648","hashOfConfig":"406"},{"size":1548,"mtime":1634450907588,"results":"649","hashOfConfig":"406"},{"size":1438,"mtime":1634450907588,"results":"650","hashOfConfig":"406"},{"size":1251,"mtime":1634450907588,"results":"651","hashOfConfig":"406"},{"size":1329,"mtime":1634450907588,"results":"652","hashOfConfig":"406"},{"size":1417,"mtime":1634450907588,"results":"653","hashOfConfig":"406"},{"size":1417,"mtime":1634450907588,"results":"654","hashOfConfig":"406"},{"size":1768,"mtime":1634450907588,"results":"655","hashOfConfig":"406"},{"size":1773,"mtime":1634450907588,"results":"656","hashOfConfig":"406"},{"size":1085,"mtime":1634450907584,"results":"657","hashOfConfig":"406"},{"size":1438,"mtime":1634450907584,"results":"658","hashOfConfig":"406"},{"size":1443,"mtime":1634450907584,"results":"659","hashOfConfig":"406"},{"size":1088,"mtime":1634450907584,"results":"660","hashOfConfig":"406"},{"size":1212,"mtime":1634450907584,"results":"661","hashOfConfig":"406"},{"size":1150,"mtime":1634450907584,"results":"662","hashOfConfig":"406"},{"size":1425,"mtime":1634450907584,"results":"663","hashOfConfig":"406"},{"size":1425,"mtime":1634450907584,"results":"664","hashOfConfig":"406"},{"size":1076,"mtime":1634450907584,"results":"665","hashOfConfig":"406"},{"size":1258,"mtime":1634450907584,"results":"666","hashOfConfig":"406"},{"size":1229,"mtime":1634450907584,"results":"667","hashOfConfig":"406"},{"size":1488,"mtime":1634450907584,"results":"668","hashOfConfig":"406"},{"size":1314,"mtime":1634450907584,"results":"669","hashOfConfig":"406"},{"size":1268,"mtime":1634450907584,"results":"670","hashOfConfig":"406"},{"size":1268,"mtime":1634450907584,"results":"671","hashOfConfig":"406"},{"size":1289,"mtime":1634450907584,"results":"672","hashOfConfig":"406"},{"size":1283,"mtime":1634450907580,"results":"673","hashOfConfig":"406"},{"size":1626,"mtime":1634450907580,"results":"674","hashOfConfig":"406"},{"size":1475,"mtime":1634450907580,"results":"675","hashOfConfig":"406"},{"size":1095,"mtime":1634450907580,"results":"676","hashOfConfig":"406"},{"size":1091,"mtime":1634450907580,"results":"677","hashOfConfig":"406"},{"size":991,"mtime":1634450907580,"results":"678","hashOfConfig":"406"},{"size":991,"mtime":1634450907580,"results":"679","hashOfConfig":"406"},{"size":982,"mtime":1634450907580,"results":"680","hashOfConfig":"406"},{"size":982,"mtime":1634450907580,"results":"681","hashOfConfig":"406"},{"size":988,"mtime":1634450907580,"results":"682","hashOfConfig":"406"},{"size":988,"mtime":1634450907580,"results":"683","hashOfConfig":"406"},{"size":997,"mtime":1634450907580,"results":"684","hashOfConfig":"406"},{"size":997,"mtime":1634450907580,"results":"685","hashOfConfig":"406"},{"size":1125,"mtime":1634450907580,"results":"686","hashOfConfig":"406"},{"size":1150,"mtime":1634450907580,"results":"687","hashOfConfig":"406"},{"size":1529,"mtime":1634450907580,"results":"688","hashOfConfig":"406"},{"size":1036,"mtime":1634450907580,"results":"689","hashOfConfig":"406"},{"size":1203,"mtime":1634450907576,"results":"690","hashOfConfig":"406"},{"size":1138,"mtime":1634450907576,"results":"691","hashOfConfig":"406"},{"size":1175,"mtime":1634450907576,"results":"692","hashOfConfig":"406"},{"size":1066,"mtime":1634450907576,"results":"693","hashOfConfig":"406"},{"size":1116,"mtime":1634450907576,"results":"694","hashOfConfig":"406"},{"size":1838,"mtime":1634450907576,"results":"695","hashOfConfig":"406"},{"size":1586,"mtime":1634450907576,"results":"696","hashOfConfig":"406"},{"size":1817,"mtime":1634450907576,"results":"697","hashOfConfig":"406"},{"size":1617,"mtime":1634450907576,"results":"698","hashOfConfig":"406"},{"size":2511,"mtime":1634450907576,"results":"699","hashOfConfig":"406"},{"size":1467,"mtime":1634450907576,"results":"700","hashOfConfig":"406"},{"size":1482,"mtime":1634450907576,"results":"701","hashOfConfig":"406"},{"size":1584,"mtime":1634450907576,"results":"702","hashOfConfig":"406"},{"size":1629,"mtime":1634450907576,"results":"703","hashOfConfig":"406"},{"size":2277,"mtime":1634450907572,"results":"704","hashOfConfig":"406"},{"size":1326,"mtime":1634450907572,"results":"705","hashOfConfig":"406"},{"size":2093,"mtime":1634450907572,"results":"706","hashOfConfig":"406"},{"size":1464,"mtime":1634450907572,"results":"707","hashOfConfig":"406"},{"size":1169,"mtime":1634450907568,"results":"708","hashOfConfig":"406"},{"size":1454,"mtime":1634450907568,"results":"709","hashOfConfig":"406"},{"size":1439,"mtime":1634450907568,"results":"710","hashOfConfig":"406"},{"size":1563,"mtime":1634450907568,"results":"711","hashOfConfig":"406"},{"size":1555,"mtime":1634450907568,"results":"712","hashOfConfig":"406"},{"size":1575,"mtime":1634450907568,"results":"713","hashOfConfig":"406"},{"size":1177,"mtime":1634450907568,"results":"714","hashOfConfig":"406"},{"size":1101,"mtime":1634450907568,"results":"715","hashOfConfig":"406"},{"size":1455,"mtime":1634450907564,"results":"716","hashOfConfig":"406"},{"size":1028,"mtime":1634450907564,"results":"717","hashOfConfig":"406"},{"size":4819,"mtime":1634450907564,"results":"718","hashOfConfig":"406"},{"size":2766,"mtime":1634450907556,"results":"719","hashOfConfig":"406"},{"size":6834,"mtime":1634450907560,"results":"720","hashOfConfig":"406"},{"size":2459,"mtime":1634450907556,"results":"721","hashOfConfig":"406"},{"size":2459,"mtime":1634450907556,"results":"722","hashOfConfig":"406"},{"size":2525,"mtime":1634450907556,"results":"723","hashOfConfig":"406"},{"size":11514,"mtime":1634450907556,"results":"724","hashOfConfig":"406"},{"size":1538,"mtime":1634450907552,"results":"725","hashOfConfig":"406"},{"size":1523,"mtime":1634450907552,"results":"726","hashOfConfig":"406"},{"size":3396,"mtime":1634450907552,"results":"727","hashOfConfig":"406"},{"size":2714,"mtime":1634450907552,"results":"728","hashOfConfig":"406"},{"size":1323,"mtime":1634450907548,"results":"729","hashOfConfig":"406"},{"size":4422,"mtime":1634450907548,"results":"730","hashOfConfig":"406"},{"size":3405,"mtime":1634450907548,"results":"731","hashOfConfig":"406"},{"size":2593,"mtime":1634450907548,"results":"732","hashOfConfig":"406"},{"size":1332,"mtime":1634450907548,"results":"733","hashOfConfig":"406"},{"size":4763,"mtime":1634450907548,"results":"734","hashOfConfig":"406"},{"size":1450,"mtime":1634450907544,"results":"735","hashOfConfig":"406"},{"size":1453,"mtime":1634450907544,"results":"736","hashOfConfig":"406"},{"size":1447,"mtime":1634450907544,"results":"737","hashOfConfig":"406"},{"size":1021,"mtime":1634450907544,"results":"738","hashOfConfig":"406"},{"size":1319,"mtime":1634450907544,"results":"739","hashOfConfig":"406"},{"size":1030,"mtime":1634450907544,"results":"740","hashOfConfig":"406"},{"size":1030,"mtime":1634450907544,"results":"741","hashOfConfig":"406"},{"size":1318,"mtime":1634450907544,"results":"742","hashOfConfig":"406"},{"size":1200,"mtime":1634450907544,"results":"743","hashOfConfig":"406"},{"size":1142,"mtime":1634450907544,"results":"744","hashOfConfig":"406"},{"size":1166,"mtime":1634450907544,"results":"745","hashOfConfig":"406"},{"size":1279,"mtime":1634450907544,"results":"746","hashOfConfig":"406"},{"size":1285,"mtime":1634450907544,"results":"747","hashOfConfig":"406"},{"size":1143,"mtime":1634450907544,"results":"748","hashOfConfig":"406"},{"size":1304,"mtime":1634450907544,"results":"749","hashOfConfig":"406"},{"size":1455,"mtime":1634450907540,"results":"750","hashOfConfig":"406"},{"size":1458,"mtime":1634450907540,"results":"751","hashOfConfig":"406"},{"size":1452,"mtime":1634450907540,"results":"752","hashOfConfig":"406"},{"size":1116,"mtime":1634450907540,"results":"753","hashOfConfig":"406"},{"size":1325,"mtime":1634450907540,"results":"754","hashOfConfig":"406"},{"size":1310,"mtime":1634450907540,"results":"755","hashOfConfig":"406"},{"size":1136,"mtime":1634450907540,"results":"756","hashOfConfig":"406"},{"size":1075,"mtime":1634450907540,"results":"757","hashOfConfig":"406"},{"size":1021,"mtime":1634450907540,"results":"758","hashOfConfig":"406"},{"size":1460,"mtime":1634450907540,"results":"759","hashOfConfig":"406"},{"size":1528,"mtime":1634450907540,"results":"760","hashOfConfig":"406"},{"size":1192,"mtime":1634450907540,"results":"761","hashOfConfig":"406"},{"size":1030,"mtime":1634450907532,"results":"762","hashOfConfig":"406"},{"size":1192,"mtime":1634450907532,"results":"763","hashOfConfig":"406"},{"size":1663,"mtime":1634450907532,"results":"764","hashOfConfig":"406"},{"size":2344,"mtime":1634450907532,"results":"765","hashOfConfig":"406"},{"size":1199,"mtime":1634450907532,"results":"766","hashOfConfig":"406"},{"size":4681,"mtime":1634450907528,"results":"767","hashOfConfig":"406"},{"size":1081,"mtime":1634450907528,"results":"768","hashOfConfig":"406"},{"size":3710,"mtime":1634450907528,"results":"769","hashOfConfig":"406"},{"size":5524,"mtime":1634450907528,"results":"770","hashOfConfig":"406"},{"size":4489,"mtime":1634450907524,"results":"771","hashOfConfig":"406"},{"size":1035,"mtime":1634450907524,"results":"772","hashOfConfig":"406"},{"size":1282,"mtime":1634450907524,"results":"773","hashOfConfig":"406"},{"size":1068,"mtime":1634450907524,"results":"774","hashOfConfig":"406"},{"size":985,"mtime":1634450907524,"results":"775","hashOfConfig":"406"},{"size":1073,"mtime":1634450907524,"results":"776","hashOfConfig":"406"},{"size":1471,"mtime":1634450907524,"results":"777","hashOfConfig":"406"},{"size":1533,"mtime":1634450907524,"results":"778","hashOfConfig":"406"},{"size":1279,"mtime":1634450907524,"results":"779","hashOfConfig":"406"},{"size":2369,"mtime":1634450907524,"results":"780","hashOfConfig":"406"},{"size":1250,"mtime":1634450907524,"results":"781","hashOfConfig":"406"},{"size":1214,"mtime":1634450907520,"results":"782","hashOfConfig":"406"},{"size":1138,"mtime":1634450907520,"results":"783","hashOfConfig":"406"},{"size":1075,"mtime":1634450907520,"results":"784","hashOfConfig":"406"},{"size":1506,"mtime":1634450907520,"results":"785","hashOfConfig":"406"},{"size":1245,"mtime":1634450907520,"results":"786","hashOfConfig":"406"},{"size":1017,"mtime":1634450907520,"results":"787","hashOfConfig":"406"},{"size":1244,"mtime":1634450907520,"results":"788","hashOfConfig":"406"},{"size":1678,"mtime":1634450907520,"results":"789","hashOfConfig":"406"},{"size":1080,"mtime":1634450907520,"results":"790","hashOfConfig":"406"},{"size":1399,"mtime":1634450907520,"results":"791","hashOfConfig":"406"},{"size":1694,"mtime":1634450907520,"results":"792","hashOfConfig":"406"},{"size":1428,"mtime":1634450907520,"results":"793","hashOfConfig":"406"},{"size":1058,"mtime":1634450907520,"results":"794","hashOfConfig":"406"},{"size":1187,"mtime":1634450907516,"results":"795","hashOfConfig":"406"},{"size":1709,"mtime":1634450907516,"results":"796","hashOfConfig":"406"},{"size":1261,"mtime":1634450907516,"results":"797","hashOfConfig":"406"},{"size":1242,"mtime":1634450907516,"results":"798","hashOfConfig":"406"},{"size":1274,"mtime":1634450907516,"results":"799","hashOfConfig":"406"},{"size":1273,"mtime":1634450907516,"results":"800","hashOfConfig":"406"},{"size":1172,"mtime":1634450907516,"results":"801","hashOfConfig":"406"},{"size":1432,"mtime":1634450907516,"results":"802","hashOfConfig":"406"},{"size":1319,"mtime":1634450907516,"results":"803","hashOfConfig":"406"},{"size":1047,"mtime":1634450907516,"results":"804","hashOfConfig":"406"},{"size":1208,"mtime":1634450907516,"results":"805","hashOfConfig":"406"},{"size":1222,"mtime":1634450907516,"results":"806","hashOfConfig":"406"},{"size":1477,"mtime":1634450907516,"results":"807","hashOfConfig":"406"},{"size":1295,"mtime":1634450907516,"results":"808","hashOfConfig":"406"},{"size":1110,"mtime":1634450907516,"results":"809","hashOfConfig":"406"},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"158gibg",{"filePath":"812","messages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"816","messages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"818","messages":"819","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"820"},{"filePath":"821","messages":"822","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"823","messages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825"},{"filePath":"826","messages":"827","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828"},{"filePath":"829","messages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831"},{"filePath":"832","messages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"834"},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"837"},{"filePath":"838","messages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840"},{"filePath":"841","messages":"842","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"843"},{"filePath":"844","messages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846"},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849"},{"filePath":"850","messages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"852"},{"filePath":"853","messages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855"},{"filePath":"856","messages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"858"},{"filePath":"859","messages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861"},{"filePath":"862","messages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864"},{"filePath":"865","messages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"867"},{"filePath":"868","messages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870"},{"filePath":"871","messages":"872","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"873"},{"filePath":"874","messages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"876"},{"filePath":"877","messages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"879"},{"filePath":"880","messages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"882"},{"filePath":"883","messages":"884","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"885"},{"filePath":"886","messages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"888"},{"filePath":"889","messages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"891"},{"filePath":"892","messages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"894"},{"filePath":"895","messages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"897"},{"filePath":"898","messages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900"},{"filePath":"901","messages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903"},{"filePath":"904","messages":"905","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906"},{"filePath":"907","messages":"908","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909"},{"filePath":"910","messages":"911","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912"},{"filePath":"913","messages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915"},{"filePath":"916","messages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918"},{"filePath":"919","messages":"920","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921"},{"filePath":"922","messages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"924"},{"filePath":"925","messages":"926","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927"},{"filePath":"928","messages":"929","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930"},{"filePath":"931","messages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933"},{"filePath":"934","messages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936"},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939"},{"filePath":"940","messages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"942"},{"filePath":"943","messages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945"},{"filePath":"946","messages":"947","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"948"},{"filePath":"949","messages":"950","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"951"},{"filePath":"952","messages":"953","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"954"},{"filePath":"955","messages":"956","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"957"},{"filePath":"958","messages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960"},{"filePath":"961","messages":"962","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"963"},{"filePath":"964","messages":"965","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"966"},{"filePath":"967","messages":"968","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"969"},{"filePath":"970","messages":"971","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"972"},{"filePath":"973","messages":"974","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"975"},{"filePath":"976","messages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978"},{"filePath":"979","messages":"980","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"981"},{"filePath":"982","messages":"983","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"984"},{"filePath":"985","messages":"986","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"987"},{"filePath":"988","messages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"990"},{"filePath":"991","messages":"992","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"993"},{"filePath":"994","messages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"996"},{"filePath":"997","messages":"998","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"999"},{"filePath":"1000","messages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1002"},{"filePath":"1003","messages":"1004","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1005"},{"filePath":"1006","messages":"1007","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1008"},{"filePath":"1009","messages":"1010","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1011"},{"filePath":"1012","messages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014"},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017"},{"filePath":"1018","messages":"1019","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1020"},{"filePath":"1021","messages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1023"},{"filePath":"1024","messages":"1025","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1026"},{"filePath":"1027","messages":"1028","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1029"},{"filePath":"1030","messages":"1031","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1032"},{"filePath":"1033","messages":"1034","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1035"},{"filePath":"1036","messages":"1037","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1038"},{"filePath":"1039","messages":"1040","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1041"},{"filePath":"1042","messages":"1043","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1044"},{"filePath":"1045","messages":"1046","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1047"},{"filePath":"1048","messages":"1049","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1050"},{"filePath":"1051","messages":"1052","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1053"},{"filePath":"1054","messages":"1055","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1056"},{"filePath":"1057","messages":"1058","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1059"},{"filePath":"1060","messages":"1061","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1062"},{"filePath":"1063","messages":"1064","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1065"},{"filePath":"1066","messages":"1067","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1068"},{"filePath":"1069","messages":"1070","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1071"},{"filePath":"1072","messages":"1073","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1074"},{"filePath":"1075","messages":"1076","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1077"},{"filePath":"1078","messages":"1079","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1080"},{"filePath":"1081","messages":"1082","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1083"},{"filePath":"1084","messages":"1085","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1086"},{"filePath":"1087","messages":"1088","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1089","messages":"1090","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1091","messages":"1092","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1093","messages":"1094","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1095","messages":"1096","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1097"},{"filePath":"1098","messages":"1099","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1100"},{"filePath":"1101","messages":"1102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1103"},{"filePath":"1104","messages":"1105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1106"},{"filePath":"1107","messages":"1108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1109"},{"filePath":"1110","messages":"1111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1112"},{"filePath":"1113","messages":"1114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1115"},{"filePath":"1116","messages":"1117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1118"},{"filePath":"1119","messages":"1120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1121"},{"filePath":"1122","messages":"1123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1124"},{"filePath":"1125","messages":"1126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1127"},{"filePath":"1128","messages":"1129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1130"},{"filePath":"1131","messages":"1132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1133"},{"filePath":"1134","messages":"1135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1136"},{"filePath":"1137","messages":"1138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1139"},{"filePath":"1140","messages":"1141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1142"},{"filePath":"1143","messages":"1144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1145"},{"filePath":"1146","messages":"1147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1148"},{"filePath":"1149","messages":"1150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1151"},{"filePath":"1152","messages":"1153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1154"},{"filePath":"1155","messages":"1156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1157"},{"filePath":"1158","messages":"1159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1160"},{"filePath":"1161","messages":"1162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1163"},{"filePath":"1164","messages":"1165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1166"},{"filePath":"1167","messages":"1168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1169"},{"filePath":"1170","messages":"1171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1172"},{"filePath":"1173","messages":"1174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1175"},{"filePath":"1176","messages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1178"},{"filePath":"1179","messages":"1180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1181"},{"filePath":"1182","messages":"1183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1184"},{"filePath":"1185","messages":"1186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1187"},{"filePath":"1188","messages":"1189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1190"},{"filePath":"1191","messages":"1192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1193"},{"filePath":"1194","messages":"1195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1196"},{"filePath":"1197","messages":"1198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1199"},{"filePath":"1200","messages":"1201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1202"},{"filePath":"1203","messages":"1204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1205"},{"filePath":"1206","messages":"1207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1208"},{"filePath":"1209","messages":"1210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1211"},{"filePath":"1212","messages":"1213","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1214"},{"filePath":"1215","messages":"1216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1217"},{"filePath":"1218","messages":"1219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1220"},{"filePath":"1221","messages":"1222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1223"},{"filePath":"1224","messages":"1225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1226"},{"filePath":"1227","messages":"1228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1229"},{"filePath":"1230","messages":"1231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1232"},{"filePath":"1233","messages":"1234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1235"},{"filePath":"1236","messages":"1237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1238"},{"filePath":"1239","messages":"1240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1241"},{"filePath":"1242","messages":"1243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1244"},{"filePath":"1245","messages":"1246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1247"},{"filePath":"1248","messages":"1249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1250"},{"filePath":"1251","messages":"1252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1253"},{"filePath":"1254","messages":"1255","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1256"},{"filePath":"1257","messages":"1258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1259"},{"filePath":"1260","messages":"1261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1262"},{"filePath":"1263","messages":"1264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1265"},{"filePath":"1266","messages":"1267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1268"},{"filePath":"1269","messages":"1270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1271"},{"filePath":"1272","messages":"1273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1274"},{"filePath":"1275","messages":"1276","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1277"},{"filePath":"1278","messages":"1279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1280"},{"filePath":"1281","messages":"1282","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1283"},{"filePath":"1284","messages":"1285","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1286"},{"filePath":"1287","messages":"1288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1289"},{"filePath":"1290","messages":"1291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1292"},{"filePath":"1293","messages":"1294","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1295"},{"filePath":"1296","messages":"1297","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1298"},{"filePath":"1299","messages":"1300","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1301"},{"filePath":"1302","messages":"1303","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1304"},{"filePath":"1305","messages":"1306","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1307"},{"filePath":"1308","messages":"1309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1310"},{"filePath":"1311","messages":"1312","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1313"},{"filePath":"1314","messages":"1315","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1316"},{"filePath":"1317","messages":"1318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1319"},{"filePath":"1320","messages":"1321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1322"},{"filePath":"1323","messages":"1324","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1325"},{"filePath":"1326","messages":"1327","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1328"},{"filePath":"1329","messages":"1330","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1331"},{"filePath":"1332","messages":"1333","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1334"},{"filePath":"1335","messages":"1336","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1337"},{"filePath":"1338","messages":"1339","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1340"},{"filePath":"1341","messages":"1342","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1343"},{"filePath":"1344","messages":"1345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1346"},{"filePath":"1347","messages":"1348","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1349"},{"filePath":"1350","messages":"1351","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1352"},{"filePath":"1353","messages":"1354","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1355"},{"filePath":"1356","messages":"1357","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1358"},{"filePath":"1359","messages":"1360","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1361"},{"filePath":"1362","messages":"1363","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1364"},{"filePath":"1365","messages":"1366","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1367"},{"filePath":"1368","messages":"1369","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1370"},{"filePath":"1371","messages":"1372","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1373"},{"filePath":"1374","messages":"1375","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1376"},{"filePath":"1377","messages":"1378","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1379"},{"filePath":"1380","messages":"1381","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1382"},{"filePath":"1383","messages":"1384","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1385"},{"filePath":"1386","messages":"1387","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1388"},{"filePath":"1389","messages":"1390","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1391"},{"filePath":"1392","messages":"1393","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1394"},{"filePath":"1395","messages":"1396","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1397"},{"filePath":"1398","messages":"1399","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1400"},{"filePath":"1401","messages":"1402","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1403"},{"filePath":"1404","messages":"1405","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1406"},{"filePath":"1407","messages":"1408","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1409"},{"filePath":"1410","messages":"1411","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1412"},{"filePath":"1413","messages":"1414","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1415"},{"filePath":"1416","messages":"1417","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1418"},{"filePath":"1419","messages":"1420","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1421"},{"filePath":"1422","messages":"1423","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1424"},{"filePath":"1425","messages":"1426","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1427"},{"filePath":"1428","messages":"1429","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1430"},{"filePath":"1431","messages":"1432","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1433"},{"filePath":"1434","messages":"1435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1436"},{"filePath":"1437","messages":"1438","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1439"},{"filePath":"1440","messages":"1441","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1442"},{"filePath":"1443","messages":"1444","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1445"},{"filePath":"1446","messages":"1447","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1448"},{"filePath":"1449","messages":"1450","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1451"},{"filePath":"1452","messages":"1453","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1454"},{"filePath":"1455","messages":"1456","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1457"},{"filePath":"1458","messages":"1459","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1460"},{"filePath":"1461","messages":"1462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1463","messages":"1464","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1465"},{"filePath":"1466","messages":"1467","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1468"},{"filePath":"1469","messages":"1470","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1471"},{"filePath":"1472","messages":"1473","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1474"},{"filePath":"1475","messages":"1476","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1477"},{"filePath":"1478","messages":"1479","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1480"},{"filePath":"1481","messages":"1482","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1483"},{"filePath":"1484","messages":"1485","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1486"},{"filePath":"1487","messages":"1488","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1489"},{"filePath":"1490","messages":"1491","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1492"},{"filePath":"1493","messages":"1494","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1495"},{"filePath":"1496","messages":"1497","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1498"},{"filePath":"1499","messages":"1500","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1501"},{"filePath":"1502","messages":"1503","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1504"},{"filePath":"1505","messages":"1506","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1507"},{"filePath":"1508","messages":"1509","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1510"},{"filePath":"1511","messages":"1512","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1513"},{"filePath":"1514","messages":"1515","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1516"},{"filePath":"1517","messages":"1518","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1519"},{"filePath":"1520","messages":"1521","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1522"},{"filePath":"1523","messages":"1524","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1525"},{"filePath":"1526","messages":"1527","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1528"},{"filePath":"1529","messages":"1530","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1531"},{"filePath":"1532","messages":"1533","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1534"},{"filePath":"1535","messages":"1536","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1537"},{"filePath":"1538","messages":"1539","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1540"},{"filePath":"1541","messages":"1542","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1543"},{"filePath":"1544","messages":"1545","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1546"},{"filePath":"1547","messages":"1548","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1549"},{"filePath":"1550","messages":"1551","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1552"},{"filePath":"1553","messages":"1554","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1555"},{"filePath":"1556","messages":"1557","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1558"},{"filePath":"1559","messages":"1560","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1561"},{"filePath":"1562","messages":"1563","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1564"},{"filePath":"1565","messages":"1566","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1567"},{"filePath":"1568","messages":"1569","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1570"},{"filePath":"1571","messages":"1572","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1573"},{"filePath":"1574","messages":"1575","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1576"},{"filePath":"1577","messages":"1578","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1579"},{"filePath":"1580","messages":"1581","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1582"},{"filePath":"1583","messages":"1584","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1585"},{"filePath":"1586","messages":"1587","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1588"},{"filePath":"1589","messages":"1590","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1591"},{"filePath":"1592","messages":"1593","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1594"},{"filePath":"1595","messages":"1596","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1597"},{"filePath":"1598","messages":"1599","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1600"},{"filePath":"1601","messages":"1602","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1603"},{"filePath":"1604","messages":"1605","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1606"},{"filePath":"1607","messages":"1608","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1609"},{"filePath":"1610","messages":"1611","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1612"},{"filePath":"1613","messages":"1614","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1615"},{"filePath":"1616","messages":"1617","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1618"},{"filePath":"1619","messages":"1620","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1621"},{"filePath":"1622","messages":"1623","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1624"},{"filePath":"1625","messages":"1626","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1627"},{"filePath":"1628","messages":"1629","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1630"},{"filePath":"1631","messages":"1632","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1633"},{"filePath":"1634","messages":"1635","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1636"},{"filePath":"1637","messages":"1638","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1639"},{"filePath":"1640","messages":"1641","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1642"},{"filePath":"1643","messages":"1644","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1645"},{"filePath":"1646","messages":"1647","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1648"},{"filePath":"1649","messages":"1650","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1651"},{"filePath":"1652","messages":"1653","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1654"},{"filePath":"1655","messages":"1656","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1657"},{"filePath":"1658","messages":"1659","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1660"},{"filePath":"1661","messages":"1662","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1663"},{"filePath":"1664","messages":"1665","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1666"},{"filePath":"1667","messages":"1668","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1669"},{"filePath":"1670","messages":"1671","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1672"},{"filePath":"1673","messages":"1674","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1675"},{"filePath":"1676","messages":"1677","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1678"},{"filePath":"1679","messages":"1680","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1681"},{"filePath":"1682","messages":"1683","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1684"},{"filePath":"1685","messages":"1686","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1687"},{"filePath":"1688","messages":"1689","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1690"},{"filePath":"1691","messages":"1692","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1693"},{"filePath":"1694","messages":"1695","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1696"},{"filePath":"1697","messages":"1698","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1699"},{"filePath":"1700","messages":"1701","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1702"},{"filePath":"1703","messages":"1704","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1705"},{"filePath":"1706","messages":"1707","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1708"},{"filePath":"1709","messages":"1710","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1711"},{"filePath":"1712","messages":"1713","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1714"},{"filePath":"1715","messages":"1716","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1717"},{"filePath":"1718","messages":"1719","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1720"},{"filePath":"1721","messages":"1722","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1723"},{"filePath":"1724","messages":"1725","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1726"},{"filePath":"1727","messages":"1728","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1729"},{"filePath":"1730","messages":"1731","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1732"},{"filePath":"1733","messages":"1734","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1735"},{"filePath":"1736","messages":"1737","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1738"},{"filePath":"1739","messages":"1740","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1741"},{"filePath":"1742","messages":"1743","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1744"},{"filePath":"1745","messages":"1746","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1747"},{"filePath":"1748","messages":"1749","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1750"},{"filePath":"1751","messages":"1752","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1753"},{"filePath":"1754","messages":"1755","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1756"},{"filePath":"1757","messages":"1758","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1759"},{"filePath":"1760","messages":"1761","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1762"},{"filePath":"1763","messages":"1764","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1765"},{"filePath":"1766","messages":"1767","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1768"},{"filePath":"1769","messages":"1770","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1771"},{"filePath":"1772","messages":"1773","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1774"},{"filePath":"1775","messages":"1776","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1777"},{"filePath":"1778","messages":"1779","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1780"},{"filePath":"1781","messages":"1782","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1783"},{"filePath":"1784","messages":"1785","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1786"},{"filePath":"1787","messages":"1788","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1789"},{"filePath":"1790","messages":"1791","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1792"},{"filePath":"1793","messages":"1794","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1795"},{"filePath":"1796","messages":"1797","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1798"},{"filePath":"1799","messages":"1800","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1801"},{"filePath":"1802","messages":"1803","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1804"},{"filePath":"1805","messages":"1806","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1807"},{"filePath":"1808","messages":"1809","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1810"},{"filePath":"1811","messages":"1812","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1813"},{"filePath":"1814","messages":"1815","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1816"},{"filePath":"1817","messages":"1818","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1819"},{"filePath":"1820","messages":"1821","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1822"},{"filePath":"1823","messages":"1824","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1825"},{"filePath":"1826","messages":"1827","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1828"},{"filePath":"1829","messages":"1830","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1831"},{"filePath":"1832","messages":"1833","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1834"},{"filePath":"1835","messages":"1836","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1837"},{"filePath":"1838","messages":"1839","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1840"},{"filePath":"1841","messages":"1842","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1843"},{"filePath":"1844","messages":"1845","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1846"},{"filePath":"1847","messages":"1848","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1849"},{"filePath":"1850","messages":"1851","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1852"},{"filePath":"1853","messages":"1854","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1855"},{"filePath":"1856","messages":"1857","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1858"},{"filePath":"1859","messages":"1860","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1861"},{"filePath":"1862","messages":"1863","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1864"},{"filePath":"1865","messages":"1866","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1867"},{"filePath":"1868","messages":"1869","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1870"},{"filePath":"1871","messages":"1872","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1873"},{"filePath":"1874","messages":"1875","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1876"},{"filePath":"1877","messages":"1878","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1879"},{"filePath":"1880","messages":"1881","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1882"},{"filePath":"1883","messages":"1884","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1885"},{"filePath":"1886","messages":"1887","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1888"},{"filePath":"1889","messages":"1890","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1891"},{"filePath":"1892","messages":"1893","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1894"},{"filePath":"1895","messages":"1896","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1897"},{"filePath":"1898","messages":"1899","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1900"},{"filePath":"1901","messages":"1902","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1903"},{"filePath":"1904","messages":"1905","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1906"},{"filePath":"1907","messages":"1908","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1909"},{"filePath":"1910","messages":"1911","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1912"},{"filePath":"1913","messages":"1914","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1915"},{"filePath":"1916","messages":"1917","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1918"},{"filePath":"1919","messages":"1920","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1921"},{"filePath":"1922","messages":"1923","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1924"},{"filePath":"1925","messages":"1926","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1927"},{"filePath":"1928","messages":"1929","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1930"},{"filePath":"1931","messages":"1932","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1933"},{"filePath":"1934","messages":"1935","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1936"},{"filePath":"1937","messages":"1938","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1939"},{"filePath":"1940","messages":"1941","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1942"},{"filePath":"1943","messages":"1944","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1945"},{"filePath":"1946","messages":"1947","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1948"},{"filePath":"1949","messages":"1950","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1951"},{"filePath":"1952","messages":"1953","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1954"},{"filePath":"1955","messages":"1956","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1957"},{"filePath":"1958","messages":"1959","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1960"},{"filePath":"1961","messages":"1962","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1963"},{"filePath":"1964","messages":"1965","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1966"},{"filePath":"1967","messages":"1968","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1969"},{"filePath":"1970","messages":"1971","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1972"},{"filePath":"1973","messages":"1974","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1975"},{"filePath":"1976","messages":"1977","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1978"},{"filePath":"1979","messages":"1980","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1981"},{"filePath":"1982","messages":"1983","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1984"},{"filePath":"1985","messages":"1986","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1987"},{"filePath":"1988","messages":"1989","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1990"},{"filePath":"1991","messages":"1992","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1993"},{"filePath":"1994","messages":"1995","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1996"},{"filePath":"1997","messages":"1998","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1999"},{"filePath":"2000","messages":"2001","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2002"},{"filePath":"2003","messages":"2004","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2005"},{"filePath":"2006","messages":"2007","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2008"},{"filePath":"2009","messages":"2010","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2011"},"/backup/apps/magentotest/ui/src/index.js",[],"/backup/apps/magentotest/ui/src/App.js",[],"/backup/apps/magentotest/ui/src/reportWebVitals.js",[],"/backup/apps/magentotest/ui/src/init.js",[],"/backup/apps/magentotest/ui/src/pages/Overview.js",["2012","2013","2014","2015","2016"],"import React from 'react';\nimport {Container, Row, Col, Image} from 'react-bootstrap';\nimport CardBox from '../components/Card';\nimport DatabaseSchema from '../assets/database-schema.png';\nimport htmlSample from '../assets/html-sample.jpg'\n\nconst Overview = () => {\n    return (\n        <React.Fragment>\n            <Container className='mt-5'>\n                <CardBox />\n                <br></br>\n\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default Overview;\n","/backup/apps/magentotest/ui/src/pages/Query.js",[],"/backup/apps/magentotest/ui/src/components/TableMenu.js",["2017"],"import React from 'react';\nimport init from \"../init\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AdminPasswords from '../pages/tables/AdminPasswords';\nimport AdminSystemMessages from '../pages/tables/AdminSystemMessages';\nimport AdminUser from '../pages/tables/AdminUser';\nimport AdminUserSession from '../pages/tables/AdminUserSession';\nimport AdminnotificationInbox from '../pages/tables/AdminnotificationInbox';\nimport AmazonCustomer from '../pages/tables/AmazonCustomer';\nimport AmazonPendingAuthorization from '../pages/tables/AmazonPendingAuthorization';\nimport AmazonPendingCapture from '../pages/tables/AmazonPendingCapture';\nimport AmazonPendingRefund from '../pages/tables/AmazonPendingRefund';\nimport AmazonQuote from '../pages/tables/AmazonQuote';\nimport AmazonSalesOrder from '../pages/tables/AmazonSalesOrder';\nimport AuthorizationRole from '../pages/tables/AuthorizationRole';\nimport AuthorizationRule from '../pages/tables/AuthorizationRule';\nimport Cache from '../pages/tables/Cache';\nimport CacheTag from '../pages/tables/CacheTag';\nimport CaptchaLog from '../pages/tables/CaptchaLog';\nimport CatalogCategoryEntity from '../pages/tables/CatalogCategoryEntity';\nimport CatalogCategoryEntityDatetime from '../pages/tables/CatalogCategoryEntityDatetime';\nimport CatalogCategoryEntityDecimal from '../pages/tables/CatalogCategoryEntityDecimal';\nimport CatalogCategoryEntityInt from '../pages/tables/CatalogCategoryEntityInt';\nimport CatalogCategoryEntityText from '../pages/tables/CatalogCategoryEntityText';\nimport CatalogCategoryEntityVarchar from '../pages/tables/CatalogCategoryEntityVarchar';\nimport CatalogCategoryProduct from '../pages/tables/CatalogCategoryProduct';\nimport CatalogCategoryProductIndex from '../pages/tables/CatalogCategoryProductIndex';\nimport CatalogCategoryProductIndexReplica from '../pages/tables/CatalogCategoryProductIndexReplica';\nimport CatalogCategoryProductIndexStore1 from '../pages/tables/CatalogCategoryProductIndexStore1';\nimport CatalogCategoryProductIndexStore1Replica from '../pages/tables/CatalogCategoryProductIndexStore1Replica';\nimport CatalogCategoryProductIndexTmp from '../pages/tables/CatalogCategoryProductIndexTmp';\nimport CatalogCompareItem from '../pages/tables/CatalogCompareItem';\nimport CatalogEavAttribute from '../pages/tables/CatalogEavAttribute';\nimport CatalogProductBundleOption from '../pages/tables/CatalogProductBundleOption';\nimport CatalogProductBundleOptionValue from '../pages/tables/CatalogProductBundleOptionValue';\nimport CatalogProductBundlePriceIndex from '../pages/tables/CatalogProductBundlePriceIndex';\nimport CatalogProductBundleSelection from '../pages/tables/CatalogProductBundleSelection';\nimport CatalogProductBundleSelectionPrice from '../pages/tables/CatalogProductBundleSelectionPrice';\nimport CatalogProductBundleStockIndex from '../pages/tables/CatalogProductBundleStockIndex';\nimport CatalogProductEntity from '../pages/tables/CatalogProductEntity';\nimport CatalogProductEntityDatetime from '../pages/tables/CatalogProductEntityDatetime';\nimport CatalogProductEntityDecimal from '../pages/tables/CatalogProductEntityDecimal';\nimport CatalogProductEntityGallery from '../pages/tables/CatalogProductEntityGallery';\nimport CatalogProductEntityInt from '../pages/tables/CatalogProductEntityInt';\nimport CatalogProductEntityMediaGallery from '../pages/tables/CatalogProductEntityMediaGallery';\nimport CatalogProductEntityMediaGalleryValue from '../pages/tables/CatalogProductEntityMediaGalleryValue';\nimport CatalogProductEntityMediaGalleryValueToEntity from '../pages/tables/CatalogProductEntityMediaGalleryValueToEntity';\nimport CatalogProductEntityMediaGalleryValueVideo from '../pages/tables/CatalogProductEntityMediaGalleryValueVideo';\nimport CatalogProductEntityText from '../pages/tables/CatalogProductEntityText';\nimport CatalogProductEntityTierPrice from '../pages/tables/CatalogProductEntityTierPrice';\nimport CatalogProductEntityVarchar from '../pages/tables/CatalogProductEntityVarchar';\nimport CatalogProductFrontendAction from '../pages/tables/CatalogProductFrontendAction';\nimport CatalogProductIndexEav from '../pages/tables/CatalogProductIndexEav';\nimport CatalogProductIndexEavDecimal from '../pages/tables/CatalogProductIndexEavDecimal';\nimport CatalogProductIndexEavDecimalIdx from '../pages/tables/CatalogProductIndexEavDecimalIdx';\nimport CatalogProductIndexEavDecimalReplica from '../pages/tables/CatalogProductIndexEavDecimalReplica';\nimport CatalogProductIndexEavDecimalTmp from '../pages/tables/CatalogProductIndexEavDecimalTmp';\nimport CatalogProductIndexEavIdx from '../pages/tables/CatalogProductIndexEavIdx';\nimport CatalogProductIndexEavReplica from '../pages/tables/CatalogProductIndexEavReplica';\nimport CatalogProductIndexEavTmp from '../pages/tables/CatalogProductIndexEavTmp';\nimport CatalogProductIndexPrice from '../pages/tables/CatalogProductIndexPrice';\nimport CatalogProductIndexPriceBundleIdx from '../pages/tables/CatalogProductIndexPriceBundleIdx';\nimport CatalogProductIndexPriceBundleOptIdx from '../pages/tables/CatalogProductIndexPriceBundleOptIdx';\nimport CatalogProductIndexPriceBundleOptTmp from '../pages/tables/CatalogProductIndexPriceBundleOptTmp';\nimport CatalogProductIndexPriceBundleSelIdx from '../pages/tables/CatalogProductIndexPriceBundleSelIdx';\nimport CatalogProductIndexPriceBundleSelTmp from '../pages/tables/CatalogProductIndexPriceBundleSelTmp';\nimport CatalogProductIndexPriceBundleTmp from '../pages/tables/CatalogProductIndexPriceBundleTmp';\nimport CatalogProductIndexPriceCfgOptAgrIdx from '../pages/tables/CatalogProductIndexPriceCfgOptAgrIdx';\nimport CatalogProductIndexPriceCfgOptAgrTmp from '../pages/tables/CatalogProductIndexPriceCfgOptAgrTmp';\nimport CatalogProductIndexPriceCfgOptIdx from '../pages/tables/CatalogProductIndexPriceCfgOptIdx';\nimport CatalogProductIndexPriceCfgOptTmp from '../pages/tables/CatalogProductIndexPriceCfgOptTmp';\nimport CatalogProductIndexPriceDownlodIdx from '../pages/tables/CatalogProductIndexPriceDownlodIdx';\nimport CatalogProductIndexPriceDownlodTmp from '../pages/tables/CatalogProductIndexPriceDownlodTmp';\nimport CatalogProductIndexPriceFinalIdx from '../pages/tables/CatalogProductIndexPriceFinalIdx';\nimport CatalogProductIndexPriceFinalTmp from '../pages/tables/CatalogProductIndexPriceFinalTmp';\nimport CatalogProductIndexPriceIdx from '../pages/tables/CatalogProductIndexPriceIdx';\nimport CatalogProductIndexPriceOptAgrIdx from '../pages/tables/CatalogProductIndexPriceOptAgrIdx';\nimport CatalogProductIndexPriceOptAgrTmp from '../pages/tables/CatalogProductIndexPriceOptAgrTmp';\nimport CatalogProductIndexPriceOptIdx from '../pages/tables/CatalogProductIndexPriceOptIdx';\nimport CatalogProductIndexPriceOptTmp from '../pages/tables/CatalogProductIndexPriceOptTmp';\nimport CatalogProductIndexPriceReplica from '../pages/tables/CatalogProductIndexPriceReplica';\nimport CatalogProductIndexPriceTmp from '../pages/tables/CatalogProductIndexPriceTmp';\nimport CatalogProductIndexTierPrice from '../pages/tables/CatalogProductIndexTierPrice';\nimport CatalogProductIndexWebsite from '../pages/tables/CatalogProductIndexWebsite';\nimport CatalogProductLink from '../pages/tables/CatalogProductLink';\nimport CatalogProductLinkAttribute from '../pages/tables/CatalogProductLinkAttribute';\nimport CatalogProductLinkAttributeDecimal from '../pages/tables/CatalogProductLinkAttributeDecimal';\nimport CatalogProductLinkAttributeInt from '../pages/tables/CatalogProductLinkAttributeInt';\nimport CatalogProductLinkAttributeVarchar from '../pages/tables/CatalogProductLinkAttributeVarchar';\nimport CatalogProductLinkType from '../pages/tables/CatalogProductLinkType';\nimport CatalogProductOption from '../pages/tables/CatalogProductOption';\nimport CatalogProductOptionPrice from '../pages/tables/CatalogProductOptionPrice';\nimport CatalogProductOptionTitle from '../pages/tables/CatalogProductOptionTitle';\nimport CatalogProductOptionTypePrice from '../pages/tables/CatalogProductOptionTypePrice';\nimport CatalogProductOptionTypeTitle from '../pages/tables/CatalogProductOptionTypeTitle';\nimport CatalogProductOptionTypeValue from '../pages/tables/CatalogProductOptionTypeValue';\nimport CatalogProductRelation from '../pages/tables/CatalogProductRelation';\nimport CatalogProductSuperAttribute from '../pages/tables/CatalogProductSuperAttribute';\nimport CatalogProductSuperAttributeLabel from '../pages/tables/CatalogProductSuperAttributeLabel';\nimport CatalogProductSuperLink from '../pages/tables/CatalogProductSuperLink';\nimport CatalogProductWebsite from '../pages/tables/CatalogProductWebsite';\nimport CatalogUrlRewriteProductCategory from '../pages/tables/CatalogUrlRewriteProductCategory';\nimport CataloginventoryStock from '../pages/tables/CataloginventoryStock';\nimport CataloginventoryStockItem from '../pages/tables/CataloginventoryStockItem';\nimport CataloginventoryStockStatus from '../pages/tables/CataloginventoryStockStatus';\nimport CataloginventoryStockStatusIdx from '../pages/tables/CataloginventoryStockStatusIdx';\nimport CataloginventoryStockStatusReplica from '../pages/tables/CataloginventoryStockStatusReplica';\nimport CataloginventoryStockStatusTmp from '../pages/tables/CataloginventoryStockStatusTmp';\nimport Catalogrule from '../pages/tables/Catalogrule';\nimport CatalogruleCustomerGroup from '../pages/tables/CatalogruleCustomerGroup';\nimport CatalogruleGroupWebsite from '../pages/tables/CatalogruleGroupWebsite';\nimport CatalogruleGroupWebsiteReplica from '../pages/tables/CatalogruleGroupWebsiteReplica';\nimport CatalogruleProduct from '../pages/tables/CatalogruleProduct';\nimport CatalogruleProductPrice from '../pages/tables/CatalogruleProductPrice';\nimport CatalogruleProductPriceReplica from '../pages/tables/CatalogruleProductPriceReplica';\nimport CatalogruleProductReplica from '../pages/tables/CatalogruleProductReplica';\nimport CatalogruleWebsite from '../pages/tables/CatalogruleWebsite';\nimport CatalogsearchFulltextScope1 from '../pages/tables/CatalogsearchFulltextScope1';\nimport CatalogsearchRecommendations from '../pages/tables/CatalogsearchRecommendations';\nimport CheckoutAgreement from '../pages/tables/CheckoutAgreement';\nimport CheckoutAgreementStore from '../pages/tables/CheckoutAgreementStore';\nimport CmsBlock from '../pages/tables/CmsBlock';\nimport CmsBlockStore from '../pages/tables/CmsBlockStore';\nimport CmsPage from '../pages/tables/CmsPage';\nimport CmsPageStore from '../pages/tables/CmsPageStore';\nimport CoreConfigData from '../pages/tables/CoreConfigData';\nimport CronSchedule from '../pages/tables/CronSchedule';\nimport CustomerAddressEntity from '../pages/tables/CustomerAddressEntity';\nimport CustomerAddressEntityDatetime from '../pages/tables/CustomerAddressEntityDatetime';\nimport CustomerAddressEntityDecimal from '../pages/tables/CustomerAddressEntityDecimal';\nimport CustomerAddressEntityInt from '../pages/tables/CustomerAddressEntityInt';\nimport CustomerAddressEntityText from '../pages/tables/CustomerAddressEntityText';\nimport CustomerAddressEntityVarchar from '../pages/tables/CustomerAddressEntityVarchar';\nimport CustomerEavAttribute from '../pages/tables/CustomerEavAttribute';\nimport CustomerEavAttributeWebsite from '../pages/tables/CustomerEavAttributeWebsite';\nimport CustomerEntity from '../pages/tables/CustomerEntity';\nimport CustomerEntityDatetime from '../pages/tables/CustomerEntityDatetime';\nimport CustomerEntityDecimal from '../pages/tables/CustomerEntityDecimal';\nimport CustomerEntityInt from '../pages/tables/CustomerEntityInt';\nimport CustomerEntityText from '../pages/tables/CustomerEntityText';\nimport CustomerEntityVarchar from '../pages/tables/CustomerEntityVarchar';\nimport CustomerFormAttribute from '../pages/tables/CustomerFormAttribute';\nimport CustomerGridFlat from '../pages/tables/CustomerGridFlat';\nimport CustomerGroup from '../pages/tables/CustomerGroup';\nimport CustomerLog from '../pages/tables/CustomerLog';\nimport CustomerVisitor from '../pages/tables/CustomerVisitor';\nimport DesignChange from '../pages/tables/DesignChange';\nimport DesignConfigGridFlat from '../pages/tables/DesignConfigGridFlat';\nimport DirectoryCountry from '../pages/tables/DirectoryCountry';\nimport DirectoryCountryFormat from '../pages/tables/DirectoryCountryFormat';\nimport DirectoryCountryRegion from '../pages/tables/DirectoryCountryRegion';\nimport DirectoryCountryRegionName from '../pages/tables/DirectoryCountryRegionName';\nimport DirectoryCurrencyRate from '../pages/tables/DirectoryCurrencyRate';\nimport DownloadableLink from '../pages/tables/DownloadableLink';\nimport DownloadableLinkPrice from '../pages/tables/DownloadableLinkPrice';\nimport DownloadableLinkPurchased from '../pages/tables/DownloadableLinkPurchased';\nimport DownloadableLinkPurchasedItem from '../pages/tables/DownloadableLinkPurchasedItem';\nimport DownloadableLinkTitle from '../pages/tables/DownloadableLinkTitle';\nimport DownloadableSample from '../pages/tables/DownloadableSample';\nimport DownloadableSampleTitle from '../pages/tables/DownloadableSampleTitle';\nimport EavAttribute from '../pages/tables/EavAttribute';\nimport EavAttributeGroup from '../pages/tables/EavAttributeGroup';\nimport EavAttributeLabel from '../pages/tables/EavAttributeLabel';\nimport EavAttributeOption from '../pages/tables/EavAttributeOption';\nimport EavAttributeOptionSwatch from '../pages/tables/EavAttributeOptionSwatch';\nimport EavAttributeOptionValue from '../pages/tables/EavAttributeOptionValue';\nimport EavAttributeSet from '../pages/tables/EavAttributeSet';\nimport EavEntity from '../pages/tables/EavEntity';\nimport EavEntityAttribute from '../pages/tables/EavEntityAttribute';\nimport EavEntityDatetime from '../pages/tables/EavEntityDatetime';\nimport EavEntityDecimal from '../pages/tables/EavEntityDecimal';\nimport EavEntityInt from '../pages/tables/EavEntityInt';\nimport EavEntityStore from '../pages/tables/EavEntityStore';\nimport EavEntityText from '../pages/tables/EavEntityText';\nimport EavEntityType from '../pages/tables/EavEntityType';\nimport EavEntityVarchar from '../pages/tables/EavEntityVarchar';\nimport EavFormElement from '../pages/tables/EavFormElement';\nimport EavFormFieldset from '../pages/tables/EavFormFieldset';\nimport EavFormFieldsetLabel from '../pages/tables/EavFormFieldsetLabel';\nimport EavFormType from '../pages/tables/EavFormType';\nimport EavFormTypeEntity from '../pages/tables/EavFormTypeEntity';\nimport EmailAbandonedCart from '../pages/tables/EmailAbandonedCart';\nimport EmailAutomation from '../pages/tables/EmailAutomation';\nimport EmailCampaign from '../pages/tables/EmailCampaign';\nimport EmailCatalog from '../pages/tables/EmailCatalog';\nimport EmailContact from '../pages/tables/EmailContact';\nimport EmailContactConsent from '../pages/tables/EmailContactConsent';\nimport EmailFailedAuth from '../pages/tables/EmailFailedAuth';\nimport EmailImporter from '../pages/tables/EmailImporter';\nimport EmailOrder from '../pages/tables/EmailOrder';\nimport EmailReview from '../pages/tables/EmailReview';\nimport EmailRules from '../pages/tables/EmailRules';\nimport EmailTemplate from '../pages/tables/EmailTemplate';\nimport EmailWishlist from '../pages/tables/EmailWishlist';\nimport Flag from '../pages/tables/Flag';\nimport GiftMessage from '../pages/tables/GiftMessage';\nimport GoogleoptimizerCode from '../pages/tables/GoogleoptimizerCode';\nimport ImportHistory from '../pages/tables/ImportHistory';\nimport ImportexportImportdata from '../pages/tables/ImportexportImportdata';\nimport IndexerState from '../pages/tables/IndexerState';\nimport Integration from '../pages/tables/Integration';\nimport InventoryGeoname from '../pages/tables/InventoryGeoname';\nimport InventoryLowStockNotificationConfiguration from '../pages/tables/InventoryLowStockNotificationConfiguration';\nimport InventoryReservation from '../pages/tables/InventoryReservation';\nimport InventoryShipmentSource from '../pages/tables/InventoryShipmentSource';\nimport InventorySource from '../pages/tables/InventorySource';\nimport InventorySourceCarrierLink from '../pages/tables/InventorySourceCarrierLink';\nimport InventorySourceItem from '../pages/tables/InventorySourceItem';\nimport InventorySourceStockLink from '../pages/tables/InventorySourceStockLink';\nimport InventoryStock from '../pages/tables/InventoryStock';\nimport InventoryStockSalesChannel from '../pages/tables/InventoryStockSalesChannel';\nimport KlarnaCoreOrder from '../pages/tables/KlarnaCoreOrder';\nimport KlarnaPaymentsQuote from '../pages/tables/KlarnaPaymentsQuote';\nimport LayoutLink from '../pages/tables/LayoutLink';\nimport LayoutUpdate from '../pages/tables/LayoutUpdate';\nimport MagentoAcknowledgedBulk from '../pages/tables/MagentoAcknowledgedBulk';\nimport MagentoBulk from '../pages/tables/MagentoBulk';\nimport MagentoOperation from '../pages/tables/MagentoOperation';\nimport MspTfaCountryCodes from '../pages/tables/MspTfaCountryCodes';\nimport MspTfaTrusted from '../pages/tables/MspTfaTrusted';\nimport MspTfaUserConfig from '../pages/tables/MspTfaUserConfig';\nimport MviewState from '../pages/tables/MviewState';\nimport NewsletterProblem from '../pages/tables/NewsletterProblem';\nimport NewsletterQueue from '../pages/tables/NewsletterQueue';\nimport NewsletterQueueLink from '../pages/tables/NewsletterQueueLink';\nimport NewsletterQueueStoreLink from '../pages/tables/NewsletterQueueStoreLink';\nimport NewsletterSubscriber from '../pages/tables/NewsletterSubscriber';\nimport NewsletterTemplate from '../pages/tables/NewsletterTemplate';\nimport OauthConsumer from '../pages/tables/OauthConsumer';\nimport OauthNonce from '../pages/tables/OauthNonce';\nimport OauthToken from '../pages/tables/OauthToken';\nimport OauthTokenRequestLog from '../pages/tables/OauthTokenRequestLog';\nimport PasswordResetRequestEvent from '../pages/tables/PasswordResetRequestEvent';\nimport PatchList from '../pages/tables/PatchList';\nimport PaypalBillingAgreement from '../pages/tables/PaypalBillingAgreement';\nimport PaypalBillingAgreementOrder from '../pages/tables/PaypalBillingAgreementOrder';\nimport PaypalCert from '../pages/tables/PaypalCert';\nimport PaypalPaymentTransaction from '../pages/tables/PaypalPaymentTransaction';\nimport PaypalSettlementReport from '../pages/tables/PaypalSettlementReport';\nimport PaypalSettlementReportRow from '../pages/tables/PaypalSettlementReportRow';\nimport PersistentSession from '../pages/tables/PersistentSession';\nimport ProductAlertPrice from '../pages/tables/ProductAlertPrice';\nimport ProductAlertStock from '../pages/tables/ProductAlertStock';\nimport Queue from '../pages/tables/Queue';\nimport QueueLock from '../pages/tables/QueueLock';\nimport QueueMessage from '../pages/tables/QueueMessage';\nimport QueueMessageStatus from '../pages/tables/QueueMessageStatus';\nimport QueuePoisonPill from '../pages/tables/QueuePoisonPill';\nimport Quote from '../pages/tables/Quote';\nimport QuoteAddress from '../pages/tables/QuoteAddress';\nimport QuoteAddressItem from '../pages/tables/QuoteAddressItem';\nimport QuoteIdMask from '../pages/tables/QuoteIdMask';\nimport QuoteItem from '../pages/tables/QuoteItem';\nimport QuoteItemOption from '../pages/tables/QuoteItemOption';\nimport QuotePayment from '../pages/tables/QuotePayment';\nimport QuoteShippingRate from '../pages/tables/QuoteShippingRate';\nimport Rating from '../pages/tables/Rating';\nimport RatingEntity from '../pages/tables/RatingEntity';\nimport RatingOption from '../pages/tables/RatingOption';\nimport RatingOptionVote from '../pages/tables/RatingOptionVote';\nimport RatingOptionVoteAggregated from '../pages/tables/RatingOptionVoteAggregated';\nimport RatingStore from '../pages/tables/RatingStore';\nimport RatingTitle from '../pages/tables/RatingTitle';\nimport ReleaseNotificationViewerLog from '../pages/tables/ReleaseNotificationViewerLog';\nimport ReportComparedProductIndex from '../pages/tables/ReportComparedProductIndex';\nimport ReportEvent from '../pages/tables/ReportEvent';\nimport ReportEventTypes from '../pages/tables/ReportEventTypes';\nimport ReportViewedProductAggregatedDaily from '../pages/tables/ReportViewedProductAggregatedDaily';\nimport ReportViewedProductAggregatedMonthly from '../pages/tables/ReportViewedProductAggregatedMonthly';\nimport ReportViewedProductAggregatedYearly from '../pages/tables/ReportViewedProductAggregatedYearly';\nimport ReportViewedProductIndex from '../pages/tables/ReportViewedProductIndex';\nimport ReportingCounts from '../pages/tables/ReportingCounts';\nimport ReportingModuleStatus from '../pages/tables/ReportingModuleStatus';\nimport ReportingOrders from '../pages/tables/ReportingOrders';\nimport ReportingSystemUpdates from '../pages/tables/ReportingSystemUpdates';\nimport ReportingUsers from '../pages/tables/ReportingUsers';\nimport Review from '../pages/tables/Review';\nimport ReviewDetail from '../pages/tables/ReviewDetail';\nimport ReviewEntity from '../pages/tables/ReviewEntity';\nimport ReviewEntitySummary from '../pages/tables/ReviewEntitySummary';\nimport ReviewStatus from '../pages/tables/ReviewStatus';\nimport ReviewStore from '../pages/tables/ReviewStore';\nimport SalesBestsellersAggregatedDaily from '../pages/tables/SalesBestsellersAggregatedDaily';\nimport SalesBestsellersAggregatedMonthly from '../pages/tables/SalesBestsellersAggregatedMonthly';\nimport SalesBestsellersAggregatedYearly from '../pages/tables/SalesBestsellersAggregatedYearly';\nimport SalesCreditmemo from '../pages/tables/SalesCreditmemo';\nimport SalesCreditmemoComment from '../pages/tables/SalesCreditmemoComment';\nimport SalesCreditmemoGrid from '../pages/tables/SalesCreditmemoGrid';\nimport SalesCreditmemoItem from '../pages/tables/SalesCreditmemoItem';\nimport SalesInvoice from '../pages/tables/SalesInvoice';\nimport SalesInvoiceComment from '../pages/tables/SalesInvoiceComment';\nimport SalesInvoiceGrid from '../pages/tables/SalesInvoiceGrid';\nimport SalesInvoiceItem from '../pages/tables/SalesInvoiceItem';\nimport SalesInvoicedAggregated from '../pages/tables/SalesInvoicedAggregated';\nimport SalesInvoicedAggregatedOrder from '../pages/tables/SalesInvoicedAggregatedOrder';\nimport SalesOrder from '../pages/tables/SalesOrder';\nimport SalesOrderAddress from '../pages/tables/SalesOrderAddress';\nimport SalesOrderAggregatedCreated from '../pages/tables/SalesOrderAggregatedCreated';\nimport SalesOrderAggregatedUpdated from '../pages/tables/SalesOrderAggregatedUpdated';\nimport SalesOrderGrid from '../pages/tables/SalesOrderGrid';\nimport SalesOrderItem from '../pages/tables/SalesOrderItem';\nimport SalesOrderPayment from '../pages/tables/SalesOrderPayment';\nimport SalesOrderStatus from '../pages/tables/SalesOrderStatus';\nimport SalesOrderStatusHistory from '../pages/tables/SalesOrderStatusHistory';\nimport SalesOrderStatusLabel from '../pages/tables/SalesOrderStatusLabel';\nimport SalesOrderStatusState from '../pages/tables/SalesOrderStatusState';\nimport SalesOrderTax from '../pages/tables/SalesOrderTax';\nimport SalesOrderTaxItem from '../pages/tables/SalesOrderTaxItem';\nimport SalesPaymentTransaction from '../pages/tables/SalesPaymentTransaction';\nimport SalesRefundedAggregated from '../pages/tables/SalesRefundedAggregated';\nimport SalesRefundedAggregatedOrder from '../pages/tables/SalesRefundedAggregatedOrder';\nimport SalesSequenceMeta from '../pages/tables/SalesSequenceMeta';\nimport SalesSequenceProfile from '../pages/tables/SalesSequenceProfile';\nimport SalesShipment from '../pages/tables/SalesShipment';\nimport SalesShipmentComment from '../pages/tables/SalesShipmentComment';\nimport SalesShipmentGrid from '../pages/tables/SalesShipmentGrid';\nimport SalesShipmentItem from '../pages/tables/SalesShipmentItem';\nimport SalesShipmentTrack from '../pages/tables/SalesShipmentTrack';\nimport SalesShippingAggregated from '../pages/tables/SalesShippingAggregated';\nimport SalesShippingAggregatedOrder from '../pages/tables/SalesShippingAggregatedOrder';\nimport Salesrule from '../pages/tables/Salesrule';\nimport SalesruleCoupon from '../pages/tables/SalesruleCoupon';\nimport SalesruleCouponAggregated from '../pages/tables/SalesruleCouponAggregated';\nimport SalesruleCouponAggregatedOrder from '../pages/tables/SalesruleCouponAggregatedOrder';\nimport SalesruleCouponAggregatedUpdated from '../pages/tables/SalesruleCouponAggregatedUpdated';\nimport SalesruleCouponUsage from '../pages/tables/SalesruleCouponUsage';\nimport SalesruleCustomer from '../pages/tables/SalesruleCustomer';\nimport SalesruleCustomerGroup from '../pages/tables/SalesruleCustomerGroup';\nimport SalesruleLabel from '../pages/tables/SalesruleLabel';\nimport SalesruleProductAttribute from '../pages/tables/SalesruleProductAttribute';\nimport SalesruleWebsite from '../pages/tables/SalesruleWebsite';\nimport SearchQuery from '../pages/tables/SearchQuery';\nimport SearchSynonyms from '../pages/tables/SearchSynonyms';\nimport SendfriendLog from '../pages/tables/SendfriendLog';\nimport SequenceCreditmemo0 from '../pages/tables/SequenceCreditmemo0';\nimport SequenceCreditmemo1 from '../pages/tables/SequenceCreditmemo1';\nimport SequenceInvoice0 from '../pages/tables/SequenceInvoice0';\nimport SequenceInvoice1 from '../pages/tables/SequenceInvoice1';\nimport SequenceOrder0 from '../pages/tables/SequenceOrder0';\nimport SequenceOrder1 from '../pages/tables/SequenceOrder1';\nimport SequenceShipment0 from '../pages/tables/SequenceShipment0';\nimport SequenceShipment1 from '../pages/tables/SequenceShipment1';\nimport Session from '../pages/tables/Session';\nimport SetupModule from '../pages/tables/SetupModule';\nimport ShippingTablerate from '../pages/tables/ShippingTablerate';\nimport SignifydCase from '../pages/tables/SignifydCase';\nimport Sitemap from '../pages/tables/Sitemap';\nimport Store from '../pages/tables/Store';\nimport StoreGroup from '../pages/tables/StoreGroup';\nimport StoreWebsite from '../pages/tables/StoreWebsite';\nimport TaxCalculation from '../pages/tables/TaxCalculation';\nimport TaxCalculationRate from '../pages/tables/TaxCalculationRate';\nimport TaxCalculationRateTitle from '../pages/tables/TaxCalculationRateTitle';\nimport TaxCalculationRule from '../pages/tables/TaxCalculationRule';\nimport TaxClass from '../pages/tables/TaxClass';\nimport TaxOrderAggregatedCreated from '../pages/tables/TaxOrderAggregatedCreated';\nimport TaxOrderAggregatedUpdated from '../pages/tables/TaxOrderAggregatedUpdated';\nimport TemandoCheckoutAddress from '../pages/tables/TemandoCheckoutAddress';\nimport TemandoCollectionPointSearch from '../pages/tables/TemandoCollectionPointSearch';\nimport TemandoOrder from '../pages/tables/TemandoOrder';\nimport TemandoOrderCollectionPoint from '../pages/tables/TemandoOrderCollectionPoint';\nimport TemandoOrderPickupLocation from '../pages/tables/TemandoOrderPickupLocation';\nimport TemandoPickupLocationSearch from '../pages/tables/TemandoPickupLocationSearch';\nimport TemandoQuoteCollectionPoint from '../pages/tables/TemandoQuoteCollectionPoint';\nimport TemandoQuotePickupLocation from '../pages/tables/TemandoQuotePickupLocation';\nimport TemandoShipment from '../pages/tables/TemandoShipment';\nimport Theme from '../pages/tables/Theme';\nimport ThemeFile from '../pages/tables/ThemeFile';\nimport Translation from '../pages/tables/Translation';\nimport UiBookmark from '../pages/tables/UiBookmark';\nimport UrlRewrite from '../pages/tables/UrlRewrite';\nimport Variable from '../pages/tables/Variable';\nimport VariableValue from '../pages/tables/VariableValue';\nimport VaultPaymentToken from '../pages/tables/VaultPaymentToken';\nimport VaultPaymentTokenOrderPaymentLink from '../pages/tables/VaultPaymentTokenOrderPaymentLink';\nimport VertexCustomerCode from '../pages/tables/VertexCustomerCode';\nimport VertexInvoiceSent from '../pages/tables/VertexInvoiceSent';\nimport VertexOrderInvoiceStatus from '../pages/tables/VertexOrderInvoiceStatus';\nimport VertexSalesCreditmemoItemInvoiceTextCode from '../pages/tables/VertexSalesCreditmemoItemInvoiceTextCode';\nimport VertexSalesCreditmemoItemTaxCode from '../pages/tables/VertexSalesCreditmemoItemTaxCode';\nimport VertexSalesCreditmemoItemVertexTaxCode from '../pages/tables/VertexSalesCreditmemoItemVertexTaxCode';\nimport VertexSalesOrderItemInvoiceTextCode from '../pages/tables/VertexSalesOrderItemInvoiceTextCode';\nimport VertexSalesOrderItemTaxCode from '../pages/tables/VertexSalesOrderItemTaxCode';\nimport VertexSalesOrderItemVertexTaxCode from '../pages/tables/VertexSalesOrderItemVertexTaxCode';\nimport VertexTaxrequest from '../pages/tables/VertexTaxrequest';\nimport WeeeTax from '../pages/tables/WeeeTax';\nimport Widget from '../pages/tables/Widget';\nimport WidgetInstance from '../pages/tables/WidgetInstance';\nimport WidgetInstancePage from '../pages/tables/WidgetInstancePage';\nimport WidgetInstancePageLayout from '../pages/tables/WidgetInstancePageLayout';\nimport Wishlist from '../pages/tables/Wishlist';\nimport WishlistItem from '../pages/tables/WishlistItem';\nimport WishlistItemOption from '../pages/tables/WishlistItemOption';;\n\nconst TableMenu = () => {\n  const path = '/' + init.appName;\n  return (\n    <div>\n      <Switch>\n\n          <Route path={path + '/tables/adminpasswords'} component={AdminPasswords} />\n          <Route path={path + '/tables/adminsystemmessages'} component={AdminSystemMessages} />\n          <Route path={path + '/tables/adminuser'} component={AdminUser} />\n          <Route path={path + '/tables/adminusersession'} component={AdminUserSession} />\n          <Route path={path + '/tables/adminnotificationinbox'} component={AdminnotificationInbox} />\n          <Route path={path + '/tables/amazoncustomer'} component={AmazonCustomer} />\n          <Route path={path + '/tables/amazonpendingauthorization'} component={AmazonPendingAuthorization} />\n          <Route path={path + '/tables/amazonpendingcapture'} component={AmazonPendingCapture} />\n          <Route path={path + '/tables/amazonpendingrefund'} component={AmazonPendingRefund} />\n          <Route path={path + '/tables/amazonquote'} component={AmazonQuote} />\n          <Route path={path + '/tables/amazonsalesorder'} component={AmazonSalesOrder} />\n          <Route path={path + '/tables/authorizationrole'} component={AuthorizationRole} />\n          <Route path={path + '/tables/authorizationrule'} component={AuthorizationRule} />\n          <Route path={path + '/tables/cache'} component={Cache} />\n          <Route path={path + '/tables/cachetag'} component={CacheTag} />\n          <Route path={path + '/tables/captchalog'} component={CaptchaLog} />\n          <Route path={path + '/tables/catalogcategoryentity'} component={CatalogCategoryEntity} />\n          <Route path={path + '/tables/catalogcategoryentitydatetime'} component={CatalogCategoryEntityDatetime} />\n          <Route path={path + '/tables/catalogcategoryentitydecimal'} component={CatalogCategoryEntityDecimal} />\n          <Route path={path + '/tables/catalogcategoryentityint'} component={CatalogCategoryEntityInt} />\n          <Route path={path + '/tables/catalogcategoryentitytext'} component={CatalogCategoryEntityText} />\n          <Route path={path + '/tables/catalogcategoryentityvarchar'} component={CatalogCategoryEntityVarchar} />\n          <Route path={path + '/tables/catalogcategoryproduct'} component={CatalogCategoryProduct} />\n          <Route path={path + '/tables/catalogcategoryproductindex'} component={CatalogCategoryProductIndex} />\n          <Route path={path + '/tables/catalogcategoryproductindexreplica'} component={CatalogCategoryProductIndexReplica} />\n          <Route path={path + '/tables/catalogcategoryproductindexstore1'} component={CatalogCategoryProductIndexStore1} />\n          <Route path={path + '/tables/catalogcategoryproductindexstore1replica'} component={CatalogCategoryProductIndexStore1Replica} />\n          <Route path={path + '/tables/catalogcategoryproductindextmp'} component={CatalogCategoryProductIndexTmp} />\n          <Route path={path + '/tables/catalogcompareitem'} component={CatalogCompareItem} />\n          <Route path={path + '/tables/catalogeavattribute'} component={CatalogEavAttribute} />\n          <Route path={path + '/tables/catalogproductbundleoption'} component={CatalogProductBundleOption} />\n          <Route path={path + '/tables/catalogproductbundleoptionvalue'} component={CatalogProductBundleOptionValue} />\n          <Route path={path + '/tables/catalogproductbundlepriceindex'} component={CatalogProductBundlePriceIndex} />\n          <Route path={path + '/tables/catalogproductbundleselection'} component={CatalogProductBundleSelection} />\n          <Route path={path + '/tables/catalogproductbundleselectionprice'} component={CatalogProductBundleSelectionPrice} />\n          <Route path={path + '/tables/catalogproductbundlestockindex'} component={CatalogProductBundleStockIndex} />\n          <Route path={path + '/tables/catalogproductentity'} component={CatalogProductEntity} />\n          <Route path={path + '/tables/catalogproductentitydatetime'} component={CatalogProductEntityDatetime} />\n          <Route path={path + '/tables/catalogproductentitydecimal'} component={CatalogProductEntityDecimal} />\n          <Route path={path + '/tables/catalogproductentitygallery'} component={CatalogProductEntityGallery} />\n          <Route path={path + '/tables/catalogproductentityint'} component={CatalogProductEntityInt} />\n          <Route path={path + '/tables/catalogproductentitymediagallery'} component={CatalogProductEntityMediaGallery} />\n          <Route path={path + '/tables/catalogproductentitymediagalleryvalue'} component={CatalogProductEntityMediaGalleryValue} />\n          <Route path={path + '/tables/catalogproductentitymediagalleryvaluetoentity'} component={CatalogProductEntityMediaGalleryValueToEntity} />\n          <Route path={path + '/tables/catalogproductentitymediagalleryvaluevideo'} component={CatalogProductEntityMediaGalleryValueVideo} />\n          <Route path={path + '/tables/catalogproductentitytext'} component={CatalogProductEntityText} />\n          <Route path={path + '/tables/catalogproductentitytierprice'} component={CatalogProductEntityTierPrice} />\n          <Route path={path + '/tables/catalogproductentityvarchar'} component={CatalogProductEntityVarchar} />\n          <Route path={path + '/tables/catalogproductfrontendaction'} component={CatalogProductFrontendAction} />\n          <Route path={path + '/tables/catalogproductindexeav'} component={CatalogProductIndexEav} />\n          <Route path={path + '/tables/catalogproductindexeavdecimal'} component={CatalogProductIndexEavDecimal} />\n          <Route path={path + '/tables/catalogproductindexeavdecimalidx'} component={CatalogProductIndexEavDecimalIdx} />\n          <Route path={path + '/tables/catalogproductindexeavdecimalreplica'} component={CatalogProductIndexEavDecimalReplica} />\n          <Route path={path + '/tables/catalogproductindexeavdecimaltmp'} component={CatalogProductIndexEavDecimalTmp} />\n          <Route path={path + '/tables/catalogproductindexeavidx'} component={CatalogProductIndexEavIdx} />\n          <Route path={path + '/tables/catalogproductindexeavreplica'} component={CatalogProductIndexEavReplica} />\n          <Route path={path + '/tables/catalogproductindexeavtmp'} component={CatalogProductIndexEavTmp} />\n          <Route path={path + '/tables/catalogproductindexprice'} component={CatalogProductIndexPrice} />\n          <Route path={path + '/tables/catalogproductindexpricebundleidx'} component={CatalogProductIndexPriceBundleIdx} />\n          <Route path={path + '/tables/catalogproductindexpricebundleoptidx'} component={CatalogProductIndexPriceBundleOptIdx} />\n          <Route path={path + '/tables/catalogproductindexpricebundleopttmp'} component={CatalogProductIndexPriceBundleOptTmp} />\n          <Route path={path + '/tables/catalogproductindexpricebundleselidx'} component={CatalogProductIndexPriceBundleSelIdx} />\n          <Route path={path + '/tables/catalogproductindexpricebundleseltmp'} component={CatalogProductIndexPriceBundleSelTmp} />\n          <Route path={path + '/tables/catalogproductindexpricebundletmp'} component={CatalogProductIndexPriceBundleTmp} />\n          <Route path={path + '/tables/catalogproductindexpricecfgoptagridx'} component={CatalogProductIndexPriceCfgOptAgrIdx} />\n          <Route path={path + '/tables/catalogproductindexpricecfgoptagrtmp'} component={CatalogProductIndexPriceCfgOptAgrTmp} />\n          <Route path={path + '/tables/catalogproductindexpricecfgoptidx'} component={CatalogProductIndexPriceCfgOptIdx} />\n          <Route path={path + '/tables/catalogproductindexpricecfgopttmp'} component={CatalogProductIndexPriceCfgOptTmp} />\n          <Route path={path + '/tables/catalogproductindexpricedownlodidx'} component={CatalogProductIndexPriceDownlodIdx} />\n          <Route path={path + '/tables/catalogproductindexpricedownlodtmp'} component={CatalogProductIndexPriceDownlodTmp} />\n          <Route path={path + '/tables/catalogproductindexpricefinalidx'} component={CatalogProductIndexPriceFinalIdx} />\n          <Route path={path + '/tables/catalogproductindexpricefinaltmp'} component={CatalogProductIndexPriceFinalTmp} />\n          <Route path={path + '/tables/catalogproductindexpriceidx'} component={CatalogProductIndexPriceIdx} />\n          <Route path={path + '/tables/catalogproductindexpriceoptagridx'} component={CatalogProductIndexPriceOptAgrIdx} />\n          <Route path={path + '/tables/catalogproductindexpriceoptagrtmp'} component={CatalogProductIndexPriceOptAgrTmp} />\n          <Route path={path + '/tables/catalogproductindexpriceoptidx'} component={CatalogProductIndexPriceOptIdx} />\n          <Route path={path + '/tables/catalogproductindexpriceopttmp'} component={CatalogProductIndexPriceOptTmp} />\n          <Route path={path + '/tables/catalogproductindexpricereplica'} component={CatalogProductIndexPriceReplica} />\n          <Route path={path + '/tables/catalogproductindexpricetmp'} component={CatalogProductIndexPriceTmp} />\n          <Route path={path + '/tables/catalogproductindextierprice'} component={CatalogProductIndexTierPrice} />\n          <Route path={path + '/tables/catalogproductindexwebsite'} component={CatalogProductIndexWebsite} />\n          <Route path={path + '/tables/catalogproductlink'} component={CatalogProductLink} />\n          <Route path={path + '/tables/catalogproductlinkattribute'} component={CatalogProductLinkAttribute} />\n          <Route path={path + '/tables/catalogproductlinkattributedecimal'} component={CatalogProductLinkAttributeDecimal} />\n          <Route path={path + '/tables/catalogproductlinkattributeint'} component={CatalogProductLinkAttributeInt} />\n          <Route path={path + '/tables/catalogproductlinkattributevarchar'} component={CatalogProductLinkAttributeVarchar} />\n          <Route path={path + '/tables/catalogproductlinktype'} component={CatalogProductLinkType} />\n          <Route path={path + '/tables/catalogproductoption'} component={CatalogProductOption} />\n          <Route path={path + '/tables/catalogproductoptionprice'} component={CatalogProductOptionPrice} />\n          <Route path={path + '/tables/catalogproductoptiontitle'} component={CatalogProductOptionTitle} />\n          <Route path={path + '/tables/catalogproductoptiontypeprice'} component={CatalogProductOptionTypePrice} />\n          <Route path={path + '/tables/catalogproductoptiontypetitle'} component={CatalogProductOptionTypeTitle} />\n          <Route path={path + '/tables/catalogproductoptiontypevalue'} component={CatalogProductOptionTypeValue} />\n          <Route path={path + '/tables/catalogproductrelation'} component={CatalogProductRelation} />\n          <Route path={path + '/tables/catalogproductsuperattribute'} component={CatalogProductSuperAttribute} />\n          <Route path={path + '/tables/catalogproductsuperattributelabel'} component={CatalogProductSuperAttributeLabel} />\n          <Route path={path + '/tables/catalogproductsuperlink'} component={CatalogProductSuperLink} />\n          <Route path={path + '/tables/catalogproductwebsite'} component={CatalogProductWebsite} />\n          <Route path={path + '/tables/catalogurlrewriteproductcategory'} component={CatalogUrlRewriteProductCategory} />\n          <Route path={path + '/tables/cataloginventorystock'} component={CataloginventoryStock} />\n          <Route path={path + '/tables/cataloginventorystockitem'} component={CataloginventoryStockItem} />\n          <Route path={path + '/tables/cataloginventorystockstatus'} component={CataloginventoryStockStatus} />\n          <Route path={path + '/tables/cataloginventorystockstatusidx'} component={CataloginventoryStockStatusIdx} />\n          <Route path={path + '/tables/cataloginventorystockstatusreplica'} component={CataloginventoryStockStatusReplica} />\n          <Route path={path + '/tables/cataloginventorystockstatustmp'} component={CataloginventoryStockStatusTmp} />\n          <Route path={path + '/tables/catalogrule'} component={Catalogrule} />\n          <Route path={path + '/tables/catalogrulecustomergroup'} component={CatalogruleCustomerGroup} />\n          <Route path={path + '/tables/catalogrulegroupwebsite'} component={CatalogruleGroupWebsite} />\n          <Route path={path + '/tables/catalogrulegroupwebsitereplica'} component={CatalogruleGroupWebsiteReplica} />\n          <Route path={path + '/tables/catalogruleproduct'} component={CatalogruleProduct} />\n          <Route path={path + '/tables/catalogruleproductprice'} component={CatalogruleProductPrice} />\n          <Route path={path + '/tables/catalogruleproductpricereplica'} component={CatalogruleProductPriceReplica} />\n          <Route path={path + '/tables/catalogruleproductreplica'} component={CatalogruleProductReplica} />\n          <Route path={path + '/tables/catalogrulewebsite'} component={CatalogruleWebsite} />\n          <Route path={path + '/tables/catalogsearchfulltextscope1'} component={CatalogsearchFulltextScope1} />\n          <Route path={path + '/tables/catalogsearchrecommendations'} component={CatalogsearchRecommendations} />\n          <Route path={path + '/tables/checkoutagreement'} component={CheckoutAgreement} />\n          <Route path={path + '/tables/checkoutagreementstore'} component={CheckoutAgreementStore} />\n          <Route path={path + '/tables/cmsblock'} component={CmsBlock} />\n          <Route path={path + '/tables/cmsblockstore'} component={CmsBlockStore} />\n          <Route path={path + '/tables/cmspage'} component={CmsPage} />\n          <Route path={path + '/tables/cmspagestore'} component={CmsPageStore} />\n          <Route path={path + '/tables/coreconfigdata'} component={CoreConfigData} />\n          <Route path={path + '/tables/cronschedule'} component={CronSchedule} />\n          <Route path={path + '/tables/customeraddressentity'} component={CustomerAddressEntity} />\n          <Route path={path + '/tables/customeraddressentitydatetime'} component={CustomerAddressEntityDatetime} />\n          <Route path={path + '/tables/customeraddressentitydecimal'} component={CustomerAddressEntityDecimal} />\n          <Route path={path + '/tables/customeraddressentityint'} component={CustomerAddressEntityInt} />\n          <Route path={path + '/tables/customeraddressentitytext'} component={CustomerAddressEntityText} />\n          <Route path={path + '/tables/customeraddressentityvarchar'} component={CustomerAddressEntityVarchar} />\n          <Route path={path + '/tables/customereavattribute'} component={CustomerEavAttribute} />\n          <Route path={path + '/tables/customereavattributewebsite'} component={CustomerEavAttributeWebsite} />\n          <Route path={path + '/tables/customerentity'} component={CustomerEntity} />\n          <Route path={path + '/tables/customerentitydatetime'} component={CustomerEntityDatetime} />\n          <Route path={path + '/tables/customerentitydecimal'} component={CustomerEntityDecimal} />\n          <Route path={path + '/tables/customerentityint'} component={CustomerEntityInt} />\n          <Route path={path + '/tables/customerentitytext'} component={CustomerEntityText} />\n          <Route path={path + '/tables/customerentityvarchar'} component={CustomerEntityVarchar} />\n          <Route path={path + '/tables/customerformattribute'} component={CustomerFormAttribute} />\n          <Route path={path + '/tables/customergridflat'} component={CustomerGridFlat} />\n          <Route path={path + '/tables/customergroup'} component={CustomerGroup} />\n          <Route path={path + '/tables/customerlog'} component={CustomerLog} />\n          <Route path={path + '/tables/customervisitor'} component={CustomerVisitor} />\n          <Route path={path + '/tables/designchange'} component={DesignChange} />\n          <Route path={path + '/tables/designconfiggridflat'} component={DesignConfigGridFlat} />\n          <Route path={path + '/tables/directorycountry'} component={DirectoryCountry} />\n          <Route path={path + '/tables/directorycountryformat'} component={DirectoryCountryFormat} />\n          <Route path={path + '/tables/directorycountryregion'} component={DirectoryCountryRegion} />\n          <Route path={path + '/tables/directorycountryregionname'} component={DirectoryCountryRegionName} />\n          <Route path={path + '/tables/directorycurrencyrate'} component={DirectoryCurrencyRate} />\n          <Route path={path + '/tables/downloadablelink'} component={DownloadableLink} />\n          <Route path={path + '/tables/downloadablelinkprice'} component={DownloadableLinkPrice} />\n          <Route path={path + '/tables/downloadablelinkpurchased'} component={DownloadableLinkPurchased} />\n          <Route path={path + '/tables/downloadablelinkpurchaseditem'} component={DownloadableLinkPurchasedItem} />\n          <Route path={path + '/tables/downloadablelinktitle'} component={DownloadableLinkTitle} />\n          <Route path={path + '/tables/downloadablesample'} component={DownloadableSample} />\n          <Route path={path + '/tables/downloadablesampletitle'} component={DownloadableSampleTitle} />\n          <Route path={path + '/tables/eavattribute'} component={EavAttribute} />\n          <Route path={path + '/tables/eavattributegroup'} component={EavAttributeGroup} />\n          <Route path={path + '/tables/eavattributelabel'} component={EavAttributeLabel} />\n          <Route path={path + '/tables/eavattributeoption'} component={EavAttributeOption} />\n          <Route path={path + '/tables/eavattributeoptionswatch'} component={EavAttributeOptionSwatch} />\n          <Route path={path + '/tables/eavattributeoptionvalue'} component={EavAttributeOptionValue} />\n          <Route path={path + '/tables/eavattributeset'} component={EavAttributeSet} />\n          <Route path={path + '/tables/eaventity'} component={EavEntity} />\n          <Route path={path + '/tables/eaventityattribute'} component={EavEntityAttribute} />\n          <Route path={path + '/tables/eaventitydatetime'} component={EavEntityDatetime} />\n          <Route path={path + '/tables/eaventitydecimal'} component={EavEntityDecimal} />\n          <Route path={path + '/tables/eaventityint'} component={EavEntityInt} />\n          <Route path={path + '/tables/eaventitystore'} component={EavEntityStore} />\n          <Route path={path + '/tables/eaventitytext'} component={EavEntityText} />\n          <Route path={path + '/tables/eaventitytype'} component={EavEntityType} />\n          <Route path={path + '/tables/eaventityvarchar'} component={EavEntityVarchar} />\n          <Route path={path + '/tables/eavformelement'} component={EavFormElement} />\n          <Route path={path + '/tables/eavformfieldset'} component={EavFormFieldset} />\n          <Route path={path + '/tables/eavformfieldsetlabel'} component={EavFormFieldsetLabel} />\n          <Route path={path + '/tables/eavformtype'} component={EavFormType} />\n          <Route path={path + '/tables/eavformtypeentity'} component={EavFormTypeEntity} />\n          <Route path={path + '/tables/emailabandonedcart'} component={EmailAbandonedCart} />\n          <Route path={path + '/tables/emailautomation'} component={EmailAutomation} />\n          <Route path={path + '/tables/emailcampaign'} component={EmailCampaign} />\n          <Route path={path + '/tables/emailcatalog'} component={EmailCatalog} />\n          <Route path={path + '/tables/emailcontact'} component={EmailContact} />\n          <Route path={path + '/tables/emailcontactconsent'} component={EmailContactConsent} />\n          <Route path={path + '/tables/emailfailedauth'} component={EmailFailedAuth} />\n          <Route path={path + '/tables/emailimporter'} component={EmailImporter} />\n          <Route path={path + '/tables/emailorder'} component={EmailOrder} />\n          <Route path={path + '/tables/emailreview'} component={EmailReview} />\n          <Route path={path + '/tables/emailrules'} component={EmailRules} />\n          <Route path={path + '/tables/emailtemplate'} component={EmailTemplate} />\n          <Route path={path + '/tables/emailwishlist'} component={EmailWishlist} />\n          <Route path={path + '/tables/flag'} component={Flag} />\n          <Route path={path + '/tables/giftmessage'} component={GiftMessage} />\n          <Route path={path + '/tables/googleoptimizercode'} component={GoogleoptimizerCode} />\n          <Route path={path + '/tables/importhistory'} component={ImportHistory} />\n          <Route path={path + '/tables/importexportimportdata'} component={ImportexportImportdata} />\n          <Route path={path + '/tables/indexerstate'} component={IndexerState} />\n          <Route path={path + '/tables/integration'} component={Integration} />\n          <Route path={path + '/tables/inventorygeoname'} component={InventoryGeoname} />\n          <Route path={path + '/tables/inventorylowstocknotificationconfiguration'} component={InventoryLowStockNotificationConfiguration} />\n          <Route path={path + '/tables/inventoryreservation'} component={InventoryReservation} />\n          <Route path={path + '/tables/inventoryshipmentsource'} component={InventoryShipmentSource} />\n          <Route path={path + '/tables/inventorysource'} component={InventorySource} />\n          <Route path={path + '/tables/inventorysourcecarrierlink'} component={InventorySourceCarrierLink} />\n          <Route path={path + '/tables/inventorysourceitem'} component={InventorySourceItem} />\n          <Route path={path + '/tables/inventorysourcestocklink'} component={InventorySourceStockLink} />\n          <Route path={path + '/tables/inventorystock'} component={InventoryStock} />\n          <Route path={path + '/tables/inventorystocksaleschannel'} component={InventoryStockSalesChannel} />\n          <Route path={path + '/tables/klarnacoreorder'} component={KlarnaCoreOrder} />\n          <Route path={path + '/tables/klarnapaymentsquote'} component={KlarnaPaymentsQuote} />\n          <Route path={path + '/tables/layoutlink'} component={LayoutLink} />\n          <Route path={path + '/tables/layoutupdate'} component={LayoutUpdate} />\n          <Route path={path + '/tables/magentoacknowledgedbulk'} component={MagentoAcknowledgedBulk} />\n          <Route path={path + '/tables/magentobulk'} component={MagentoBulk} />\n          <Route path={path + '/tables/magentooperation'} component={MagentoOperation} />\n          <Route path={path + '/tables/msptfacountrycodes'} component={MspTfaCountryCodes} />\n          <Route path={path + '/tables/msptfatrusted'} component={MspTfaTrusted} />\n          <Route path={path + '/tables/msptfauserconfig'} component={MspTfaUserConfig} />\n          <Route path={path + '/tables/mviewstate'} component={MviewState} />\n          <Route path={path + '/tables/newsletterproblem'} component={NewsletterProblem} />\n          <Route path={path + '/tables/newsletterqueue'} component={NewsletterQueue} />\n          <Route path={path + '/tables/newsletterqueuelink'} component={NewsletterQueueLink} />\n          <Route path={path + '/tables/newsletterqueuestorelink'} component={NewsletterQueueStoreLink} />\n          <Route path={path + '/tables/newslettersubscriber'} component={NewsletterSubscriber} />\n          <Route path={path + '/tables/newslettertemplate'} component={NewsletterTemplate} />\n          <Route path={path + '/tables/oauthconsumer'} component={OauthConsumer} />\n          <Route path={path + '/tables/oauthnonce'} component={OauthNonce} />\n          <Route path={path + '/tables/oauthtoken'} component={OauthToken} />\n          <Route path={path + '/tables/oauthtokenrequestlog'} component={OauthTokenRequestLog} />\n          <Route path={path + '/tables/passwordresetrequestevent'} component={PasswordResetRequestEvent} />\n          <Route path={path + '/tables/patchlist'} component={PatchList} />\n          <Route path={path + '/tables/paypalbillingagreement'} component={PaypalBillingAgreement} />\n          <Route path={path + '/tables/paypalbillingagreementorder'} component={PaypalBillingAgreementOrder} />\n          <Route path={path + '/tables/paypalcert'} component={PaypalCert} />\n          <Route path={path + '/tables/paypalpaymenttransaction'} component={PaypalPaymentTransaction} />\n          <Route path={path + '/tables/paypalsettlementreport'} component={PaypalSettlementReport} />\n          <Route path={path + '/tables/paypalsettlementreportrow'} component={PaypalSettlementReportRow} />\n          <Route path={path + '/tables/persistentsession'} component={PersistentSession} />\n          <Route path={path + '/tables/productalertprice'} component={ProductAlertPrice} />\n          <Route path={path + '/tables/productalertstock'} component={ProductAlertStock} />\n          <Route path={path + '/tables/queue'} component={Queue} />\n          <Route path={path + '/tables/queuelock'} component={QueueLock} />\n          <Route path={path + '/tables/queuemessage'} component={QueueMessage} />\n          <Route path={path + '/tables/queuemessagestatus'} component={QueueMessageStatus} />\n          <Route path={path + '/tables/queuepoisonpill'} component={QueuePoisonPill} />\n          <Route path={path + '/tables/quote'} component={Quote} />\n          <Route path={path + '/tables/quoteaddress'} component={QuoteAddress} />\n          <Route path={path + '/tables/quoteaddressitem'} component={QuoteAddressItem} />\n          <Route path={path + '/tables/quoteidmask'} component={QuoteIdMask} />\n          <Route path={path + '/tables/quoteitem'} component={QuoteItem} />\n          <Route path={path + '/tables/quoteitemoption'} component={QuoteItemOption} />\n          <Route path={path + '/tables/quotepayment'} component={QuotePayment} />\n          <Route path={path + '/tables/quoteshippingrate'} component={QuoteShippingRate} />\n          <Route path={path + '/tables/rating'} component={Rating} />\n          <Route path={path + '/tables/ratingentity'} component={RatingEntity} />\n          <Route path={path + '/tables/ratingoption'} component={RatingOption} />\n          <Route path={path + '/tables/ratingoptionvote'} component={RatingOptionVote} />\n          <Route path={path + '/tables/ratingoptionvoteaggregated'} component={RatingOptionVoteAggregated} />\n          <Route path={path + '/tables/ratingstore'} component={RatingStore} />\n          <Route path={path + '/tables/ratingtitle'} component={RatingTitle} />\n          <Route path={path + '/tables/releasenotificationviewerlog'} component={ReleaseNotificationViewerLog} />\n          <Route path={path + '/tables/reportcomparedproductindex'} component={ReportComparedProductIndex} />\n          <Route path={path + '/tables/reportevent'} component={ReportEvent} />\n          <Route path={path + '/tables/reporteventtypes'} component={ReportEventTypes} />\n          <Route path={path + '/tables/reportviewedproductaggregateddaily'} component={ReportViewedProductAggregatedDaily} />\n          <Route path={path + '/tables/reportviewedproductaggregatedmonthly'} component={ReportViewedProductAggregatedMonthly} />\n          <Route path={path + '/tables/reportviewedproductaggregatedyearly'} component={ReportViewedProductAggregatedYearly} />\n          <Route path={path + '/tables/reportviewedproductindex'} component={ReportViewedProductIndex} />\n          <Route path={path + '/tables/reportingcounts'} component={ReportingCounts} />\n          <Route path={path + '/tables/reportingmodulestatus'} component={ReportingModuleStatus} />\n          <Route path={path + '/tables/reportingorders'} component={ReportingOrders} />\n          <Route path={path + '/tables/reportingsystemupdates'} component={ReportingSystemUpdates} />\n          <Route path={path + '/tables/reportingusers'} component={ReportingUsers} />\n          <Route path={path + '/tables/review'} component={Review} />\n          <Route path={path + '/tables/reviewdetail'} component={ReviewDetail} />\n          <Route path={path + '/tables/reviewentity'} component={ReviewEntity} />\n          <Route path={path + '/tables/reviewentitysummary'} component={ReviewEntitySummary} />\n          <Route path={path + '/tables/reviewstatus'} component={ReviewStatus} />\n          <Route path={path + '/tables/reviewstore'} component={ReviewStore} />\n          <Route path={path + '/tables/salesbestsellersaggregateddaily'} component={SalesBestsellersAggregatedDaily} />\n          <Route path={path + '/tables/salesbestsellersaggregatedmonthly'} component={SalesBestsellersAggregatedMonthly} />\n          <Route path={path + '/tables/salesbestsellersaggregatedyearly'} component={SalesBestsellersAggregatedYearly} />\n          <Route path={path + '/tables/salescreditmemo'} component={SalesCreditmemo} />\n          <Route path={path + '/tables/salescreditmemocomment'} component={SalesCreditmemoComment} />\n          <Route path={path + '/tables/salescreditmemogrid'} component={SalesCreditmemoGrid} />\n          <Route path={path + '/tables/salescreditmemoitem'} component={SalesCreditmemoItem} />\n          <Route path={path + '/tables/salesinvoice'} component={SalesInvoice} />\n          <Route path={path + '/tables/salesinvoicecomment'} component={SalesInvoiceComment} />\n          <Route path={path + '/tables/salesinvoicegrid'} component={SalesInvoiceGrid} />\n          <Route path={path + '/tables/salesinvoiceitem'} component={SalesInvoiceItem} />\n          <Route path={path + '/tables/salesinvoicedaggregated'} component={SalesInvoicedAggregated} />\n          <Route path={path + '/tables/salesinvoicedaggregatedorder'} component={SalesInvoicedAggregatedOrder} />\n          <Route path={path + '/tables/salesorder'} component={SalesOrder} />\n          <Route path={path + '/tables/salesorderaddress'} component={SalesOrderAddress} />\n          <Route path={path + '/tables/salesorderaggregatedcreated'} component={SalesOrderAggregatedCreated} />\n          <Route path={path + '/tables/salesorderaggregatedupdated'} component={SalesOrderAggregatedUpdated} />\n          <Route path={path + '/tables/salesordergrid'} component={SalesOrderGrid} />\n          <Route path={path + '/tables/salesorderitem'} component={SalesOrderItem} />\n          <Route path={path + '/tables/salesorderpayment'} component={SalesOrderPayment} />\n          <Route path={path + '/tables/salesorderstatus'} component={SalesOrderStatus} />\n          <Route path={path + '/tables/salesorderstatushistory'} component={SalesOrderStatusHistory} />\n          <Route path={path + '/tables/salesorderstatuslabel'} component={SalesOrderStatusLabel} />\n          <Route path={path + '/tables/salesorderstatusstate'} component={SalesOrderStatusState} />\n          <Route path={path + '/tables/salesordertax'} component={SalesOrderTax} />\n          <Route path={path + '/tables/salesordertaxitem'} component={SalesOrderTaxItem} />\n          <Route path={path + '/tables/salespaymenttransaction'} component={SalesPaymentTransaction} />\n          <Route path={path + '/tables/salesrefundedaggregated'} component={SalesRefundedAggregated} />\n          <Route path={path + '/tables/salesrefundedaggregatedorder'} component={SalesRefundedAggregatedOrder} />\n          <Route path={path + '/tables/salessequencemeta'} component={SalesSequenceMeta} />\n          <Route path={path + '/tables/salessequenceprofile'} component={SalesSequenceProfile} />\n          <Route path={path + '/tables/salesshipment'} component={SalesShipment} />\n          <Route path={path + '/tables/salesshipmentcomment'} component={SalesShipmentComment} />\n          <Route path={path + '/tables/salesshipmentgrid'} component={SalesShipmentGrid} />\n          <Route path={path + '/tables/salesshipmentitem'} component={SalesShipmentItem} />\n          <Route path={path + '/tables/salesshipmenttrack'} component={SalesShipmentTrack} />\n          <Route path={path + '/tables/salesshippingaggregated'} component={SalesShippingAggregated} />\n          <Route path={path + '/tables/salesshippingaggregatedorder'} component={SalesShippingAggregatedOrder} />\n          <Route path={path + '/tables/salesrule'} component={Salesrule} />\n          <Route path={path + '/tables/salesrulecoupon'} component={SalesruleCoupon} />\n          <Route path={path + '/tables/salesrulecouponaggregated'} component={SalesruleCouponAggregated} />\n          <Route path={path + '/tables/salesrulecouponaggregatedorder'} component={SalesruleCouponAggregatedOrder} />\n          <Route path={path + '/tables/salesrulecouponaggregatedupdated'} component={SalesruleCouponAggregatedUpdated} />\n          <Route path={path + '/tables/salesrulecouponusage'} component={SalesruleCouponUsage} />\n          <Route path={path + '/tables/salesrulecustomer'} component={SalesruleCustomer} />\n          <Route path={path + '/tables/salesrulecustomergroup'} component={SalesruleCustomerGroup} />\n          <Route path={path + '/tables/salesrulelabel'} component={SalesruleLabel} />\n          <Route path={path + '/tables/salesruleproductattribute'} component={SalesruleProductAttribute} />\n          <Route path={path + '/tables/salesrulewebsite'} component={SalesruleWebsite} />\n          <Route path={path + '/tables/searchquery'} component={SearchQuery} />\n          <Route path={path + '/tables/searchsynonyms'} component={SearchSynonyms} />\n          <Route path={path + '/tables/sendfriendlog'} component={SendfriendLog} />\n          <Route path={path + '/tables/sequencecreditmemo0'} component={SequenceCreditmemo0} />\n          <Route path={path + '/tables/sequencecreditmemo1'} component={SequenceCreditmemo1} />\n          <Route path={path + '/tables/sequenceinvoice0'} component={SequenceInvoice0} />\n          <Route path={path + '/tables/sequenceinvoice1'} component={SequenceInvoice1} />\n          <Route path={path + '/tables/sequenceorder0'} component={SequenceOrder0} />\n          <Route path={path + '/tables/sequenceorder1'} component={SequenceOrder1} />\n          <Route path={path + '/tables/sequenceshipment0'} component={SequenceShipment0} />\n          <Route path={path + '/tables/sequenceshipment1'} component={SequenceShipment1} />\n          <Route path={path + '/tables/session'} component={Session} />\n          <Route path={path + '/tables/setupmodule'} component={SetupModule} />\n          <Route path={path + '/tables/shippingtablerate'} component={ShippingTablerate} />\n          <Route path={path + '/tables/signifydcase'} component={SignifydCase} />\n          <Route path={path + '/tables/sitemap'} component={Sitemap} />\n          <Route path={path + '/tables/store'} component={Store} />\n          <Route path={path + '/tables/storegroup'} component={StoreGroup} />\n          <Route path={path + '/tables/storewebsite'} component={StoreWebsite} />\n          <Route path={path + '/tables/taxcalculation'} component={TaxCalculation} />\n          <Route path={path + '/tables/taxcalculationrate'} component={TaxCalculationRate} />\n          <Route path={path + '/tables/taxcalculationratetitle'} component={TaxCalculationRateTitle} />\n          <Route path={path + '/tables/taxcalculationrule'} component={TaxCalculationRule} />\n          <Route path={path + '/tables/taxclass'} component={TaxClass} />\n          <Route path={path + '/tables/taxorderaggregatedcreated'} component={TaxOrderAggregatedCreated} />\n          <Route path={path + '/tables/taxorderaggregatedupdated'} component={TaxOrderAggregatedUpdated} />\n          <Route path={path + '/tables/temandocheckoutaddress'} component={TemandoCheckoutAddress} />\n          <Route path={path + '/tables/temandocollectionpointsearch'} component={TemandoCollectionPointSearch} />\n          <Route path={path + '/tables/temandoorder'} component={TemandoOrder} />\n          <Route path={path + '/tables/temandoordercollectionpoint'} component={TemandoOrderCollectionPoint} />\n          <Route path={path + '/tables/temandoorderpickuplocation'} component={TemandoOrderPickupLocation} />\n          <Route path={path + '/tables/temandopickuplocationsearch'} component={TemandoPickupLocationSearch} />\n          <Route path={path + '/tables/temandoquotecollectionpoint'} component={TemandoQuoteCollectionPoint} />\n          <Route path={path + '/tables/temandoquotepickuplocation'} component={TemandoQuotePickupLocation} />\n          <Route path={path + '/tables/temandoshipment'} component={TemandoShipment} />\n          <Route path={path + '/tables/theme'} component={Theme} />\n          <Route path={path + '/tables/themefile'} component={ThemeFile} />\n          <Route path={path + '/tables/translation'} component={Translation} />\n          <Route path={path + '/tables/uibookmark'} component={UiBookmark} />\n          <Route path={path + '/tables/urlrewrite'} component={UrlRewrite} />\n          <Route path={path + '/tables/variable'} component={Variable} />\n          <Route path={path + '/tables/variablevalue'} component={VariableValue} />\n          <Route path={path + '/tables/vaultpaymenttoken'} component={VaultPaymentToken} />\n          <Route path={path + '/tables/vaultpaymenttokenorderpaymentlink'} component={VaultPaymentTokenOrderPaymentLink} />\n          <Route path={path + '/tables/vertexcustomercode'} component={VertexCustomerCode} />\n          <Route path={path + '/tables/vertexinvoicesent'} component={VertexInvoiceSent} />\n          <Route path={path + '/tables/vertexorderinvoicestatus'} component={VertexOrderInvoiceStatus} />\n          <Route path={path + '/tables/vertexsalescreditmemoiteminvoicetextcode'} component={VertexSalesCreditmemoItemInvoiceTextCode} />\n          <Route path={path + '/tables/vertexsalescreditmemoitemtaxcode'} component={VertexSalesCreditmemoItemTaxCode} />\n          <Route path={path + '/tables/vertexsalescreditmemoitemvertextaxcode'} component={VertexSalesCreditmemoItemVertexTaxCode} />\n          <Route path={path + '/tables/vertexsalesorderiteminvoicetextcode'} component={VertexSalesOrderItemInvoiceTextCode} />\n          <Route path={path + '/tables/vertexsalesorderitemtaxcode'} component={VertexSalesOrderItemTaxCode} />\n          <Route path={path + '/tables/vertexsalesorderitemvertextaxcode'} component={VertexSalesOrderItemVertexTaxCode} />\n          <Route path={path + '/tables/vertextaxrequest'} component={VertexTaxrequest} />\n          <Route path={path + '/tables/weeetax'} component={WeeeTax} />\n          <Route path={path + '/tables/widget'} component={Widget} />\n          <Route path={path + '/tables/widgetinstance'} component={WidgetInstance} />\n          <Route path={path + '/tables/widgetinstancepage'} component={WidgetInstancePage} />\n          <Route path={path + '/tables/widgetinstancepagelayout'} component={WidgetInstancePageLayout} />\n          <Route path={path + '/tables/wishlist'} component={Wishlist} />\n          <Route path={path + '/tables/wishlistitem'} component={WishlistItem} />\n          <Route path={path + '/tables/wishlistitemoption'} component={WishlistItemOption} />\n      </Switch>\n  </div>\n)};\n\nexport default TableMenu;","/backup/apps/magentotest/ui/src/components/Sidebar/index.js",["2018"],"import React, { useState } from 'react';\nimport SlidingPane from \"react-sliding-pane\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport {Button, Navbar} from 'react-bootstrap';\nimport './style.css';\n\nimport {Navigation} from 'react-minimal-side-navigation';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport 'react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faFileAlt, faTable, faDatabase, faBars, faTimes} from '@fortawesome/free-solid-svg-icons';\n\nimport { Queries } from './queries';\nimport { Tables } from './tables';\nimport init from '../../init';\n\nconst Sidebar = () => {\n    const history = useHistory();\n    const location = useLocation();\n    const [openPanel, setOpenPanel] = useState(false);\n\n    return (\n      <React.Fragment>\n        <Navbar bg=\"light\">\n          <Navbar.Brand>\n          <Button className='shadow-none' variant=\"link\" type=\"submit\" onClick={() => setOpenPanel(true)}>\n            <FontAwesomeIcon icon={faBars} style={{color: '#2d3748'}}/>\n          </Button>\n          </Navbar.Brand>\n            <Navbar.Collapse className=\"justify-content-end\">\n              <Navbar.Text>\n                magento\n              </Navbar.Text>\n            </Navbar.Collapse>\n        </Navbar>\n        <SlidingPane\n          closeIcon={<FontAwesomeIcon icon={faTimes} />}\n          isOpen={openPanel}\n          from=\"left\"\n          width=\"350px\"\n          onRequestClose={() => setOpenPanel(false)}\n        >\n          <div className=\"panel-container\">\n            <Navigation\n              activeItemId={location.pathname}\n              onSelect={({itemId}) => {\n                  history.push(itemId);\n                  setOpenPanel(false);\n              }}\n              items={[\n                {\n                  title: 'Overview',\n                  itemId: '/' + init.appName,\n                  elemBefore: () => <FontAwesomeIcon icon={faFileAlt} />,\n                },\n                {\n                  title: 'Tables',\n                  itemId: '/' + init.appName + '/tables',\n                  elemBefore: () => <FontAwesomeIcon icon={faTable} />,\n                  subNav: Tables\n                },\n                {\n                  title: 'Queries',\n                  itemId: '/' + init.appName + '/queries',\n                  elemBefore: () => <FontAwesomeIcon icon={faTable} />,\n                  subNav: Queries\n                },\n              ]}\n            />\n          </div>\n        </SlidingPane>\n      </React.Fragment>\n    )\n}\n\nexport default Sidebar;","/backup/apps/magentotest/ui/src/pages/tables/AdminUser.js",["2019"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'userId', header: 'userId', defaultFlex: 1 },\n  { name: 'firstname', header: 'firstname', defaultFlex: 1 },\n  { name: 'lastname', header: 'lastname', defaultFlex: 1 },\n  { name: 'email', header: 'email', defaultFlex: 1 },\n  { name: 'username', header: 'username', defaultFlex: 1 },\n  { name: 'password', header: 'password', defaultFlex: 1 },\n  { name: 'created', header: 'created', defaultFlex: 1 },\n  { name: 'modified', header: 'modified', defaultFlex: 1 },\n  { name: 'logdate', header: 'logdate', defaultFlex: 1 },\n  { name: 'lognum', header: 'lognum', defaultFlex: 1 },\n  { name: 'reloadAclFlag', header: 'reloadAclFlag', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n  { name: 'extra', header: 'extra', defaultFlex: 1 },\n  { name: 'rpToken', header: 'rpToken', defaultFlex: 1 },\n  { name: 'rpTokenCreatedAt', header: 'rpTokenCreatedAt', defaultFlex: 1 },\n  { name: 'interfaceLocale', header: 'interfaceLocale', defaultFlex: 1 },\n  { name: 'failuresNum', header: 'failuresNum', defaultFlex: 1 },\n  { name: 'firstFailure', header: 'firstFailure', defaultFlex: 1 },\n  { name: 'lockExpires', header: 'lockExpires', defaultFlex: 1 },\n  { name: 'refreshToken', header: 'refreshToken', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'adminuser/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst AdminUser = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default AdminUser;","/backup/apps/magentotest/ui/src/pages/tables/AdminPasswords.js",["2020"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'passwordId', header: 'passwordId', defaultFlex: 1 },\n  { name: 'userId', header: 'userId', defaultFlex: 1 },\n  { name: 'passwordHash', header: 'passwordHash', defaultFlex: 1 },\n  { name: 'expires', header: 'expires', defaultFlex: 1 },\n  { name: 'lastUpdated', header: 'lastUpdated', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'adminpasswords/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst AdminPasswords = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default AdminPasswords;","/backup/apps/magentotest/ui/src/pages/tables/AdminSystemMessages.js",["2021"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'identity', header: 'identity', defaultFlex: 1 },\n  { name: 'severity', header: 'severity', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'adminsystemmessages/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst AdminSystemMessages = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default AdminSystemMessages;","/backup/apps/magentotest/ui/src/pages/tables/AdminUserSession.js",["2022"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'sessionId', header: 'sessionId', defaultFlex: 1 },\n  { name: 'userId', header: 'userId', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'ip', header: 'ip', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'adminusersession/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst AdminUserSession = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default AdminUserSession;","/backup/apps/magentotest/ui/src/pages/tables/AdminnotificationInbox.js",["2023"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'notificationId', header: 'notificationId', defaultFlex: 1 },\n  { name: 'severity', header: 'severity', defaultFlex: 1 },\n  { name: 'dateAdded', header: 'dateAdded', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'url', header: 'url', defaultFlex: 1 },\n  { name: 'isRead', header: 'isRead', defaultFlex: 1 },\n  { name: 'isRemove', header: 'isRemove', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'adminnotificationinbox/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst AdminnotificationInbox = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default AdminnotificationInbox;","/backup/apps/magentotest/ui/src/pages/tables/AmazonCustomer.js",["2024"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'amazonId', header: 'amazonId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'amazoncustomer/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst AmazonCustomer = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default AmazonCustomer;","/backup/apps/magentotest/ui/src/pages/tables/AmazonPendingRefund.js",["2025"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'refundId', header: 'refundId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'paymentId', header: 'paymentId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'amazonpendingrefund/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst AmazonPendingRefund = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default AmazonPendingRefund;","/backup/apps/magentotest/ui/src/pages/tables/AmazonPendingAuthorization.js",["2026"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'paymentId', header: 'paymentId', defaultFlex: 1 },\n  { name: 'authorizationId', header: 'authorizationId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'processed', header: 'processed', defaultFlex: 1 },\n  { name: 'capture', header: 'capture', defaultFlex: 1 },\n  { name: 'captureId', header: 'captureId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'amazonpendingauthorization/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst AmazonPendingAuthorization = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default AmazonPendingAuthorization;","/backup/apps/magentotest/ui/src/pages/tables/AmazonPendingCapture.js",["2027"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'captureId', header: 'captureId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'paymentId', header: 'paymentId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'amazonpendingcapture/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst AmazonPendingCapture = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default AmazonPendingCapture;","/backup/apps/magentotest/ui/src/pages/tables/AmazonSalesOrder.js",["2028"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'amazonOrderReferenceId', header: 'amazonOrderReferenceId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'amazonsalesorder/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst AmazonSalesOrder = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default AmazonSalesOrder;","/backup/apps/magentotest/ui/src/pages/tables/AmazonQuote.js",["2029"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'quoteId', header: 'quoteId', defaultFlex: 1 },\n  { name: 'amazonOrderReferenceId', header: 'amazonOrderReferenceId', defaultFlex: 1 },\n  { name: 'sandboxSimulationReference', header: 'sandboxSimulationReference', defaultFlex: 1 },\n  { name: 'confirmed', header: 'confirmed', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'amazonquote/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst AmazonQuote = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default AmazonQuote;","/backup/apps/magentotest/ui/src/pages/tables/AuthorizationRule.js",["2030"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'roleId', header: 'roleId', defaultFlex: 1 },\n  { name: 'resourceId', header: 'resourceId', defaultFlex: 1 },\n  { name: 'privileges', header: 'privileges', defaultFlex: 1 },\n  { name: 'permission', header: 'permission', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'authorizationrule/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst AuthorizationRule = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default AuthorizationRule;","/backup/apps/magentotest/ui/src/pages/tables/AuthorizationRole.js",["2031"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'roleId', header: 'roleId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'treeLevel', header: 'treeLevel', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n  { name: 'roleType', header: 'roleType', defaultFlex: 1 },\n  { name: 'userId', header: 'userId', defaultFlex: 1 },\n  { name: 'userType', header: 'userType', defaultFlex: 1 },\n  { name: 'roleName', header: 'roleName', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'authorizationrole/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst AuthorizationRole = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default AuthorizationRole;","/backup/apps/magentotest/ui/src/pages/tables/CacheTag.js",["2032"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'tag', header: 'tag', defaultFlex: 1 },\n  { name: 'cacheId', header: 'cacheId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'cachetag/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CacheTag = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CacheTag;","/backup/apps/magentotest/ui/src/pages/tables/Cache.js",["2033"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'data', header: 'data', defaultFlex: 1 },\n  { name: 'createTime', header: 'createTime', defaultFlex: 1 },\n  { name: 'updateTime', header: 'updateTime', defaultFlex: 1 },\n  { name: 'expireTime', header: 'expireTime', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'cache/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Cache = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Cache;","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryEntity.js",["2034"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'attributeSetId', header: 'attributeSetId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'path', header: 'path', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'level', header: 'level', defaultFlex: 1 },\n  { name: 'childrenCount', header: 'childrenCount', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogcategoryentity/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogCategoryEntity = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogCategoryEntity;","/backup/apps/magentotest/ui/src/pages/tables/CaptchaLog.js",["2035"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'type', header: 'type', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n  { name: 'count', header: 'count', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'captchalog/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CaptchaLog = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CaptchaLog;","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryEntityDatetime.js",["2036"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogcategoryentitydatetime/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogCategoryEntityDatetime = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogCategoryEntityDatetime;","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryEntityDecimal.js",["2037"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogcategoryentitydecimal/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogCategoryEntityDecimal = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogCategoryEntityDecimal;","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryEntityText.js",["2038"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogcategoryentitytext/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogCategoryEntityText = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogCategoryEntityText;","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryEntityInt.js",["2039"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogcategoryentityint/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogCategoryEntityInt = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogCategoryEntityInt;","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryEntityVarchar.js",["2040"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogcategoryentityvarchar/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogCategoryEntityVarchar = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogCategoryEntityVarchar;","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryProduct.js",["2041"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'categoryId', header: 'categoryId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogcategoryproduct/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogCategoryProduct = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogCategoryProduct;","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryProductIndexReplica.js",["2042"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'categoryId', header: 'categoryId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'isParent', header: 'isParent', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'visibility', header: 'visibility', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogcategoryproductindexreplica/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogCategoryProductIndexReplica = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogCategoryProductIndexReplica;","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryProductIndex.js",["2043"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'categoryId', header: 'categoryId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'isParent', header: 'isParent', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'visibility', header: 'visibility', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogcategoryproductindex/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogCategoryProductIndex = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogCategoryProductIndex;","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryProductIndexStore1Replica.js",["2044"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'categoryId', header: 'categoryId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'isParent', header: 'isParent', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'visibility', header: 'visibility', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogcategoryproductindexstore1replica/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogCategoryProductIndexStore1Replica = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogCategoryProductIndexStore1Replica;","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryProductIndexStore1.js",["2045"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'categoryId', header: 'categoryId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'isParent', header: 'isParent', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'visibility', header: 'visibility', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogcategoryproductindexstore1/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogCategoryProductIndexStore1 = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogCategoryProductIndexStore1;","/backup/apps/magentotest/ui/src/pages/tables/CatalogCompareItem.js",["2046"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'catalogCompareItemId', header: 'catalogCompareItemId', defaultFlex: 1 },\n  { name: 'visitorId', header: 'visitorId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogcompareitem/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogCompareItem = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogCompareItem;","/backup/apps/magentotest/ui/src/pages/tables/CatalogCategoryProductIndexTmp.js",["2047"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'categoryId', header: 'categoryId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'isParent', header: 'isParent', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'visibility', header: 'visibility', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogcategoryproductindextmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogCategoryProductIndexTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogCategoryProductIndexTmp;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductBundleOption.js",["2048"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'required', header: 'required', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'type', header: 'type', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductbundleoption/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductBundleOption = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductBundleOption;","/backup/apps/magentotest/ui/src/pages/tables/CatalogEavAttribute.js",["2049"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'frontendInputRenderer', header: 'frontendInputRenderer', defaultFlex: 1 },\n  { name: 'isGlobal', header: 'isGlobal', defaultFlex: 1 },\n  { name: 'isVisible', header: 'isVisible', defaultFlex: 1 },\n  { name: 'isSearchable', header: 'isSearchable', defaultFlex: 1 },\n  { name: 'isFilterable', header: 'isFilterable', defaultFlex: 1 },\n  { name: 'isComparable', header: 'isComparable', defaultFlex: 1 },\n  { name: 'isVisibleOnFront', header: 'isVisibleOnFront', defaultFlex: 1 },\n  { name: 'isHtmlAllowedOnFront', header: 'isHtmlAllowedOnFront', defaultFlex: 1 },\n  { name: 'isUsedForPriceRules', header: 'isUsedForPriceRules', defaultFlex: 1 },\n  { name: 'isFilterableInSearch', header: 'isFilterableInSearch', defaultFlex: 1 },\n  { name: 'usedInProductListing', header: 'usedInProductListing', defaultFlex: 1 },\n  { name: 'usedForSortBy', header: 'usedForSortBy', defaultFlex: 1 },\n  { name: 'applyTo', header: 'applyTo', defaultFlex: 1 },\n  { name: 'isVisibleInAdvancedSearch', header: 'isVisibleInAdvancedSearch', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'isWysiwygEnabled', header: 'isWysiwygEnabled', defaultFlex: 1 },\n  { name: 'isUsedForPromoRules', header: 'isUsedForPromoRules', defaultFlex: 1 },\n  { name: 'isRequiredInAdminStore', header: 'isRequiredInAdminStore', defaultFlex: 1 },\n  { name: 'isUsedInGrid', header: 'isUsedInGrid', defaultFlex: 1 },\n  { name: 'isVisibleInGrid', header: 'isVisibleInGrid', defaultFlex: 1 },\n  { name: 'isFilterableInGrid', header: 'isFilterableInGrid', defaultFlex: 1 },\n  { name: 'searchWeight', header: 'searchWeight', defaultFlex: 1 },\n  { name: 'additionalData', header: 'additionalData', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogeavattribute/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogEavAttribute = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogEavAttribute;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductBundlePriceIndex.js",["2050"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductbundlepriceindex/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductBundlePriceIndex = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductBundlePriceIndex;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductBundleOptionValue.js",["2051"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n  { name: 'parentProductId', header: 'parentProductId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductbundleoptionvalue/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductBundleOptionValue = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductBundleOptionValue;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductBundleSelection.js",["2052"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'selectionId', header: 'selectionId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'parentProductId', header: 'parentProductId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'isDefault', header: 'isDefault', defaultFlex: 1 },\n  { name: 'selectionPriceType', header: 'selectionPriceType', defaultFlex: 1 },\n  { name: 'selectionPriceValue', header: 'selectionPriceValue', defaultFlex: 1 },\n  { name: 'selectionQty', header: 'selectionQty', defaultFlex: 1 },\n  { name: 'selectionCanChangeQty', header: 'selectionCanChangeQty', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductbundleselection/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductBundleSelection = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductBundleSelection;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductBundleSelectionPrice.js",["2053"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'selectionId', header: 'selectionId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'selectionPriceType', header: 'selectionPriceType', defaultFlex: 1 },\n  { name: 'selectionPriceValue', header: 'selectionPriceValue', defaultFlex: 1 },\n  { name: 'parentProductId', header: 'parentProductId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductbundleselectionprice/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductBundleSelectionPrice = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductBundleSelectionPrice;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityDatetime.js",["2054"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductentitydatetime/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductEntityDatetime = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductEntityDatetime;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityDecimal.js",["2055"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductentitydecimal/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductEntityDecimal = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductEntityDecimal;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityGallery.js",["2056"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductentitygallery/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductEntityGallery = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductEntityGallery;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityInt.js",["2057"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductentityint/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductEntityInt = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductEntityInt;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityMediaGallery.js",["2058"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n  { name: 'mediaType', header: 'mediaType', defaultFlex: 1 },\n  { name: 'disabled', header: 'disabled', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductentitymediagallery/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductEntityMediaGallery = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductEntityMediaGallery;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityMediaGalleryValue.js",["2059"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'label', header: 'label', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'disabled', header: 'disabled', defaultFlex: 1 },\n  { name: 'recordId', header: 'recordId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductentitymediagalleryvalue/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductEntityMediaGalleryValue = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductEntityMediaGalleryValue;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityMediaGalleryValueVideo.js",["2060"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'provider', header: 'provider', defaultFlex: 1 },\n  { name: 'url', header: 'url', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'metadata', header: 'metadata', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductentitymediagalleryvaluevideo/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductEntityMediaGalleryValueVideo = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductEntityMediaGalleryValueVideo;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityMediaGalleryValueToEntity.js",["2061"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductentitymediagalleryvaluetoentity/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductEntityMediaGalleryValueToEntity = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductEntityMediaGalleryValueToEntity;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityText.js",["2062"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductentitytext/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductEntityText = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductEntityText;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityTierPrice.js",["2063"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'allGroups', header: 'allGroups', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'qty', header: 'qty', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'percentageValue', header: 'percentageValue', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductentitytierprice/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductEntityTierPrice = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductEntityTierPrice;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductFrontendAction.js",["2064"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'actionId', header: 'actionId', defaultFlex: 1 },\n  { name: 'typeId', header: 'typeId', defaultFlex: 1 },\n  { name: 'visitorId', header: 'visitorId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'addedAt', header: 'addedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductfrontendaction/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductFrontendAction = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductFrontendAction;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntityVarchar.js",["2065"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductentityvarchar/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductEntityVarchar = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductEntityVarchar;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEav.js",["2066"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n  { name: 'sourceId', header: 'sourceId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexeav/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexEav = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexEav;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavDecimal.js",["2067"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n  { name: 'sourceId', header: 'sourceId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexeavdecimal/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexEavDecimal = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexEavDecimal;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavDecimalReplica.js",["2068"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n  { name: 'sourceId', header: 'sourceId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexeavdecimalreplica/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexEavDecimalReplica = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexEavDecimalReplica;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavDecimalIdx.js",["2069"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n  { name: 'sourceId', header: 'sourceId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexeavdecimalidx/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexEavDecimalIdx = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexEavDecimalIdx;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavDecimalTmp.js",["2070"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n  { name: 'sourceId', header: 'sourceId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexeavdecimaltmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexEavDecimalTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexEavDecimalTmp;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavIdx.js",["2071"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n  { name: 'sourceId', header: 'sourceId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexeavidx/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexEavIdx = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexEavIdx;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavTmp.js",["2072"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n  { name: 'sourceId', header: 'sourceId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexeavtmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexEavTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexEavTmp;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexEavReplica.js",["2073"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n  { name: 'sourceId', header: 'sourceId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexeavreplica/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexEavReplica = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexEavReplica;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceBundleIdx.js",["2074"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'taxClassId', header: 'taxClassId', defaultFlex: 1 },\n  { name: 'priceType', header: 'priceType', defaultFlex: 1 },\n  { name: 'specialPrice', header: 'specialPrice', defaultFlex: 1 },\n  { name: 'tierPercent', header: 'tierPercent', defaultFlex: 1 },\n  { name: 'origPrice', header: 'origPrice', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n  { name: 'baseTier', header: 'baseTier', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricebundleidx/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceBundleIdx = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceBundleIdx;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPrice.js",["2075"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'taxClassId', header: 'taxClassId', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'finalPrice', header: 'finalPrice', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexprice/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPrice = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPrice;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceBundleOptTmp.js",["2076"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'altPrice', header: 'altPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n  { name: 'altTierPrice', header: 'altTierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricebundleopttmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceBundleOptTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceBundleOptTmp;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceBundleOptIdx.js",["2077"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'altPrice', header: 'altPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n  { name: 'altTierPrice', header: 'altTierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricebundleoptidx/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceBundleOptIdx = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceBundleOptIdx;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceBundleSelIdx.js",["2078"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'selectionId', header: 'selectionId', defaultFlex: 1 },\n  { name: 'groupType', header: 'groupType', defaultFlex: 1 },\n  { name: 'isRequired', header: 'isRequired', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricebundleselidx/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceBundleSelIdx = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceBundleSelIdx;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceBundleSelTmp.js",["2079"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'selectionId', header: 'selectionId', defaultFlex: 1 },\n  { name: 'groupType', header: 'groupType', defaultFlex: 1 },\n  { name: 'isRequired', header: 'isRequired', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricebundleseltmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceBundleSelTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceBundleSelTmp;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceCfgOptAgrIdx.js",["2080"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'childId', header: 'childId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricecfgoptagridx/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceCfgOptAgrIdx = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceCfgOptAgrIdx;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceBundleTmp.js",["2081"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'taxClassId', header: 'taxClassId', defaultFlex: 1 },\n  { name: 'priceType', header: 'priceType', defaultFlex: 1 },\n  { name: 'specialPrice', header: 'specialPrice', defaultFlex: 1 },\n  { name: 'tierPercent', header: 'tierPercent', defaultFlex: 1 },\n  { name: 'origPrice', header: 'origPrice', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n  { name: 'baseTier', header: 'baseTier', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricebundletmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceBundleTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceBundleTmp;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceCfgOptAgrTmp.js",["2082"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'childId', header: 'childId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricecfgoptagrtmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceCfgOptAgrTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceCfgOptAgrTmp;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceCfgOptIdx.js",["2083"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricecfgoptidx/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceCfgOptIdx = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceCfgOptIdx;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceCfgOptTmp.js",["2084"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricecfgopttmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceCfgOptTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceCfgOptTmp;","/backup/apps/magentotest/ui/src/pages/tables/InventoryStock.js",["2085"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'stockId', header: 'stockId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'inventorystock/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst InventoryStock = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default InventoryStock;","/backup/apps/magentotest/ui/src/pages/tables/InventorySourceStockLink.js",["2086"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'linkId', header: 'linkId', defaultFlex: 1 },\n  { name: 'stockId', header: 'stockId', defaultFlex: 1 },\n  { name: 'sourceCode', header: 'sourceCode', defaultFlex: 1 },\n  { name: 'priority', header: 'priority', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'inventorysourcestocklink/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst InventorySourceStockLink = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default InventorySourceStockLink;","/backup/apps/magentotest/ui/src/pages/tables/InventorySourceCarrierLink.js",["2087"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'linkId', header: 'linkId', defaultFlex: 1 },\n  { name: 'sourceCode', header: 'sourceCode', defaultFlex: 1 },\n  { name: 'carrierCode', header: 'carrierCode', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'inventorysourcecarrierlink/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst InventorySourceCarrierLink = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default InventorySourceCarrierLink;","/backup/apps/magentotest/ui/src/pages/tables/InventorySourceItem.js",["2088"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sourceItemId', header: 'sourceItemId', defaultFlex: 1 },\n  { name: 'sourceCode', header: 'sourceCode', defaultFlex: 1 },\n  { name: 'sku', header: 'sku', defaultFlex: 1 },\n  { name: 'quantity', header: 'quantity', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'inventorysourceitem/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst InventorySourceItem = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default InventorySourceItem;","/backup/apps/magentotest/ui/src/pages/tables/InventoryShipmentSource.js",["2089"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'shipmentId', header: 'shipmentId', defaultFlex: 1 },\n  { name: 'sourceCode', header: 'sourceCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'inventoryshipmentsource/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst InventoryShipmentSource = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default InventoryShipmentSource;","/backup/apps/magentotest/ui/src/pages/tables/InventorySource.js",["2090"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sourceCode', header: 'sourceCode', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'enabled', header: 'enabled', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'latitude', header: 'latitude', defaultFlex: 1 },\n  { name: 'longitude', header: 'longitude', defaultFlex: 1 },\n  { name: 'countryId', header: 'countryId', defaultFlex: 1 },\n  { name: 'regionId', header: 'regionId', defaultFlex: 1 },\n  { name: 'region', header: 'region', defaultFlex: 1 },\n  { name: 'city', header: 'city', defaultFlex: 1 },\n  { name: 'street', header: 'street', defaultFlex: 1 },\n  { name: 'postcode', header: 'postcode', defaultFlex: 1 },\n  { name: 'contactName', header: 'contactName', defaultFlex: 1 },\n  { name: 'email', header: 'email', defaultFlex: 1 },\n  { name: 'phone', header: 'phone', defaultFlex: 1 },\n  { name: 'fax', header: 'fax', defaultFlex: 1 },\n  { name: 'useDefaultCarrierConfig', header: 'useDefaultCarrierConfig', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'inventorysource/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst InventorySource = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default InventorySource;","/backup/apps/magentotest/ui/src/pages/tables/InventoryReservation.js",["2091"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'reservationId', header: 'reservationId', defaultFlex: 1 },\n  { name: 'stockId', header: 'stockId', defaultFlex: 1 },\n  { name: 'sku', header: 'sku', defaultFlex: 1 },\n  { name: 'quantity', header: 'quantity', defaultFlex: 1 },\n  { name: 'metadata', header: 'metadata', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'inventoryreservation/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst InventoryReservation = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default InventoryReservation;","/backup/apps/magentotest/ui/src/pages/tables/InventoryGeoname.js",["2092"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'countryCode', header: 'countryCode', defaultFlex: 1 },\n  { name: 'postcode', header: 'postcode', defaultFlex: 1 },\n  { name: 'city', header: 'city', defaultFlex: 1 },\n  { name: 'region', header: 'region', defaultFlex: 1 },\n  { name: 'province', header: 'province', defaultFlex: 1 },\n  { name: 'latitude', header: 'latitude', defaultFlex: 1 },\n  { name: 'longitude', header: 'longitude', defaultFlex: 1 },\n  { name: 'defaultId', header: 'defaultId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'inventorygeoname/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst InventoryGeoname = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default InventoryGeoname;","/backup/apps/magentotest/ui/src/pages/tables/InventoryLowStockNotificationConfiguration.js",["2093"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sourceCode', header: 'sourceCode', defaultFlex: 1 },\n  { name: 'sku', header: 'sku', defaultFlex: 1 },\n  { name: 'notifyStockQty', header: 'notifyStockQty', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'inventorylowstocknotificationconfiguration/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst InventoryLowStockNotificationConfiguration = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default InventoryLowStockNotificationConfiguration;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductEntity.js",["2094"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'attributeSetId', header: 'attributeSetId', defaultFlex: 1 },\n  { name: 'typeId', header: 'typeId', defaultFlex: 1 },\n  { name: 'sku', header: 'sku', defaultFlex: 1 },\n  { name: 'hasOptions', header: 'hasOptions', defaultFlex: 1 },\n  { name: 'requiredOptions', header: 'requiredOptions', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductentity/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductEntity = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductEntity;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductBundleStockIndex.js",["2095"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'stockId', header: 'stockId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'stockStatus', header: 'stockStatus', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductbundlestockindex/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductBundleStockIndex = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductBundleStockIndex;","/backup/apps/magentotest/ui/src/pages/tables/Integration.js",["2096"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'integrationId', header: 'integrationId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'email', header: 'email', defaultFlex: 1 },\n  { name: 'endpoint', header: 'endpoint', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'consumerId', header: 'consumerId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'setupType', header: 'setupType', defaultFlex: 1 },\n  { name: 'identityLinkUrl', header: 'identityLinkUrl', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'integration/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Integration = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Integration;","/backup/apps/magentotest/ui/src/pages/tables/ImportexportImportdata.js",["2097"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'entity', header: 'entity', defaultFlex: 1 },\n  { name: 'behavior', header: 'behavior', defaultFlex: 1 },\n  { name: 'data', header: 'data', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'importexportimportdata/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ImportexportImportdata = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ImportexportImportdata;","/backup/apps/magentotest/ui/src/pages/tables/IndexerState.js",["2098"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'stateId', header: 'stateId', defaultFlex: 1 },\n  { name: 'indexerId', header: 'indexerId', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'updated', header: 'updated', defaultFlex: 1 },\n  { name: 'hashConfig', header: 'hashConfig', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'indexerstate/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst IndexerState = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default IndexerState;","/backup/apps/magentotest/ui/src/pages/tables/ImportHistory.js",["2099"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'historyId', header: 'historyId', defaultFlex: 1 },\n  { name: 'startedAt', header: 'startedAt', defaultFlex: 1 },\n  { name: 'userId', header: 'userId', defaultFlex: 1 },\n  { name: 'importedFile', header: 'importedFile', defaultFlex: 1 },\n  { name: 'executionTime', header: 'executionTime', defaultFlex: 1 },\n  { name: 'summary', header: 'summary', defaultFlex: 1 },\n  { name: 'errorFile', header: 'errorFile', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'importhistory/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ImportHistory = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ImportHistory;","/backup/apps/magentotest/ui/src/pages/tables/GoogleoptimizerCode.js",["2100"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'codeId', header: 'codeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'entityType', header: 'entityType', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'experimentScript', header: 'experimentScript', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'googleoptimizercode/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst GoogleoptimizerCode = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default GoogleoptimizerCode;","/backup/apps/magentotest/ui/src/pages/tables/GiftMessage.js",["2101"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'giftMessageId', header: 'giftMessageId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'sender', header: 'sender', defaultFlex: 1 },\n  { name: 'recipient', header: 'recipient', defaultFlex: 1 },\n  { name: 'message', header: 'message', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'giftmessage/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst GiftMessage = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default GiftMessage;","/backup/apps/magentotest/ui/src/pages/tables/Flag.js",["2102"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'flagId', header: 'flagId', defaultFlex: 1 },\n  { name: 'flagCode', header: 'flagCode', defaultFlex: 1 },\n  { name: 'state', header: 'state', defaultFlex: 1 },\n  { name: 'flagData', header: 'flagData', defaultFlex: 1 },\n  { name: 'lastUpdate', header: 'lastUpdate', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'flag/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Flag = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Flag;","/backup/apps/magentotest/ui/src/pages/tables/EmailWishlist.js",["2103"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'wishlistId', header: 'wishlistId', defaultFlex: 1 },\n  { name: 'itemCount', header: 'itemCount', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'wishlistImported', header: 'wishlistImported', defaultFlex: 1 },\n  { name: 'wishlistModified', header: 'wishlistModified', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'emailwishlist/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EmailWishlist = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EmailWishlist;","/backup/apps/magentotest/ui/src/components/Card/index.js",["2104","2105"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Accordion, Table, Badge } from \"react-bootstrap/\";\nimport Image from 'react-bootstrap/Image'\nimport summary from \"../../summary\"\nimport init from \"../../init\"\n\nconst CardBox = () => {\n  const url = \"/\" + init.domainName + \"/\" + init.sqlName;\n  const er = init.name + \".png\";\n  return (\n    <React.Fragment>\n      <Accordion defaultActiveKey=\"0\">\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>\n            {init.name} Application Generation Overview\n          </Accordion.Header>\n          <Accordion.Body>\n            The {init.name} application is auto-generated from the {init.appName}\n            <Link to={url}> database schema</Link>\n            <hr/>\n            <Table striped bordered hover size=\"sm\">\n              <thead>\n                <tr>\n                  <th>Source Type</th>\n                  <th># of Files</th>\n                  <th># of Lines</th>\n                </tr>\n              </thead>\n              <tbody>\n\n                {summary.map((item,index) => (\n                  <tr>\n                    <td key={index + item.source}>{item.source}</td>\n                    <td key={index + item.file_count}><Badge bg=\"success\" key='1'>{item.file_count}</Badge> </td>\n                    <td key={index + item.line_count}><Badge bg=\"success\" key='2'>{item.line_count}</Badge></td>\n                  </tr>\n                ))}\n\n\n              </tbody>\n            </Table>\n          </Accordion.Body>\n        </Accordion.Item>\n\n      </Accordion>\n\n      <Accordion defaultActiveKey=\"1\">\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>\n            {init.name} Entity Relationship Diagram\n          </Accordion.Header>\n          <Accordion.Body>\n            <img src={er} />\n          </Accordion.Body>\n        </Accordion.Item>\n\n      </Accordion>\n    </React.Fragment>\n  );\n};\n\nexport default CardBox;\n","/backup/apps/magentotest/ui/src/components/Form/index.js",[],"/backup/apps/magentotest/ui/src/summary.js",[],"/backup/apps/magentotest/ui/src/components/Sidebar/tables.js",[],"/backup/apps/magentotest/ui/src/components/Sidebar/queries.js",[],"/backup/apps/magentotest/ui/src/pages/tables/EmailRules.js",["2106"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'websiteIds', header: 'websiteIds', defaultFlex: 1 },\n  { name: 'type', header: 'type', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'combination', header: 'combination', defaultFlex: 1 },\n  { name: 'conditions', header: 'conditions', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'emailrules/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EmailRules = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EmailRules;","/backup/apps/magentotest/ui/src/pages/tables/EmailOrder.js",["2107"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'emailOrderId', header: 'emailOrderId', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'quoteId', header: 'quoteId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'emailImported', header: 'emailImported', defaultFlex: 1 },\n  { name: 'modified', header: 'modified', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'emailorder/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EmailOrder = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EmailOrder;","/backup/apps/magentotest/ui/src/pages/tables/EmailTemplate.js",["2108"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'templateId', header: 'templateId', defaultFlex: 1 },\n  { name: 'templateCode', header: 'templateCode', defaultFlex: 1 },\n  { name: 'templateText', header: 'templateText', defaultFlex: 1 },\n  { name: 'templateStyles', header: 'templateStyles', defaultFlex: 1 },\n  { name: 'templateType', header: 'templateType', defaultFlex: 1 },\n  { name: 'templateSubject', header: 'templateSubject', defaultFlex: 1 },\n  { name: 'templateSenderName', header: 'templateSenderName', defaultFlex: 1 },\n  { name: 'templateSenderEmail', header: 'templateSenderEmail', defaultFlex: 1 },\n  { name: 'addedAt', header: 'addedAt', defaultFlex: 1 },\n  { name: 'modifiedAt', header: 'modifiedAt', defaultFlex: 1 },\n  { name: 'origTemplateCode', header: 'origTemplateCode', defaultFlex: 1 },\n  { name: 'origTemplateVariables', header: 'origTemplateVariables', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'emailtemplate/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EmailTemplate = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EmailTemplate;","/backup/apps/magentotest/ui/src/pages/tables/EmailReview.js",["2109"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'reviewId', header: 'reviewId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'reviewImported', header: 'reviewImported', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'emailreview/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EmailReview = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EmailReview;","/backup/apps/magentotest/ui/src/pages/tables/EmailImporter.js",["2110"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'importType', header: 'importType', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'importStatus', header: 'importStatus', defaultFlex: 1 },\n  { name: 'importId', header: 'importId', defaultFlex: 1 },\n  { name: 'importData', header: 'importData', defaultFlex: 1 },\n  { name: 'importMode', header: 'importMode', defaultFlex: 1 },\n  { name: 'importFile', header: 'importFile', defaultFlex: 1 },\n  { name: 'message', header: 'message', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'importStarted', header: 'importStarted', defaultFlex: 1 },\n  { name: 'importFinished', header: 'importFinished', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'emailimporter/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EmailImporter = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EmailImporter;","/backup/apps/magentotest/ui/src/pages/tables/EmailFailedAuth.js",["2111"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'failuresNum', header: 'failuresNum', defaultFlex: 1 },\n  { name: 'firstAttemptDate', header: 'firstAttemptDate', defaultFlex: 1 },\n  { name: 'lastAttemptDate', header: 'lastAttemptDate', defaultFlex: 1 },\n  { name: 'url', header: 'url', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'emailfailedauth/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EmailFailedAuth = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EmailFailedAuth;","/backup/apps/magentotest/ui/src/pages/tables/EmailContactConsent.js",["2112"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'emailContactId', header: 'emailContactId', defaultFlex: 1 },\n  { name: 'consentUrl', header: 'consentUrl', defaultFlex: 1 },\n  { name: 'consentDatetime', header: 'consentDatetime', defaultFlex: 1 },\n  { name: 'consentIp', header: 'consentIp', defaultFlex: 1 },\n  { name: 'consentUserAgent', header: 'consentUserAgent', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'emailcontactconsent/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EmailContactConsent = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EmailContactConsent;","/backup/apps/magentotest/ui/src/pages/tables/EmailCatalog.js",["2113"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'imported', header: 'imported', defaultFlex: 1 },\n  { name: 'modified', header: 'modified', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'emailcatalog/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EmailCatalog = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EmailCatalog;","/backup/apps/magentotest/ui/src/pages/tables/EmailContact.js",["2114"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'emailContactId', header: 'emailContactId', defaultFlex: 1 },\n  { name: 'isGuest', header: 'isGuest', defaultFlex: 1 },\n  { name: 'contactId', header: 'contactId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'email', header: 'email', defaultFlex: 1 },\n  { name: 'isSubscriber', header: 'isSubscriber', defaultFlex: 1 },\n  { name: 'subscriberStatus', header: 'subscriberStatus', defaultFlex: 1 },\n  { name: 'emailImported', header: 'emailImported', defaultFlex: 1 },\n  { name: 'subscriberImported', header: 'subscriberImported', defaultFlex: 1 },\n  { name: 'suppressed', header: 'suppressed', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'emailcontact/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EmailContact = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EmailContact;","/backup/apps/magentotest/ui/src/pages/tables/EmailCampaign.js",["2115"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'campaignId', header: 'campaignId', defaultFlex: 1 },\n  { name: 'email', header: 'email', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'sentAt', header: 'sentAt', defaultFlex: 1 },\n  { name: 'orderIncrementId', header: 'orderIncrementId', defaultFlex: 1 },\n  { name: 'quoteId', header: 'quoteId', defaultFlex: 1 },\n  { name: 'message', header: 'message', defaultFlex: 1 },\n  { name: 'checkoutMethod', header: 'checkoutMethod', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'eventName', header: 'eventName', defaultFlex: 1 },\n  { name: 'sendId', header: 'sendId', defaultFlex: 1 },\n  { name: 'sendStatus', header: 'sendStatus', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'emailcampaign/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EmailCampaign = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EmailCampaign;","/backup/apps/magentotest/ui/src/pages/tables/EmailAutomation.js",["2116"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'automationType', header: 'automationType', defaultFlex: 1 },\n  { name: 'storeName', header: 'storeName', defaultFlex: 1 },\n  { name: 'enrolmentStatus', header: 'enrolmentStatus', defaultFlex: 1 },\n  { name: 'email', header: 'email', defaultFlex: 1 },\n  { name: 'typeId', header: 'typeId', defaultFlex: 1 },\n  { name: 'programId', header: 'programId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'message', header: 'message', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'emailautomation/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EmailAutomation = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EmailAutomation;","/backup/apps/magentotest/ui/src/pages/tables/EmailAbandonedCart.js",["2117"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'quoteId', header: 'quoteId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'email', header: 'email', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n  { name: 'quoteUpdatedAt', header: 'quoteUpdatedAt', defaultFlex: 1 },\n  { name: 'abandonedCartNumber', header: 'abandonedCartNumber', defaultFlex: 1 },\n  { name: 'itemsCount', header: 'itemsCount', defaultFlex: 1 },\n  { name: 'itemsIds', header: 'itemsIds', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'emailabandonedcart/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EmailAbandonedCart = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EmailAbandonedCart;","/backup/apps/magentotest/ui/src/pages/tables/EavFormType.js",["2118"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'typeId', header: 'typeId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'label', header: 'label', defaultFlex: 1 },\n  { name: 'isSystem', header: 'isSystem', defaultFlex: 1 },\n  { name: 'theme', header: 'theme', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eavformtype/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavFormType = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavFormType;","/backup/apps/magentotest/ui/src/pages/tables/EavFormTypeEntity.js",["2119"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'typeId', header: 'typeId', defaultFlex: 1 },\n  { name: 'entityTypeId', header: 'entityTypeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eavformtypeentity/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavFormTypeEntity = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavFormTypeEntity;","/backup/apps/magentotest/ui/src/pages/tables/EavFormFieldsetLabel.js",["2120"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'fieldsetId', header: 'fieldsetId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'label', header: 'label', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eavformfieldsetlabel/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavFormFieldsetLabel = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavFormFieldsetLabel;","/backup/apps/magentotest/ui/src/pages/tables/EavFormFieldset.js",["2121"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'fieldsetId', header: 'fieldsetId', defaultFlex: 1 },\n  { name: 'typeId', header: 'typeId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eavformfieldset/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavFormFieldset = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavFormFieldset;","/backup/apps/magentotest/ui/src/pages/tables/EavFormElement.js",["2122"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'elementId', header: 'elementId', defaultFlex: 1 },\n  { name: 'typeId', header: 'typeId', defaultFlex: 1 },\n  { name: 'fieldsetId', header: 'fieldsetId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eavformelement/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavFormElement = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavFormElement;","/backup/apps/magentotest/ui/src/pages/tables/EavEntityVarchar.js",["2123"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'entityTypeId', header: 'entityTypeId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eaventityvarchar/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavEntityVarchar = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavEntityVarchar;","/backup/apps/magentotest/ui/src/pages/tables/EavEntityType.js",["2124"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityTypeId', header: 'entityTypeId', defaultFlex: 1 },\n  { name: 'entityTypeCode', header: 'entityTypeCode', defaultFlex: 1 },\n  { name: 'entityModel', header: 'entityModel', defaultFlex: 1 },\n  { name: 'attributeModel', header: 'attributeModel', defaultFlex: 1 },\n  { name: 'entityTable', header: 'entityTable', defaultFlex: 1 },\n  { name: 'valueTablePrefix', header: 'valueTablePrefix', defaultFlex: 1 },\n  { name: 'entityIdField', header: 'entityIdField', defaultFlex: 1 },\n  { name: 'isDataSharing', header: 'isDataSharing', defaultFlex: 1 },\n  { name: 'dataSharingKey', header: 'dataSharingKey', defaultFlex: 1 },\n  { name: 'defaultAttributeSetId', header: 'defaultAttributeSetId', defaultFlex: 1 },\n  { name: 'incrementModel', header: 'incrementModel', defaultFlex: 1 },\n  { name: 'incrementPerStore', header: 'incrementPerStore', defaultFlex: 1 },\n  { name: 'incrementPadLength', header: 'incrementPadLength', defaultFlex: 1 },\n  { name: 'incrementPadChar', header: 'incrementPadChar', defaultFlex: 1 },\n  { name: 'additionalAttributeTable', header: 'additionalAttributeTable', defaultFlex: 1 },\n  { name: 'entityAttributeCollection', header: 'entityAttributeCollection', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eaventitytype/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavEntityType = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavEntityType;","/backup/apps/magentotest/ui/src/pages/tables/EavEntityText.js",["2125"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'entityTypeId', header: 'entityTypeId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eaventitytext/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavEntityText = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavEntityText;","/backup/apps/magentotest/ui/src/pages/tables/EavEntityStore.js",["2126"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityStoreId', header: 'entityStoreId', defaultFlex: 1 },\n  { name: 'entityTypeId', header: 'entityTypeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'incrementPrefix', header: 'incrementPrefix', defaultFlex: 1 },\n  { name: 'incrementLastId', header: 'incrementLastId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eaventitystore/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavEntityStore = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavEntityStore;","/backup/apps/magentotest/ui/src/pages/tables/EavEntityInt.js",["2127"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'entityTypeId', header: 'entityTypeId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eaventityint/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavEntityInt = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavEntityInt;","/backup/apps/magentotest/ui/src/pages/tables/EavEntityDecimal.js",["2128"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'entityTypeId', header: 'entityTypeId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eaventitydecimal/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavEntityDecimal = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavEntityDecimal;","/backup/apps/magentotest/ui/src/pages/tables/EavEntityDatetime.js",["2129"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'entityTypeId', header: 'entityTypeId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eaventitydatetime/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavEntityDatetime = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavEntityDatetime;","/backup/apps/magentotest/ui/src/pages/tables/EavEntityAttribute.js",["2130"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityAttributeId', header: 'entityAttributeId', defaultFlex: 1 },\n  { name: 'entityTypeId', header: 'entityTypeId', defaultFlex: 1 },\n  { name: 'attributeSetId', header: 'attributeSetId', defaultFlex: 1 },\n  { name: 'attributeGroupId', header: 'attributeGroupId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eaventityattribute/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavEntityAttribute = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavEntityAttribute;","/backup/apps/magentotest/ui/src/pages/tables/EavEntity.js",["2131"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'entityTypeId', header: 'entityTypeId', defaultFlex: 1 },\n  { name: 'attributeSetId', header: 'attributeSetId', defaultFlex: 1 },\n  { name: 'incrementId', header: 'incrementId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eaventity/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavEntity = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavEntity;","/backup/apps/magentotest/ui/src/pages/tables/EavAttributeSet.js",["2132"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'attributeSetId', header: 'attributeSetId', defaultFlex: 1 },\n  { name: 'entityTypeId', header: 'entityTypeId', defaultFlex: 1 },\n  { name: 'attributeSetName', header: 'attributeSetName', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eavattributeset/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavAttributeSet = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavAttributeSet;","/backup/apps/magentotest/ui/src/pages/tables/EavAttributeOptionValue.js",["2133"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eavattributeoptionvalue/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavAttributeOptionValue = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavAttributeOptionValue;","/backup/apps/magentotest/ui/src/pages/tables/EavAttributeOptionSwatch.js",["2134"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'swatchId', header: 'swatchId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'type', header: 'type', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eavattributeoptionswatch/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavAttributeOptionSwatch = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavAttributeOptionSwatch;","/backup/apps/magentotest/ui/src/pages/tables/EavAttributeLabel.js",["2135"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'attributeLabelId', header: 'attributeLabelId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eavattributelabel/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavAttributeLabel = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavAttributeLabel;","/backup/apps/magentotest/ui/src/pages/tables/EavAttributeOption.js",["2136"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eavattributeoption/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavAttributeOption = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavAttributeOption;","/backup/apps/magentotest/ui/src/pages/tables/EavAttributeGroup.js",["2137"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'attributeGroupId', header: 'attributeGroupId', defaultFlex: 1 },\n  { name: 'attributeSetId', header: 'attributeSetId', defaultFlex: 1 },\n  { name: 'attributeGroupName', header: 'attributeGroupName', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n  { name: 'defaultId', header: 'defaultId', defaultFlex: 1 },\n  { name: 'attributeGroupCode', header: 'attributeGroupCode', defaultFlex: 1 },\n  { name: 'tabGroupCode', header: 'tabGroupCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eavattributegroup/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavAttributeGroup = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavAttributeGroup;","/backup/apps/magentotest/ui/src/pages/tables/DownloadableSampleTitle.js",["2138"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'titleId', header: 'titleId', defaultFlex: 1 },\n  { name: 'sampleId', header: 'sampleId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'downloadablesampletitle/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DownloadableSampleTitle = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DownloadableSampleTitle;","/backup/apps/magentotest/ui/src/pages/tables/EavAttribute.js",["2139"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'entityTypeId', header: 'entityTypeId', defaultFlex: 1 },\n  { name: 'attributeCode', header: 'attributeCode', defaultFlex: 1 },\n  { name: 'attributeModel', header: 'attributeModel', defaultFlex: 1 },\n  { name: 'backendModel', header: 'backendModel', defaultFlex: 1 },\n  { name: 'backendType', header: 'backendType', defaultFlex: 1 },\n  { name: 'backendTable', header: 'backendTable', defaultFlex: 1 },\n  { name: 'frontendModel', header: 'frontendModel', defaultFlex: 1 },\n  { name: 'frontendInput', header: 'frontendInput', defaultFlex: 1 },\n  { name: 'frontendLabel', header: 'frontendLabel', defaultFlex: 1 },\n  { name: 'frontendClass', header: 'frontendClass', defaultFlex: 1 },\n  { name: 'sourceModel', header: 'sourceModel', defaultFlex: 1 },\n  { name: 'isRequired', header: 'isRequired', defaultFlex: 1 },\n  { name: 'isUserDefined', header: 'isUserDefined', defaultFlex: 1 },\n  { name: 'defaultValue', header: 'defaultValue', defaultFlex: 1 },\n  { name: 'isUnique', header: 'isUnique', defaultFlex: 1 },\n  { name: 'note', header: 'note', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'eavattribute/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst EavAttribute = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default EavAttribute;","/backup/apps/magentotest/ui/src/pages/tables/DownloadableSample.js",["2140"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sampleId', header: 'sampleId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'sampleUrl', header: 'sampleUrl', defaultFlex: 1 },\n  { name: 'sampleFile', header: 'sampleFile', defaultFlex: 1 },\n  { name: 'sampleType', header: 'sampleType', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'downloadablesample/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DownloadableSample = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DownloadableSample;","/backup/apps/magentotest/ui/src/pages/tables/DownloadableLinkTitle.js",["2141"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'titleId', header: 'titleId', defaultFlex: 1 },\n  { name: 'linkId', header: 'linkId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'downloadablelinktitle/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DownloadableLinkTitle = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DownloadableLinkTitle;","/backup/apps/magentotest/ui/src/pages/tables/DownloadableLinkPurchasedItem.js",["2142"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'itemId', header: 'itemId', defaultFlex: 1 },\n  { name: 'purchasedId', header: 'purchasedId', defaultFlex: 1 },\n  { name: 'orderItemId', header: 'orderItemId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'linkHash', header: 'linkHash', defaultFlex: 1 },\n  { name: 'numberOfDownloadsBought', header: 'numberOfDownloadsBought', defaultFlex: 1 },\n  { name: 'numberOfDownloadsUsed', header: 'numberOfDownloadsUsed', defaultFlex: 1 },\n  { name: 'linkId', header: 'linkId', defaultFlex: 1 },\n  { name: 'linkTitle', header: 'linkTitle', defaultFlex: 1 },\n  { name: 'isShareable', header: 'isShareable', defaultFlex: 1 },\n  { name: 'linkUrl', header: 'linkUrl', defaultFlex: 1 },\n  { name: 'linkFile', header: 'linkFile', defaultFlex: 1 },\n  { name: 'linkType', header: 'linkType', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'downloadablelinkpurchaseditem/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DownloadableLinkPurchasedItem = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DownloadableLinkPurchasedItem;","/backup/apps/magentotest/ui/src/pages/tables/DownloadableLinkPurchased.js",["2143"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'purchasedId', header: 'purchasedId', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'orderIncrementId', header: 'orderIncrementId', defaultFlex: 1 },\n  { name: 'orderItemId', header: 'orderItemId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'productName', header: 'productName', defaultFlex: 1 },\n  { name: 'productSku', header: 'productSku', defaultFlex: 1 },\n  { name: 'linkSectionTitle', header: 'linkSectionTitle', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'downloadablelinkpurchased/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DownloadableLinkPurchased = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DownloadableLinkPurchased;","/backup/apps/magentotest/ui/src/pages/tables/DownloadableLinkPrice.js",["2144"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'priceId', header: 'priceId', defaultFlex: 1 },\n  { name: 'linkId', header: 'linkId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'downloadablelinkprice/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DownloadableLinkPrice = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DownloadableLinkPrice;","/backup/apps/magentotest/ui/src/pages/tables/DownloadableLink.js",["2145"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'linkId', header: 'linkId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n  { name: 'numberOfDownloads', header: 'numberOfDownloads', defaultFlex: 1 },\n  { name: 'isShareable', header: 'isShareable', defaultFlex: 1 },\n  { name: 'linkUrl', header: 'linkUrl', defaultFlex: 1 },\n  { name: 'linkFile', header: 'linkFile', defaultFlex: 1 },\n  { name: 'linkType', header: 'linkType', defaultFlex: 1 },\n  { name: 'sampleUrl', header: 'sampleUrl', defaultFlex: 1 },\n  { name: 'sampleFile', header: 'sampleFile', defaultFlex: 1 },\n  { name: 'sampleType', header: 'sampleType', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'downloadablelink/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DownloadableLink = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DownloadableLink;","/backup/apps/magentotest/ui/src/pages/tables/DirectoryCurrencyRate.js",["2146"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'currencyFrom', header: 'currencyFrom', defaultFlex: 1 },\n  { name: 'currencyTo', header: 'currencyTo', defaultFlex: 1 },\n  { name: 'rate', header: 'rate', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'directorycurrencyrate/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DirectoryCurrencyRate = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DirectoryCurrencyRate;","/backup/apps/magentotest/ui/src/pages/tables/DirectoryCountryRegionName.js",["2147"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'locale', header: 'locale', defaultFlex: 1 },\n  { name: 'regionId', header: 'regionId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'directorycountryregionname/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DirectoryCountryRegionName = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DirectoryCountryRegionName;","/backup/apps/magentotest/ui/src/pages/tables/DirectoryCountryRegion.js",["2148"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'regionId', header: 'regionId', defaultFlex: 1 },\n  { name: 'countryId', header: 'countryId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'defaultName', header: 'defaultName', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'directorycountryregion/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DirectoryCountryRegion = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DirectoryCountryRegion;","/backup/apps/magentotest/ui/src/pages/tables/DirectoryCountryFormat.js",["2149"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'countryFormatId', header: 'countryFormatId', defaultFlex: 1 },\n  { name: 'countryId', header: 'countryId', defaultFlex: 1 },\n  { name: 'type', header: 'type', defaultFlex: 1 },\n  { name: 'format', header: 'format', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'directorycountryformat/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DirectoryCountryFormat = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DirectoryCountryFormat;","/backup/apps/magentotest/ui/src/pages/tables/DirectoryCountry.js",["2150"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'countryId', header: 'countryId', defaultFlex: 1 },\n  { name: 'iso2Code', header: 'iso2Code', defaultFlex: 1 },\n  { name: 'iso3Code', header: 'iso3Code', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'directorycountry/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DirectoryCountry = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DirectoryCountry;","/backup/apps/magentotest/ui/src/pages/tables/DesignConfigGridFlat.js",["2151"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'storeWebsiteId', header: 'storeWebsiteId', defaultFlex: 1 },\n  { name: 'storeGroupId', header: 'storeGroupId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'themeThemeId', header: 'themeThemeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'designconfiggridflat/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DesignConfigGridFlat = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DesignConfigGridFlat;","/backup/apps/magentotest/ui/src/pages/tables/DesignChange.js",["2152"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'designChangeId', header: 'designChangeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'design', header: 'design', defaultFlex: 1 },\n  { name: 'dateFrom', header: 'dateFrom', defaultFlex: 1 },\n  { name: 'dateTo', header: 'dateTo', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'designchange/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst DesignChange = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default DesignChange;","/backup/apps/magentotest/ui/src/pages/tables/CustomerVisitor.js",["2153"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'visitorId', header: 'visitorId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'sessionId', header: 'sessionId', defaultFlex: 1 },\n  { name: 'lastVisitAt', header: 'lastVisitAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customervisitor/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerVisitor = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerVisitor;","/backup/apps/magentotest/ui/src/pages/tables/CustomerLog.js",["2154"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'logId', header: 'logId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'lastLoginAt', header: 'lastLoginAt', defaultFlex: 1 },\n  { name: 'lastLogoutAt', header: 'lastLogoutAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customerlog/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerLog = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerLog;","/backup/apps/magentotest/ui/src/pages/tables/CustomerGroup.js",["2155"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'customerGroupCode', header: 'customerGroupCode', defaultFlex: 1 },\n  { name: 'taxClassId', header: 'taxClassId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customergroup/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerGroup = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerGroup;","/backup/apps/magentotest/ui/src/pages/tables/CustomerGridFlat.js",["2156"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'email', header: 'email', defaultFlex: 1 },\n  { name: 'groupId', header: 'groupId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'confirmation', header: 'confirmation', defaultFlex: 1 },\n  { name: 'createdIn', header: 'createdIn', defaultFlex: 1 },\n  { name: 'dob', header: 'dob', defaultFlex: 1 },\n  { name: 'gender', header: 'gender', defaultFlex: 1 },\n  { name: 'taxvat', header: 'taxvat', defaultFlex: 1 },\n  { name: 'lockExpires', header: 'lockExpires', defaultFlex: 1 },\n  { name: 'shippingFull', header: 'shippingFull', defaultFlex: 1 },\n  { name: 'billingFull', header: 'billingFull', defaultFlex: 1 },\n  { name: 'billingFirstname', header: 'billingFirstname', defaultFlex: 1 },\n  { name: 'billingLastname', header: 'billingLastname', defaultFlex: 1 },\n  { name: 'billingTelephone', header: 'billingTelephone', defaultFlex: 1 },\n  { name: 'billingPostcode', header: 'billingPostcode', defaultFlex: 1 },\n  { name: 'billingCountryId', header: 'billingCountryId', defaultFlex: 1 },\n  { name: 'billingRegion', header: 'billingRegion', defaultFlex: 1 },\n  { name: 'billingStreet', header: 'billingStreet', defaultFlex: 1 },\n  { name: 'billingCity', header: 'billingCity', defaultFlex: 1 },\n  { name: 'billingFax', header: 'billingFax', defaultFlex: 1 },\n  { name: 'billingVatId', header: 'billingVatId', defaultFlex: 1 },\n  { name: 'billingCompany', header: 'billingCompany', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customergridflat/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerGridFlat = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerGridFlat;","/backup/apps/magentotest/ui/src/pages/tables/CustomerFormAttribute.js",["2157"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'formCode', header: 'formCode', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customerformattribute/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerFormAttribute = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerFormAttribute;","/backup/apps/magentotest/ui/src/pages/tables/CustomerEntityVarchar.js",["2158"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customerentityvarchar/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerEntityVarchar = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerEntityVarchar;","/backup/apps/magentotest/ui/src/pages/tables/CustomerEntityText.js",["2159"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customerentitytext/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerEntityText = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerEntityText;","/backup/apps/magentotest/ui/src/pages/tables/CustomerEntityInt.js",["2160"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customerentityint/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerEntityInt = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerEntityInt;","/backup/apps/magentotest/ui/src/pages/tables/CustomerEntityDecimal.js",["2161"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customerentitydecimal/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerEntityDecimal = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerEntityDecimal;","/backup/apps/magentotest/ui/src/pages/tables/CustomerEntityDatetime.js",["2162"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customerentitydatetime/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerEntityDatetime = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerEntityDatetime;","/backup/apps/magentotest/ui/src/pages/tables/CustomerEntity.js",["2163"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'email', header: 'email', defaultFlex: 1 },\n  { name: 'groupId', header: 'groupId', defaultFlex: 1 },\n  { name: 'incrementId', header: 'incrementId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n  { name: 'disableAutoGroupChange', header: 'disableAutoGroupChange', defaultFlex: 1 },\n  { name: 'createdIn', header: 'createdIn', defaultFlex: 1 },\n  { name: 'prefix', header: 'prefix', defaultFlex: 1 },\n  { name: 'firstname', header: 'firstname', defaultFlex: 1 },\n  { name: 'middlename', header: 'middlename', defaultFlex: 1 },\n  { name: 'lastname', header: 'lastname', defaultFlex: 1 },\n  { name: 'suffix', header: 'suffix', defaultFlex: 1 },\n  { name: 'dob', header: 'dob', defaultFlex: 1 },\n  { name: 'passwordHash', header: 'passwordHash', defaultFlex: 1 },\n  { name: 'rpToken', header: 'rpToken', defaultFlex: 1 },\n  { name: 'rpTokenCreatedAt', header: 'rpTokenCreatedAt', defaultFlex: 1 },\n  { name: 'defaultBilling', header: 'defaultBilling', defaultFlex: 1 },\n  { name: 'defaultShipping', header: 'defaultShipping', defaultFlex: 1 },\n  { name: 'taxvat', header: 'taxvat', defaultFlex: 1 },\n  { name: 'confirmation', header: 'confirmation', defaultFlex: 1 },\n  { name: 'gender', header: 'gender', defaultFlex: 1 },\n  { name: 'failuresNum', header: 'failuresNum', defaultFlex: 1 },\n  { name: 'firstFailure', header: 'firstFailure', defaultFlex: 1 },\n  { name: 'lockExpires', header: 'lockExpires', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customerentity/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerEntity = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerEntity;","/backup/apps/magentotest/ui/src/pages/tables/CustomerEavAttributeWebsite.js",["2164"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'isVisible', header: 'isVisible', defaultFlex: 1 },\n  { name: 'isRequired', header: 'isRequired', defaultFlex: 1 },\n  { name: 'defaultValue', header: 'defaultValue', defaultFlex: 1 },\n  { name: 'multilineCount', header: 'multilineCount', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customereavattributewebsite/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerEavAttributeWebsite = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerEavAttributeWebsite;","/backup/apps/magentotest/ui/src/pages/tables/CustomerEavAttribute.js",["2165"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'isVisible', header: 'isVisible', defaultFlex: 1 },\n  { name: 'inputFilter', header: 'inputFilter', defaultFlex: 1 },\n  { name: 'multilineCount', header: 'multilineCount', defaultFlex: 1 },\n  { name: 'validateRules', header: 'validateRules', defaultFlex: 1 },\n  { name: 'isSystem', header: 'isSystem', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n  { name: 'dataModel', header: 'dataModel', defaultFlex: 1 },\n  { name: 'isUsedInGrid', header: 'isUsedInGrid', defaultFlex: 1 },\n  { name: 'isVisibleInGrid', header: 'isVisibleInGrid', defaultFlex: 1 },\n  { name: 'isFilterableInGrid', header: 'isFilterableInGrid', defaultFlex: 1 },\n  { name: 'isSearchableInGrid', header: 'isSearchableInGrid', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customereavattribute/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerEavAttribute = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerEavAttribute;","/backup/apps/magentotest/ui/src/pages/tables/CustomerAddressEntityVarchar.js",["2166"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customeraddressentityvarchar/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerAddressEntityVarchar = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerAddressEntityVarchar;","/backup/apps/magentotest/ui/src/pages/tables/CustomerAddressEntityInt.js",["2167"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customeraddressentityint/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerAddressEntityInt = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerAddressEntityInt;","/backup/apps/magentotest/ui/src/pages/tables/CustomerAddressEntityText.js",["2168"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customeraddressentitytext/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerAddressEntityText = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerAddressEntityText;","/backup/apps/magentotest/ui/src/pages/tables/CustomerAddressEntityDecimal.js",["2169"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customeraddressentitydecimal/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerAddressEntityDecimal = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerAddressEntityDecimal;","/backup/apps/magentotest/ui/src/pages/tables/CustomerAddressEntityDatetime.js",["2170"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customeraddressentitydatetime/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerAddressEntityDatetime = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerAddressEntityDatetime;","/backup/apps/magentotest/ui/src/pages/tables/CustomerAddressEntity.js",["2171"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'incrementId', header: 'incrementId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n  { name: 'city', header: 'city', defaultFlex: 1 },\n  { name: 'company', header: 'company', defaultFlex: 1 },\n  { name: 'countryId', header: 'countryId', defaultFlex: 1 },\n  { name: 'fax', header: 'fax', defaultFlex: 1 },\n  { name: 'firstname', header: 'firstname', defaultFlex: 1 },\n  { name: 'lastname', header: 'lastname', defaultFlex: 1 },\n  { name: 'middlename', header: 'middlename', defaultFlex: 1 },\n  { name: 'postcode', header: 'postcode', defaultFlex: 1 },\n  { name: 'prefix', header: 'prefix', defaultFlex: 1 },\n  { name: 'region', header: 'region', defaultFlex: 1 },\n  { name: 'regionId', header: 'regionId', defaultFlex: 1 },\n  { name: 'street', header: 'street', defaultFlex: 1 },\n  { name: 'suffix', header: 'suffix', defaultFlex: 1 },\n  { name: 'telephone', header: 'telephone', defaultFlex: 1 },\n  { name: 'vatId', header: 'vatId', defaultFlex: 1 },\n  { name: 'vatIsValid', header: 'vatIsValid', defaultFlex: 1 },\n  { name: 'vatRequestDate', header: 'vatRequestDate', defaultFlex: 1 },\n  { name: 'vatRequestId', header: 'vatRequestId', defaultFlex: 1 },\n  { name: 'vatRequestSuccess', header: 'vatRequestSuccess', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'customeraddressentity/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CustomerAddressEntity = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CustomerAddressEntity;","/backup/apps/magentotest/ui/src/pages/tables/CronSchedule.js",["2172"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'scheduleId', header: 'scheduleId', defaultFlex: 1 },\n  { name: 'jobCode', header: 'jobCode', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'messages', header: 'messages', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'scheduledAt', header: 'scheduledAt', defaultFlex: 1 },\n  { name: 'executedAt', header: 'executedAt', defaultFlex: 1 },\n  { name: 'finishedAt', header: 'finishedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'cronschedule/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CronSchedule = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CronSchedule;","/backup/apps/magentotest/ui/src/pages/tables/CmsPageStore.js",["2173"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'pageId', header: 'pageId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'cmspagestore/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CmsPageStore = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CmsPageStore;","/backup/apps/magentotest/ui/src/pages/tables/CoreConfigData.js",["2174"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'configId', header: 'configId', defaultFlex: 1 },\n  { name: 'scope', header: 'scope', defaultFlex: 1 },\n  { name: 'scopeId', header: 'scopeId', defaultFlex: 1 },\n  { name: 'path', header: 'path', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'coreconfigdata/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CoreConfigData = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CoreConfigData;","/backup/apps/magentotest/ui/src/pages/tables/CmsPage.js",["2175"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'pageId', header: 'pageId', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n  { name: 'pageLayout', header: 'pageLayout', defaultFlex: 1 },\n  { name: 'metaKeywords', header: 'metaKeywords', defaultFlex: 1 },\n  { name: 'metaDescription', header: 'metaDescription', defaultFlex: 1 },\n  { name: 'identifier', header: 'identifier', defaultFlex: 1 },\n  { name: 'contentHeading', header: 'contentHeading', defaultFlex: 1 },\n  { name: 'content', header: 'content', defaultFlex: 1 },\n  { name: 'creationTime', header: 'creationTime', defaultFlex: 1 },\n  { name: 'updateTime', header: 'updateTime', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n  { name: 'layoutUpdateXml', header: 'layoutUpdateXml', defaultFlex: 1 },\n  { name: 'customTheme', header: 'customTheme', defaultFlex: 1 },\n  { name: 'customRootTemplate', header: 'customRootTemplate', defaultFlex: 1 },\n  { name: 'customLayoutUpdateXml', header: 'customLayoutUpdateXml', defaultFlex: 1 },\n  { name: 'customThemeFrom', header: 'customThemeFrom', defaultFlex: 1 },\n  { name: 'customThemeTo', header: 'customThemeTo', defaultFlex: 1 },\n  { name: 'metaTitle', header: 'metaTitle', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'cmspage/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CmsPage = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CmsPage;","/backup/apps/magentotest/ui/src/pages/tables/CmsBlockStore.js",["2176"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'blockId', header: 'blockId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'cmsblockstore/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CmsBlockStore = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CmsBlockStore;","/backup/apps/magentotest/ui/src/pages/tables/CmsBlock.js",["2177"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'blockId', header: 'blockId', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n  { name: 'identifier', header: 'identifier', defaultFlex: 1 },\n  { name: 'content', header: 'content', defaultFlex: 1 },\n  { name: 'creationTime', header: 'creationTime', defaultFlex: 1 },\n  { name: 'updateTime', header: 'updateTime', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'cmsblock/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CmsBlock = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CmsBlock;","/backup/apps/magentotest/ui/src/pages/tables/CheckoutAgreementStore.js",["2178"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'agreementId', header: 'agreementId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'checkoutagreementstore/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CheckoutAgreementStore = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CheckoutAgreementStore;","/backup/apps/magentotest/ui/src/pages/tables/CatalogsearchFulltextScope1.js",["2179"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'dataIndex', header: 'dataIndex', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogsearchfulltextscope1/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogsearchFulltextScope1 = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogsearchFulltextScope1;","/backup/apps/magentotest/ui/src/pages/tables/CatalogsearchRecommendations.js",["2180"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'queryId', header: 'queryId', defaultFlex: 1 },\n  { name: 'relationId', header: 'relationId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogsearchrecommendations/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogsearchRecommendations = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogsearchRecommendations;","/backup/apps/magentotest/ui/src/pages/tables/CheckoutAgreement.js",["2181"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'agreementId', header: 'agreementId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'content', header: 'content', defaultFlex: 1 },\n  { name: 'contentHeight', header: 'contentHeight', defaultFlex: 1 },\n  { name: 'checkboxText', header: 'checkboxText', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n  { name: 'isHtml', header: 'isHtml', defaultFlex: 1 },\n  { name: 'mode', header: 'mode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'checkoutagreement/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CheckoutAgreement = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CheckoutAgreement;","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleWebsite.js",["2182"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogrulewebsite/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogruleWebsite = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogruleWebsite;","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleProductReplica.js",["2183"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleProductId', header: 'ruleProductId', defaultFlex: 1 },\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'fromTime', header: 'fromTime', defaultFlex: 1 },\n  { name: 'toTime', header: 'toTime', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'actionOperator', header: 'actionOperator', defaultFlex: 1 },\n  { name: 'actionAmount', header: 'actionAmount', defaultFlex: 1 },\n  { name: 'actionStop', header: 'actionStop', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogruleproductreplica/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogruleProductReplica = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogruleProductReplica;","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleProductPriceReplica.js",["2184"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleProductPriceId', header: 'ruleProductPriceId', defaultFlex: 1 },\n  { name: 'ruleDate', header: 'ruleDate', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'rulePrice', header: 'rulePrice', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'latestStartDate', header: 'latestStartDate', defaultFlex: 1 },\n  { name: 'earliestEndDate', header: 'earliestEndDate', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogruleproductpricereplica/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogruleProductPriceReplica = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogruleProductPriceReplica;","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleProductPrice.js",["2185"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleProductPriceId', header: 'ruleProductPriceId', defaultFlex: 1 },\n  { name: 'ruleDate', header: 'ruleDate', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'rulePrice', header: 'rulePrice', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'latestStartDate', header: 'latestStartDate', defaultFlex: 1 },\n  { name: 'earliestEndDate', header: 'earliestEndDate', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogruleproductprice/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogruleProductPrice = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogruleProductPrice;","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleProduct.js",["2186"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleProductId', header: 'ruleProductId', defaultFlex: 1 },\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'fromTime', header: 'fromTime', defaultFlex: 1 },\n  { name: 'toTime', header: 'toTime', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'actionOperator', header: 'actionOperator', defaultFlex: 1 },\n  { name: 'actionAmount', header: 'actionAmount', defaultFlex: 1 },\n  { name: 'actionStop', header: 'actionStop', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogruleproduct/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogruleProduct = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogruleProduct;","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleGroupWebsite.js",["2187"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogrulegroupwebsite/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogruleGroupWebsite = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogruleGroupWebsite;","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleGroupWebsiteReplica.js",["2188"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogrulegroupwebsitereplica/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogruleGroupWebsiteReplica = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogruleGroupWebsiteReplica;","/backup/apps/magentotest/ui/src/pages/tables/Catalogrule.js",["2189"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'fromDate', header: 'fromDate', defaultFlex: 1 },\n  { name: 'toDate', header: 'toDate', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n  { name: 'conditionsSerialized', header: 'conditionsSerialized', defaultFlex: 1 },\n  { name: 'actionsSerialized', header: 'actionsSerialized', defaultFlex: 1 },\n  { name: 'stopRulesProcessing', header: 'stopRulesProcessing', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n  { name: 'simpleAction', header: 'simpleAction', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogrule/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Catalogrule = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Catalogrule;","/backup/apps/magentotest/ui/src/pages/tables/CatalogruleCustomerGroup.js",["2190"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogrulecustomergroup/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogruleCustomerGroup = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogruleCustomerGroup;","/backup/apps/magentotest/ui/src/pages/tables/CataloginventoryStockStatusTmp.js",["2191"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'stockId', header: 'stockId', defaultFlex: 1 },\n  { name: 'qty', header: 'qty', defaultFlex: 1 },\n  { name: 'stockStatus', header: 'stockStatus', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'cataloginventorystockstatustmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CataloginventoryStockStatusTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CataloginventoryStockStatusTmp;","/backup/apps/magentotest/ui/src/pages/tables/CataloginventoryStockStatusReplica.js",["2192"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'stockId', header: 'stockId', defaultFlex: 1 },\n  { name: 'qty', header: 'qty', defaultFlex: 1 },\n  { name: 'stockStatus', header: 'stockStatus', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'cataloginventorystockstatusreplica/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CataloginventoryStockStatusReplica = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CataloginventoryStockStatusReplica;","/backup/apps/magentotest/ui/src/pages/tables/CataloginventoryStockStatusIdx.js",["2193"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'stockId', header: 'stockId', defaultFlex: 1 },\n  { name: 'qty', header: 'qty', defaultFlex: 1 },\n  { name: 'stockStatus', header: 'stockStatus', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'cataloginventorystockstatusidx/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CataloginventoryStockStatusIdx = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CataloginventoryStockStatusIdx;","/backup/apps/magentotest/ui/src/pages/tables/CataloginventoryStock.js",["2194"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'stockId', header: 'stockId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'stockName', header: 'stockName', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'cataloginventorystock/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CataloginventoryStock = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CataloginventoryStock;","/backup/apps/magentotest/ui/src/pages/tables/CataloginventoryStockStatus.js",["2195"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'stockId', header: 'stockId', defaultFlex: 1 },\n  { name: 'qty', header: 'qty', defaultFlex: 1 },\n  { name: 'stockStatus', header: 'stockStatus', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'cataloginventorystockstatus/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CataloginventoryStockStatus = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CataloginventoryStockStatus;","/backup/apps/magentotest/ui/src/pages/tables/CataloginventoryStockItem.js",["2196"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'itemId', header: 'itemId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'stockId', header: 'stockId', defaultFlex: 1 },\n  { name: 'qty', header: 'qty', defaultFlex: 1 },\n  { name: 'minQty', header: 'minQty', defaultFlex: 1 },\n  { name: 'useConfigMinQty', header: 'useConfigMinQty', defaultFlex: 1 },\n  { name: 'isQtyDecimal', header: 'isQtyDecimal', defaultFlex: 1 },\n  { name: 'backorders', header: 'backorders', defaultFlex: 1 },\n  { name: 'useConfigBackorders', header: 'useConfigBackorders', defaultFlex: 1 },\n  { name: 'minSaleQty', header: 'minSaleQty', defaultFlex: 1 },\n  { name: 'useConfigMinSaleQty', header: 'useConfigMinSaleQty', defaultFlex: 1 },\n  { name: 'maxSaleQty', header: 'maxSaleQty', defaultFlex: 1 },\n  { name: 'useConfigMaxSaleQty', header: 'useConfigMaxSaleQty', defaultFlex: 1 },\n  { name: 'isInStock', header: 'isInStock', defaultFlex: 1 },\n  { name: 'lowStockDate', header: 'lowStockDate', defaultFlex: 1 },\n  { name: 'notifyStockQty', header: 'notifyStockQty', defaultFlex: 1 },\n  { name: 'useConfigNotifyStockQty', header: 'useConfigNotifyStockQty', defaultFlex: 1 },\n  { name: 'manageStock', header: 'manageStock', defaultFlex: 1 },\n  { name: 'useConfigManageStock', header: 'useConfigManageStock', defaultFlex: 1 },\n  { name: 'stockStatusChangedAuto', header: 'stockStatusChangedAuto', defaultFlex: 1 },\n  { name: 'useConfigQtyIncrements', header: 'useConfigQtyIncrements', defaultFlex: 1 },\n  { name: 'qtyIncrements', header: 'qtyIncrements', defaultFlex: 1 },\n  { name: 'useConfigEnableQtyInc', header: 'useConfigEnableQtyInc', defaultFlex: 1 },\n  { name: 'enableQtyIncrements', header: 'enableQtyIncrements', defaultFlex: 1 },\n  { name: 'isDecimalDivided', header: 'isDecimalDivided', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'cataloginventorystockitem/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CataloginventoryStockItem = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CataloginventoryStockItem;","/backup/apps/magentotest/ui/src/pages/tables/CatalogUrlRewriteProductCategory.js",["2197"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'urlRewriteId', header: 'urlRewriteId', defaultFlex: 1 },\n  { name: 'categoryId', header: 'categoryId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'defaultId', header: 'defaultId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogurlrewriteproductcategory/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogUrlRewriteProductCategory = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogUrlRewriteProductCategory;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductWebsite.js",["2198"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductwebsite/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductWebsite = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductWebsite;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductSuperLink.js",["2199"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'linkId', header: 'linkId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductsuperlink/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductSuperLink = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductSuperLink;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductSuperAttribute.js",["2200"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'productSuperAttributeId', header: 'productSuperAttributeId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductsuperattribute/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductSuperAttribute = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductSuperAttribute;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductSuperAttributeLabel.js",["2201"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'productSuperAttributeId', header: 'productSuperAttributeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'useDefault', header: 'useDefault', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductsuperattributelabel/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductSuperAttributeLabel = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductSuperAttributeLabel;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductRelation.js",["2202"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'childId', header: 'childId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductrelation/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductRelation = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductRelation;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductOptionTypeValue.js",["2203"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'optionTypeId', header: 'optionTypeId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'sku', header: 'sku', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductoptiontypevalue/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductOptionTypeValue = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductOptionTypeValue;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductOptionTypeTitle.js",["2204"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'optionTypeTitleId', header: 'optionTypeTitleId', defaultFlex: 1 },\n  { name: 'optionTypeId', header: 'optionTypeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductoptiontypetitle/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductOptionTypeTitle = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductOptionTypeTitle;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductOptionTypePrice.js",["2205"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'optionTypePriceId', header: 'optionTypePriceId', defaultFlex: 1 },\n  { name: 'optionTypeId', header: 'optionTypeId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'priceType', header: 'priceType', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductoptiontypeprice/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductOptionTypePrice = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductOptionTypePrice;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductOptionTitle.js",["2206"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'optionTitleId', header: 'optionTitleId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductoptiontitle/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductOptionTitle = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductOptionTitle;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductOptionPrice.js",["2207"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'optionPriceId', header: 'optionPriceId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'priceType', header: 'priceType', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductoptionprice/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductOptionPrice = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductOptionPrice;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductOption.js",["2208"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'type', header: 'type', defaultFlex: 1 },\n  { name: 'isRequire', header: 'isRequire', defaultFlex: 1 },\n  { name: 'sku', header: 'sku', defaultFlex: 1 },\n  { name: 'maxCharacters', header: 'maxCharacters', defaultFlex: 1 },\n  { name: 'fileExtension', header: 'fileExtension', defaultFlex: 1 },\n  { name: 'imageSizex', header: 'imageSizex', defaultFlex: 1 },\n  { name: 'imageSizey', header: 'imageSizey', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductoption/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductOption = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductOption;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductLinkType.js",["2209"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'linkTypeId', header: 'linkTypeId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductlinktype/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductLinkType = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductLinkType;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductLinkAttributeVarchar.js",["2210"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'productLinkAttributeId', header: 'productLinkAttributeId', defaultFlex: 1 },\n  { name: 'linkId', header: 'linkId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductlinkattributevarchar/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductLinkAttributeVarchar = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductLinkAttributeVarchar;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductLinkAttributeInt.js",["2211"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'productLinkAttributeId', header: 'productLinkAttributeId', defaultFlex: 1 },\n  { name: 'linkId', header: 'linkId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductlinkattributeint/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductLinkAttributeInt = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductLinkAttributeInt;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductLinkAttributeDecimal.js",["2212"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'productLinkAttributeId', header: 'productLinkAttributeId', defaultFlex: 1 },\n  { name: 'linkId', header: 'linkId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductlinkattributedecimal/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductLinkAttributeDecimal = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductLinkAttributeDecimal;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductLinkAttribute.js",["2213"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'productLinkAttributeId', header: 'productLinkAttributeId', defaultFlex: 1 },\n  { name: 'linkTypeId', header: 'linkTypeId', defaultFlex: 1 },\n  { name: 'productLinkAttributeCode', header: 'productLinkAttributeCode', defaultFlex: 1 },\n  { name: 'dataType', header: 'dataType', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductlinkattribute/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductLinkAttribute = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductLinkAttribute;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductLink.js",["2214"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'linkId', header: 'linkId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'linkedProductId', header: 'linkedProductId', defaultFlex: 1 },\n  { name: 'linkTypeId', header: 'linkTypeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductlink/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductLink = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductLink;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexWebsite.js",["2215"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'defaultStoreId', header: 'defaultStoreId', defaultFlex: 1 },\n  { name: 'websiteDate', header: 'websiteDate', defaultFlex: 1 },\n  { name: 'rate', header: 'rate', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexwebsite/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexWebsite = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexWebsite;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexTierPrice.js",["2216"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindextierprice/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexTierPrice = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexTierPrice;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceTmp.js",["2217"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'taxClassId', header: 'taxClassId', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'finalPrice', header: 'finalPrice', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricetmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceTmp;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceReplica.js",["2218"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'taxClassId', header: 'taxClassId', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'finalPrice', header: 'finalPrice', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricereplica/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceReplica = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceReplica;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceOptTmp.js",["2219"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpriceopttmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceOptTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceOptTmp;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceOptIdx.js",["2220"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpriceoptidx/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceOptIdx = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceOptIdx;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceOptAgrTmp.js",["2221"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpriceoptagrtmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceOptAgrTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceOptAgrTmp;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceOptAgrIdx.js",["2222"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpriceoptagridx/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceOptAgrIdx = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceOptAgrIdx;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceIdx.js",["2223"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'taxClassId', header: 'taxClassId', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'finalPrice', header: 'finalPrice', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpriceidx/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceIdx = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceIdx;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceFinalTmp.js",["2224"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'taxClassId', header: 'taxClassId', defaultFlex: 1 },\n  { name: 'origPrice', header: 'origPrice', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n  { name: 'baseTier', header: 'baseTier', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricefinaltmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceFinalTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceFinalTmp;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceFinalIdx.js",["2225"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'taxClassId', header: 'taxClassId', defaultFlex: 1 },\n  { name: 'origPrice', header: 'origPrice', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n  { name: 'tierPrice', header: 'tierPrice', defaultFlex: 1 },\n  { name: 'baseTier', header: 'baseTier', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricefinalidx/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceFinalIdx = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceFinalIdx;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceDownlodTmp.js",["2226"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricedownlodtmp/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceDownlodTmp = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceDownlodTmp;","/backup/apps/magentotest/ui/src/pages/tables/CatalogProductIndexPriceDownlodIdx.js",["2227"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'minPrice', header: 'minPrice', defaultFlex: 1 },\n  { name: 'maxPrice', header: 'maxPrice', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'catalogproductindexpricedownlodidx/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst CatalogProductIndexPriceDownlodIdx = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default CatalogProductIndexPriceDownlodIdx;","/backup/apps/magentotest/ui/src/pages/d3_chart.js",[],"/backup/apps/magentotest/ui/src/pages/tables/WishlistItemOption.js",["2228"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'wishlistItemId', header: 'wishlistItemId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'wishlistitemoption/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst WishlistItemOption = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default WishlistItemOption;","/backup/apps/magentotest/ui/src/pages/tables/WishlistItem.js",["2229"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'wishlistItemId', header: 'wishlistItemId', defaultFlex: 1 },\n  { name: 'wishlistId', header: 'wishlistId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'addedAt', header: 'addedAt', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'qty', header: 'qty', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'wishlistitem/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst WishlistItem = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default WishlistItem;","/backup/apps/magentotest/ui/src/pages/tables/Wishlist.js",["2230"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'wishlistId', header: 'wishlistId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'shared', header: 'shared', defaultFlex: 1 },\n  { name: 'sharingCode', header: 'sharingCode', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'wishlist/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Wishlist = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Wishlist;","/backup/apps/magentotest/ui/src/pages/tables/WidgetInstancePageLayout.js",["2231"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'pageId', header: 'pageId', defaultFlex: 1 },\n  { name: 'layoutUpdateId', header: 'layoutUpdateId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'widgetinstancepagelayout/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst WidgetInstancePageLayout = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default WidgetInstancePageLayout;","/backup/apps/magentotest/ui/src/pages/tables/WidgetInstancePage.js",["2232"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'pageId', header: 'pageId', defaultFlex: 1 },\n  { name: 'instanceId', header: 'instanceId', defaultFlex: 1 },\n  { name: 'pageGroup', header: 'pageGroup', defaultFlex: 1 },\n  { name: 'layoutHandle', header: 'layoutHandle', defaultFlex: 1 },\n  { name: 'blockReference', header: 'blockReference', defaultFlex: 1 },\n  { name: 'pageFor', header: 'pageFor', defaultFlex: 1 },\n  { name: 'entities', header: 'entities', defaultFlex: 1 },\n  { name: 'pageTemplate', header: 'pageTemplate', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'widgetinstancepage/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst WidgetInstancePage = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default WidgetInstancePage;","/backup/apps/magentotest/ui/src/pages/tables/WidgetInstance.js",["2233"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'instanceId', header: 'instanceId', defaultFlex: 1 },\n  { name: 'instanceType', header: 'instanceType', defaultFlex: 1 },\n  { name: 'themeId', header: 'themeId', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n  { name: 'storeIds', header: 'storeIds', defaultFlex: 1 },\n  { name: 'widgetParameters', header: 'widgetParameters', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'widgetinstance/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst WidgetInstance = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default WidgetInstance;","/backup/apps/magentotest/ui/src/pages/tables/WeeeTax.js",["2234"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'country', header: 'country', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n  { name: 'state', header: 'state', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'weeetax/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst WeeeTax = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default WeeeTax;","/backup/apps/magentotest/ui/src/pages/tables/Widget.js",["2235"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'widgetId', header: 'widgetId', defaultFlex: 1 },\n  { name: 'widgetCode', header: 'widgetCode', defaultFlex: 1 },\n  { name: 'widgetType', header: 'widgetType', defaultFlex: 1 },\n  { name: 'parameters', header: 'parameters', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'widget/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Widget = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Widget;","/backup/apps/magentotest/ui/src/pages/tables/VertexTaxrequest.js",["2236"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'requestId', header: 'requestId', defaultFlex: 1 },\n  { name: 'requestType', header: 'requestType', defaultFlex: 1 },\n  { name: 'quoteId', header: 'quoteId', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'totalTax', header: 'totalTax', defaultFlex: 1 },\n  { name: 'sourcePath', header: 'sourcePath', defaultFlex: 1 },\n  { name: 'taxAreaId', header: 'taxAreaId', defaultFlex: 1 },\n  { name: 'subTotal', header: 'subTotal', defaultFlex: 1 },\n  { name: 'total', header: 'total', defaultFlex: 1 },\n  { name: 'lookupResult', header: 'lookupResult', defaultFlex: 1 },\n  { name: 'requestDate', header: 'requestDate', defaultFlex: 1 },\n  { name: 'requestXml', header: 'requestXml', defaultFlex: 1 },\n  { name: 'responseXml', header: 'responseXml', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'vertextaxrequest/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst VertexTaxrequest = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default VertexTaxrequest;","/backup/apps/magentotest/ui/src/pages/tables/VertexSalesOrderItemVertexTaxCode.js",["2237"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'itemId', header: 'itemId', defaultFlex: 1 },\n  { name: 'vertexTaxCode', header: 'vertexTaxCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'vertexsalesorderitemvertextaxcode/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst VertexSalesOrderItemVertexTaxCode = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default VertexSalesOrderItemVertexTaxCode;","/backup/apps/magentotest/ui/src/pages/tables/VertexSalesOrderItemTaxCode.js",["2238"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'itemId', header: 'itemId', defaultFlex: 1 },\n  { name: 'taxCode', header: 'taxCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'vertexsalesorderitemtaxcode/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst VertexSalesOrderItemTaxCode = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default VertexSalesOrderItemTaxCode;","/backup/apps/magentotest/ui/src/pages/tables/VertexSalesOrderItemInvoiceTextCode.js",["2239"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'itemId', header: 'itemId', defaultFlex: 1 },\n  { name: 'invoiceTextCode', header: 'invoiceTextCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'vertexsalesorderiteminvoicetextcode/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst VertexSalesOrderItemInvoiceTextCode = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default VertexSalesOrderItemInvoiceTextCode;","/backup/apps/magentotest/ui/src/pages/tables/VertexSalesCreditmemoItemVertexTaxCode.js",["2240"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'itemId', header: 'itemId', defaultFlex: 1 },\n  { name: 'vertexTaxCode', header: 'vertexTaxCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'vertexsalescreditmemoitemvertextaxcode/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst VertexSalesCreditmemoItemVertexTaxCode = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default VertexSalesCreditmemoItemVertexTaxCode;","/backup/apps/magentotest/ui/src/pages/tables/VertexSalesCreditmemoItemInvoiceTextCode.js",["2241"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'itemId', header: 'itemId', defaultFlex: 1 },\n  { name: 'invoiceTextCode', header: 'invoiceTextCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'vertexsalescreditmemoiteminvoicetextcode/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst VertexSalesCreditmemoItemInvoiceTextCode = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default VertexSalesCreditmemoItemInvoiceTextCode;","/backup/apps/magentotest/ui/src/pages/tables/VertexSalesCreditmemoItemTaxCode.js",["2242"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'itemId', header: 'itemId', defaultFlex: 1 },\n  { name: 'taxCode', header: 'taxCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'vertexsalescreditmemoitemtaxcode/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst VertexSalesCreditmemoItemTaxCode = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default VertexSalesCreditmemoItemTaxCode;","/backup/apps/magentotest/ui/src/pages/tables/VertexOrderInvoiceStatus.js",["2243"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'sentToVertex', header: 'sentToVertex', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'vertexorderinvoicestatus/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst VertexOrderInvoiceStatus = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default VertexOrderInvoiceStatus;","/backup/apps/magentotest/ui/src/pages/tables/VertexCustomerCode.js",["2244"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'customerCode', header: 'customerCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'vertexcustomercode/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst VertexCustomerCode = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default VertexCustomerCode;","/backup/apps/magentotest/ui/src/pages/tables/VertexInvoiceSent.js",["2245"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'invoiceId', header: 'invoiceId', defaultFlex: 1 },\n  { name: 'sentToVertex', header: 'sentToVertex', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'vertexinvoicesent/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst VertexInvoiceSent = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default VertexInvoiceSent;","/backup/apps/magentotest/ui/src/pages/tables/VaultPaymentTokenOrderPaymentLink.js",["2246"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'orderPaymentId', header: 'orderPaymentId', defaultFlex: 1 },\n  { name: 'paymentTokenId', header: 'paymentTokenId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'vaultpaymenttokenorderpaymentlink/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst VaultPaymentTokenOrderPaymentLink = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default VaultPaymentTokenOrderPaymentLink;","/backup/apps/magentotest/ui/src/pages/tables/VaultPaymentToken.js",["2247"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'publicHash', header: 'publicHash', defaultFlex: 1 },\n  { name: 'paymentMethodCode', header: 'paymentMethodCode', defaultFlex: 1 },\n  { name: 'type', header: 'type', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'expiresAt', header: 'expiresAt', defaultFlex: 1 },\n  { name: 'gatewayToken', header: 'gatewayToken', defaultFlex: 1 },\n  { name: 'details', header: 'details', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n  { name: 'isVisible', header: 'isVisible', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'vaultpaymenttoken/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst VaultPaymentToken = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default VaultPaymentToken;","/backup/apps/magentotest/ui/src/pages/tables/VariableValue.js",["2248"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'valueId', header: 'valueId', defaultFlex: 1 },\n  { name: 'variableId', header: 'variableId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'plainValue', header: 'plainValue', defaultFlex: 1 },\n  { name: 'htmlValue', header: 'htmlValue', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'variablevalue/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst VariableValue = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default VariableValue;","/backup/apps/magentotest/ui/src/pages/tables/Variable.js",["2249"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'variableId', header: 'variableId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'variable/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Variable = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Variable;","/backup/apps/magentotest/ui/src/pages/tables/UrlRewrite.js",["2250"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'urlRewriteId', header: 'urlRewriteId', defaultFlex: 1 },\n  { name: 'entityType', header: 'entityType', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'requestPath', header: 'requestPath', defaultFlex: 1 },\n  { name: 'targetPath', header: 'targetPath', defaultFlex: 1 },\n  { name: 'redirectType', header: 'redirectType', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'isAutogenerated', header: 'isAutogenerated', defaultFlex: 1 },\n  { name: 'metadata', header: 'metadata', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'urlrewrite/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst UrlRewrite = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default UrlRewrite;","/backup/apps/magentotest/ui/src/pages/tables/UiBookmark.js",["2251"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'bookmarkId', header: 'bookmarkId', defaultFlex: 1 },\n  { name: 'userId', header: 'userId', defaultFlex: 1 },\n  { name: 'namespace', header: 'namespace', defaultFlex: 1 },\n  { name: 'identifier', header: 'identifier', defaultFlex: 1 },\n  { name: 'current', header: 'current', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n  { name: 'config', header: 'config', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'uibookmark/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst UiBookmark = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default UiBookmark;","/backup/apps/magentotest/ui/src/pages/tables/Translation.js",["2252"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'keyId', header: 'keyId', defaultFlex: 1 },\n  { name: 'string', header: 'string', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'translate', header: 'translate', defaultFlex: 1 },\n  { name: 'locale', header: 'locale', defaultFlex: 1 },\n  { name: 'crcString', header: 'crcString', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'translation/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Translation = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Translation;","/backup/apps/magentotest/ui/src/pages/tables/ThemeFile.js",["2253"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'themeFilesId', header: 'themeFilesId', defaultFlex: 1 },\n  { name: 'themeId', header: 'themeId', defaultFlex: 1 },\n  { name: 'filePath', header: 'filePath', defaultFlex: 1 },\n  { name: 'fileType', header: 'fileType', defaultFlex: 1 },\n  { name: 'content', header: 'content', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n  { name: 'isTemporary', header: 'isTemporary', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'themefile/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ThemeFile = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ThemeFile;","/backup/apps/magentotest/ui/src/pages/tables/Theme.js",["2254"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'themeId', header: 'themeId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'themePath', header: 'themePath', defaultFlex: 1 },\n  { name: 'themeTitle', header: 'themeTitle', defaultFlex: 1 },\n  { name: 'previewImage', header: 'previewImage', defaultFlex: 1 },\n  { name: 'isFeatured', header: 'isFeatured', defaultFlex: 1 },\n  { name: 'area', header: 'area', defaultFlex: 1 },\n  { name: 'type', header: 'type', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'theme/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Theme = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Theme;","/backup/apps/magentotest/ui/src/pages/tables/TemandoShipment.js",["2255"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'shipmentId', header: 'shipmentId', defaultFlex: 1 },\n  { name: 'extShipmentId', header: 'extShipmentId', defaultFlex: 1 },\n  { name: 'extLocationId', header: 'extLocationId', defaultFlex: 1 },\n  { name: 'extTrackingUrl', header: 'extTrackingUrl', defaultFlex: 1 },\n  { name: 'extTrackingReference', header: 'extTrackingReference', defaultFlex: 1 },\n  { name: 'extReturnShipmentId', header: 'extReturnShipmentId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'temandoshipment/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TemandoShipment = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TemandoShipment;","/backup/apps/magentotest/ui/src/pages/tables/TemandoQuotePickupLocation.js",["2256"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'recipientAddressId', header: 'recipientAddressId', defaultFlex: 1 },\n  { name: 'pickupLocationId', header: 'pickupLocationId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'country', header: 'country', defaultFlex: 1 },\n  { name: 'region', header: 'region', defaultFlex: 1 },\n  { name: 'postcode', header: 'postcode', defaultFlex: 1 },\n  { name: 'city', header: 'city', defaultFlex: 1 },\n  { name: 'street', header: 'street', defaultFlex: 1 },\n  { name: 'openingHours', header: 'openingHours', defaultFlex: 1 },\n  { name: 'shippingExperiences', header: 'shippingExperiences', defaultFlex: 1 },\n  { name: 'selected', header: 'selected', defaultFlex: 1 },\n  { name: 'distance', header: 'distance', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'temandoquotepickuplocation/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TemandoQuotePickupLocation = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TemandoQuotePickupLocation;","/backup/apps/magentotest/ui/src/pages/tables/TemandoQuoteCollectionPoint.js",["2257"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'recipientAddressId', header: 'recipientAddressId', defaultFlex: 1 },\n  { name: 'collectionPointId', header: 'collectionPointId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'country', header: 'country', defaultFlex: 1 },\n  { name: 'region', header: 'region', defaultFlex: 1 },\n  { name: 'postcode', header: 'postcode', defaultFlex: 1 },\n  { name: 'city', header: 'city', defaultFlex: 1 },\n  { name: 'street', header: 'street', defaultFlex: 1 },\n  { name: 'openingHours', header: 'openingHours', defaultFlex: 1 },\n  { name: 'shippingExperiences', header: 'shippingExperiences', defaultFlex: 1 },\n  { name: 'selected', header: 'selected', defaultFlex: 1 },\n  { name: 'distance', header: 'distance', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'temandoquotecollectionpoint/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TemandoQuoteCollectionPoint = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TemandoQuoteCollectionPoint;","/backup/apps/magentotest/ui/src/pages/tables/TemandoPickupLocationSearch.js",["2258"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'shippingAddressId', header: 'shippingAddressId', defaultFlex: 1 },\n  { name: 'active', header: 'active', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'temandopickuplocationsearch/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TemandoPickupLocationSearch = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TemandoPickupLocationSearch;","/backup/apps/magentotest/ui/src/pages/tables/TemandoOrderPickupLocation.js",["2259"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'recipientAddressId', header: 'recipientAddressId', defaultFlex: 1 },\n  { name: 'pickupLocationId', header: 'pickupLocationId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'country', header: 'country', defaultFlex: 1 },\n  { name: 'region', header: 'region', defaultFlex: 1 },\n  { name: 'postcode', header: 'postcode', defaultFlex: 1 },\n  { name: 'city', header: 'city', defaultFlex: 1 },\n  { name: 'street', header: 'street', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'temandoorderpickuplocation/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TemandoOrderPickupLocation = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TemandoOrderPickupLocation;","/backup/apps/magentotest/ui/src/pages/tables/TemandoOrderCollectionPoint.js",["2260"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'recipientAddressId', header: 'recipientAddressId', defaultFlex: 1 },\n  { name: 'collectionPointId', header: 'collectionPointId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'country', header: 'country', defaultFlex: 1 },\n  { name: 'region', header: 'region', defaultFlex: 1 },\n  { name: 'postcode', header: 'postcode', defaultFlex: 1 },\n  { name: 'city', header: 'city', defaultFlex: 1 },\n  { name: 'street', header: 'street', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'temandoordercollectionpoint/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TemandoOrderCollectionPoint = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TemandoOrderCollectionPoint;","/backup/apps/magentotest/ui/src/pages/tables/TemandoOrder.js",["2261"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'extOrderId', header: 'extOrderId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'temandoorder/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TemandoOrder = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TemandoOrder;","/backup/apps/magentotest/ui/src/pages/tables/TemandoCollectionPointSearch.js",["2262"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'shippingAddressId', header: 'shippingAddressId', defaultFlex: 1 },\n  { name: 'countryId', header: 'countryId', defaultFlex: 1 },\n  { name: 'postcode', header: 'postcode', defaultFlex: 1 },\n  { name: 'pending', header: 'pending', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'temandocollectionpointsearch/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TemandoCollectionPointSearch = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TemandoCollectionPointSearch;","/backup/apps/magentotest/ui/src/pages/tables/TemandoCheckoutAddress.js",["2263"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'shippingAddressId', header: 'shippingAddressId', defaultFlex: 1 },\n  { name: 'serviceSelection', header: 'serviceSelection', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'temandocheckoutaddress/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TemandoCheckoutAddress = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TemandoCheckoutAddress;","/backup/apps/magentotest/ui/src/pages/tables/TaxOrderAggregatedUpdated.js",["2264"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'percent', header: 'percent', defaultFlex: 1 },\n  { name: 'ordersCount', header: 'ordersCount', defaultFlex: 1 },\n  { name: 'taxBaseAmountSum', header: 'taxBaseAmountSum', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'taxorderaggregatedupdated/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TaxOrderAggregatedUpdated = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TaxOrderAggregatedUpdated;","/backup/apps/magentotest/ui/src/pages/tables/TaxOrderAggregatedCreated.js",["2265"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'percent', header: 'percent', defaultFlex: 1 },\n  { name: 'ordersCount', header: 'ordersCount', defaultFlex: 1 },\n  { name: 'taxBaseAmountSum', header: 'taxBaseAmountSum', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'taxorderaggregatedcreated/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TaxOrderAggregatedCreated = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TaxOrderAggregatedCreated;","/backup/apps/magentotest/ui/src/pages/tables/TaxClass.js",["2266"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'classId', header: 'classId', defaultFlex: 1 },\n  { name: 'className', header: 'className', defaultFlex: 1 },\n  { name: 'classType', header: 'classType', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'taxclass/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TaxClass = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TaxClass;","/backup/apps/magentotest/ui/src/pages/tables/TaxCalculationRule.js",["2267"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'taxCalculationRuleId', header: 'taxCalculationRuleId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'priority', header: 'priority', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'calculateSubtotal', header: 'calculateSubtotal', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'taxcalculationrule/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TaxCalculationRule = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TaxCalculationRule;","/backup/apps/magentotest/ui/src/pages/tables/TaxCalculationRateTitle.js",["2268"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'taxCalculationRateTitleId', header: 'taxCalculationRateTitleId', defaultFlex: 1 },\n  { name: 'taxCalculationRateId', header: 'taxCalculationRateId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'taxcalculationratetitle/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TaxCalculationRateTitle = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TaxCalculationRateTitle;","/backup/apps/magentotest/ui/src/pages/tables/TaxCalculationRate.js",["2269"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'taxCalculationRateId', header: 'taxCalculationRateId', defaultFlex: 1 },\n  { name: 'taxCountryId', header: 'taxCountryId', defaultFlex: 1 },\n  { name: 'taxRegionId', header: 'taxRegionId', defaultFlex: 1 },\n  { name: 'taxPostcode', header: 'taxPostcode', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'rate', header: 'rate', defaultFlex: 1 },\n  { name: 'zipIsRange', header: 'zipIsRange', defaultFlex: 1 },\n  { name: 'zipFrom', header: 'zipFrom', defaultFlex: 1 },\n  { name: 'zipTo', header: 'zipTo', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'taxcalculationrate/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TaxCalculationRate = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TaxCalculationRate;","/backup/apps/magentotest/ui/src/pages/tables/TaxCalculation.js",["2270"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'taxCalculationId', header: 'taxCalculationId', defaultFlex: 1 },\n  { name: 'taxCalculationRateId', header: 'taxCalculationRateId', defaultFlex: 1 },\n  { name: 'taxCalculationRuleId', header: 'taxCalculationRuleId', defaultFlex: 1 },\n  { name: 'customerTaxClassId', header: 'customerTaxClassId', defaultFlex: 1 },\n  { name: 'productTaxClassId', header: 'productTaxClassId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'taxcalculation/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst TaxCalculation = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default TaxCalculation;","/backup/apps/magentotest/ui/src/pages/tables/StoreWebsite.js",["2271"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n  { name: 'defaultGroupId', header: 'defaultGroupId', defaultFlex: 1 },\n  { name: 'isDefault', header: 'isDefault', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'storewebsite/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst StoreWebsite = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default StoreWebsite;","/backup/apps/magentotest/ui/src/pages/tables/StoreGroup.js",["2272"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'groupId', header: 'groupId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'rootCategoryId', header: 'rootCategoryId', defaultFlex: 1 },\n  { name: 'defaultStoreId', header: 'defaultStoreId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'storegroup/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst StoreGroup = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default StoreGroup;","/backup/apps/magentotest/ui/src/pages/tables/Store.js",["2273"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'groupId', header: 'groupId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'store/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Store = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Store;","/backup/apps/magentotest/ui/src/pages/tables/Sitemap.js",["2274"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sitemapId', header: 'sitemapId', defaultFlex: 1 },\n  { name: 'sitemapType', header: 'sitemapType', defaultFlex: 1 },\n  { name: 'sitemapFilename', header: 'sitemapFilename', defaultFlex: 1 },\n  { name: 'sitemapPath', header: 'sitemapPath', defaultFlex: 1 },\n  { name: 'sitemapTime', header: 'sitemapTime', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'sitemap/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Sitemap = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Sitemap;","/backup/apps/magentotest/ui/src/pages/tables/SignifydCase.js",["2275"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'caseId', header: 'caseId', defaultFlex: 1 },\n  { name: 'guaranteeEligible', header: 'guaranteeEligible', defaultFlex: 1 },\n  { name: 'guaranteeDisposition', header: 'guaranteeDisposition', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'score', header: 'score', defaultFlex: 1 },\n  { name: 'associatedTeam', header: 'associatedTeam', defaultFlex: 1 },\n  { name: 'reviewDisposition', header: 'reviewDisposition', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'signifydcase/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SignifydCase = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SignifydCase;","/backup/apps/magentotest/ui/src/pages/tables/ShippingTablerate.js",["2276"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'pk', header: 'pk', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'destCountryId', header: 'destCountryId', defaultFlex: 1 },\n  { name: 'destRegionId', header: 'destRegionId', defaultFlex: 1 },\n  { name: 'destZip', header: 'destZip', defaultFlex: 1 },\n  { name: 'conditionName', header: 'conditionName', defaultFlex: 1 },\n  { name: 'conditionValue', header: 'conditionValue', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'cost', header: 'cost', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'shippingtablerate/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ShippingTablerate = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ShippingTablerate;","/backup/apps/magentotest/ui/src/pages/tables/SetupModule.js",["2277"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'module', header: 'module', defaultFlex: 1 },\n  { name: 'schemaVersion', header: 'schemaVersion', defaultFlex: 1 },\n  { name: 'dataVersion', header: 'dataVersion', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'setupmodule/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SetupModule = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SetupModule;","/backup/apps/magentotest/ui/src/pages/tables/Session.js",["2278"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sessionId', header: 'sessionId', defaultFlex: 1 },\n  { name: 'sessionExpires', header: 'sessionExpires', defaultFlex: 1 },\n  { name: 'sessionData', header: 'sessionData', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'session/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Session = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Session;","/backup/apps/magentotest/ui/src/pages/tables/SequenceShipment1.js",["2279"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sequenceValue', header: 'sequenceValue', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'sequenceshipment1/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SequenceShipment1 = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SequenceShipment1;","/backup/apps/magentotest/ui/src/pages/tables/SequenceShipment0.js",["2280"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sequenceValue', header: 'sequenceValue', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'sequenceshipment0/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SequenceShipment0 = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SequenceShipment0;","/backup/apps/magentotest/ui/src/pages/tables/SequenceOrder1.js",["2281"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sequenceValue', header: 'sequenceValue', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'sequenceorder1/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SequenceOrder1 = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SequenceOrder1;","/backup/apps/magentotest/ui/src/pages/tables/SequenceOrder0.js",["2282"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sequenceValue', header: 'sequenceValue', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'sequenceorder0/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SequenceOrder0 = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SequenceOrder0;","/backup/apps/magentotest/ui/src/pages/tables/SequenceInvoice1.js",["2283"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sequenceValue', header: 'sequenceValue', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'sequenceinvoice1/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SequenceInvoice1 = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SequenceInvoice1;","/backup/apps/magentotest/ui/src/pages/tables/SequenceInvoice0.js",["2284"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sequenceValue', header: 'sequenceValue', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'sequenceinvoice0/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SequenceInvoice0 = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SequenceInvoice0;","/backup/apps/magentotest/ui/src/pages/tables/SequenceCreditmemo1.js",["2285"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sequenceValue', header: 'sequenceValue', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'sequencecreditmemo1/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SequenceCreditmemo1 = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SequenceCreditmemo1;","/backup/apps/magentotest/ui/src/pages/tables/SequenceCreditmemo0.js",["2286"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'sequenceValue', header: 'sequenceValue', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'sequencecreditmemo0/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SequenceCreditmemo0 = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SequenceCreditmemo0;","/backup/apps/magentotest/ui/src/pages/tables/SendfriendLog.js",["2287"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'logId', header: 'logId', defaultFlex: 1 },\n  { name: 'ip', header: 'ip', defaultFlex: 1 },\n  { name: 'time', header: 'time', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'sendfriendlog/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SendfriendLog = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SendfriendLog;","/backup/apps/magentotest/ui/src/pages/tables/SearchSynonyms.js",["2288"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'groupId', header: 'groupId', defaultFlex: 1 },\n  { name: 'synonyms', header: 'synonyms', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'searchsynonyms/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SearchSynonyms = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SearchSynonyms;","/backup/apps/magentotest/ui/src/pages/tables/SearchQuery.js",["2289"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'queryId', header: 'queryId', defaultFlex: 1 },\n  { name: 'queryText', header: 'queryText', defaultFlex: 1 },\n  { name: 'numResults', header: 'numResults', defaultFlex: 1 },\n  { name: 'popularity', header: 'popularity', defaultFlex: 1 },\n  { name: 'redirect', header: 'redirect', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'displayInTerms', header: 'displayInTerms', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n  { name: 'isProcessed', header: 'isProcessed', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'searchquery/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SearchQuery = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SearchQuery;","/backup/apps/magentotest/ui/src/pages/tables/SalesruleWebsite.js",["2290"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesrulewebsite/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesruleWebsite = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesruleWebsite;","/backup/apps/magentotest/ui/src/pages/tables/SalesruleProductAttribute.js",["2291"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'attributeId', header: 'attributeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesruleproductattribute/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesruleProductAttribute = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesruleProductAttribute;","/backup/apps/magentotest/ui/src/pages/tables/SalesruleLabel.js",["2292"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'labelId', header: 'labelId', defaultFlex: 1 },\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'label', header: 'label', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesrulelabel/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesruleLabel = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesruleLabel;","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCustomer.js",["2293"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleCustomerId', header: 'ruleCustomerId', defaultFlex: 1 },\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'timesUsed', header: 'timesUsed', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesrulecustomer/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesruleCustomer = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesruleCustomer;","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCustomerGroup.js",["2294"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesrulecustomergroup/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesruleCustomerGroup = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesruleCustomerGroup;","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCouponUsage.js",["2295"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'couponId', header: 'couponId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'timesUsed', header: 'timesUsed', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesrulecouponusage/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesruleCouponUsage = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesruleCouponUsage;","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCouponAggregatedUpdated.js",["2296"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'couponCode', header: 'couponCode', defaultFlex: 1 },\n  { name: 'couponUses', header: 'couponUses', defaultFlex: 1 },\n  { name: 'subtotalAmount', header: 'subtotalAmount', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n  { name: 'totalAmount', header: 'totalAmount', defaultFlex: 1 },\n  { name: 'subtotalAmountActual', header: 'subtotalAmountActual', defaultFlex: 1 },\n  { name: 'discountAmountActual', header: 'discountAmountActual', defaultFlex: 1 },\n  { name: 'totalAmountActual', header: 'totalAmountActual', defaultFlex: 1 },\n  { name: 'ruleName', header: 'ruleName', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesrulecouponaggregatedupdated/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesruleCouponAggregatedUpdated = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesruleCouponAggregatedUpdated;","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCouponAggregatedOrder.js",["2297"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'couponCode', header: 'couponCode', defaultFlex: 1 },\n  { name: 'couponUses', header: 'couponUses', defaultFlex: 1 },\n  { name: 'subtotalAmount', header: 'subtotalAmount', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n  { name: 'totalAmount', header: 'totalAmount', defaultFlex: 1 },\n  { name: 'ruleName', header: 'ruleName', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesrulecouponaggregatedorder/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesruleCouponAggregatedOrder = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesruleCouponAggregatedOrder;","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCouponAggregated.js",["2298"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'couponCode', header: 'couponCode', defaultFlex: 1 },\n  { name: 'couponUses', header: 'couponUses', defaultFlex: 1 },\n  { name: 'subtotalAmount', header: 'subtotalAmount', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n  { name: 'totalAmount', header: 'totalAmount', defaultFlex: 1 },\n  { name: 'subtotalAmountActual', header: 'subtotalAmountActual', defaultFlex: 1 },\n  { name: 'discountAmountActual', header: 'discountAmountActual', defaultFlex: 1 },\n  { name: 'totalAmountActual', header: 'totalAmountActual', defaultFlex: 1 },\n  { name: 'ruleName', header: 'ruleName', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesrulecouponaggregated/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesruleCouponAggregated = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesruleCouponAggregated;","/backup/apps/magentotest/ui/src/pages/tables/SalesruleCoupon.js",["2299"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'couponId', header: 'couponId', defaultFlex: 1 },\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'usageLimit', header: 'usageLimit', defaultFlex: 1 },\n  { name: 'usagePerCustomer', header: 'usagePerCustomer', defaultFlex: 1 },\n  { name: 'timesUsed', header: 'timesUsed', defaultFlex: 1 },\n  { name: 'expirationDate', header: 'expirationDate', defaultFlex: 1 },\n  { name: 'isPrimary', header: 'isPrimary', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'type', header: 'type', defaultFlex: 1 },\n  { name: 'generatedByDotmailer', header: 'generatedByDotmailer', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesrulecoupon/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesruleCoupon = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesruleCoupon;","/backup/apps/magentotest/ui/src/pages/tables/Salesrule.js",["2300"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ruleId', header: 'ruleId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'fromDate', header: 'fromDate', defaultFlex: 1 },\n  { name: 'toDate', header: 'toDate', defaultFlex: 1 },\n  { name: 'usesPerCustomer', header: 'usesPerCustomer', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n  { name: 'conditionsSerialized', header: 'conditionsSerialized', defaultFlex: 1 },\n  { name: 'actionsSerialized', header: 'actionsSerialized', defaultFlex: 1 },\n  { name: 'stopRulesProcessing', header: 'stopRulesProcessing', defaultFlex: 1 },\n  { name: 'isAdvanced', header: 'isAdvanced', defaultFlex: 1 },\n  { name: 'productIds', header: 'productIds', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n  { name: 'simpleAction', header: 'simpleAction', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n  { name: 'discountQty', header: 'discountQty', defaultFlex: 1 },\n  { name: 'discountStep', header: 'discountStep', defaultFlex: 1 },\n  { name: 'applyToShipping', header: 'applyToShipping', defaultFlex: 1 },\n  { name: 'timesUsed', header: 'timesUsed', defaultFlex: 1 },\n  { name: 'isRss', header: 'isRss', defaultFlex: 1 },\n  { name: 'couponType', header: 'couponType', defaultFlex: 1 },\n  { name: 'useAutoGeneration', header: 'useAutoGeneration', defaultFlex: 1 },\n  { name: 'usesPerCoupon', header: 'usesPerCoupon', defaultFlex: 1 },\n  { name: 'simpleFreeShipping', header: 'simpleFreeShipping', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesrule/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Salesrule = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Salesrule;","/backup/apps/magentotest/ui/src/pages/tables/SalesShippingAggregated.js",["2301"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'shippingDescription', header: 'shippingDescription', defaultFlex: 1 },\n  { name: 'ordersCount', header: 'ordersCount', defaultFlex: 1 },\n  { name: 'totalShipping', header: 'totalShipping', defaultFlex: 1 },\n  { name: 'totalShippingActual', header: 'totalShippingActual', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesshippingaggregated/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesShippingAggregated = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesShippingAggregated;","/backup/apps/magentotest/ui/src/pages/tables/SalesShippingAggregatedOrder.js",["2302"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'shippingDescription', header: 'shippingDescription', defaultFlex: 1 },\n  { name: 'ordersCount', header: 'ordersCount', defaultFlex: 1 },\n  { name: 'totalShipping', header: 'totalShipping', defaultFlex: 1 },\n  { name: 'totalShippingActual', header: 'totalShippingActual', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesshippingaggregatedorder/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesShippingAggregatedOrder = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesShippingAggregatedOrder;","/backup/apps/magentotest/ui/src/pages/tables/SalesShipmentTrack.js",["2303"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'weight', header: 'weight', defaultFlex: 1 },\n  { name: 'qty', header: 'qty', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'trackNumber', header: 'trackNumber', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n  { name: 'carrierCode', header: 'carrierCode', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesshipmenttrack/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesShipmentTrack = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesShipmentTrack;","/backup/apps/magentotest/ui/src/pages/tables/SalesShipmentItem.js",["2304"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'rowTotal', header: 'rowTotal', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'weight', header: 'weight', defaultFlex: 1 },\n  { name: 'qty', header: 'qty', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'orderItemId', header: 'orderItemId', defaultFlex: 1 },\n  { name: 'additionalData', header: 'additionalData', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'sku', header: 'sku', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesshipmentitem/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesShipmentItem = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesShipmentItem;","/backup/apps/magentotest/ui/src/pages/tables/SalesShipmentGrid.js",["2305"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'incrementId', header: 'incrementId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'orderIncrementId', header: 'orderIncrementId', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'orderCreatedAt', header: 'orderCreatedAt', defaultFlex: 1 },\n  { name: 'customerName', header: 'customerName', defaultFlex: 1 },\n  { name: 'totalQty', header: 'totalQty', defaultFlex: 1 },\n  { name: 'shipmentStatus', header: 'shipmentStatus', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'billingAddress', header: 'billingAddress', defaultFlex: 1 },\n  { name: 'shippingAddress', header: 'shippingAddress', defaultFlex: 1 },\n  { name: 'billingName', header: 'billingName', defaultFlex: 1 },\n  { name: 'shippingName', header: 'shippingName', defaultFlex: 1 },\n  { name: 'customerEmail', header: 'customerEmail', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'paymentMethod', header: 'paymentMethod', defaultFlex: 1 },\n  { name: 'shippingInformation', header: 'shippingInformation', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesshipmentgrid/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesShipmentGrid = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesShipmentGrid;","/backup/apps/magentotest/ui/src/pages/tables/SalesShipmentComment.js",["2306"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'isCustomerNotified', header: 'isCustomerNotified', defaultFlex: 1 },\n  { name: 'isVisibleOnFront', header: 'isVisibleOnFront', defaultFlex: 1 },\n  { name: 'comment', header: 'comment', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesshipmentcomment/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesShipmentComment = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesShipmentComment;","/backup/apps/magentotest/ui/src/pages/tables/SalesShipment.js",["2307"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'totalWeight', header: 'totalWeight', defaultFlex: 1 },\n  { name: 'totalQty', header: 'totalQty', defaultFlex: 1 },\n  { name: 'emailSent', header: 'emailSent', defaultFlex: 1 },\n  { name: 'sendEmail', header: 'sendEmail', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'shippingAddressId', header: 'shippingAddressId', defaultFlex: 1 },\n  { name: 'billingAddressId', header: 'billingAddressId', defaultFlex: 1 },\n  { name: 'shipmentStatus', header: 'shipmentStatus', defaultFlex: 1 },\n  { name: 'incrementId', header: 'incrementId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'packages', header: 'packages', defaultFlex: 1 },\n  { name: 'shippingLabel', header: 'shippingLabel', defaultFlex: 1 },\n  { name: 'customerNote', header: 'customerNote', defaultFlex: 1 },\n  { name: 'customerNoteNotify', header: 'customerNoteNotify', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesshipment/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesShipment = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesShipment;","/backup/apps/magentotest/ui/src/pages/tables/SalesSequenceProfile.js",["2308"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'profileId', header: 'profileId', defaultFlex: 1 },\n  { name: 'metaId', header: 'metaId', defaultFlex: 1 },\n  { name: 'prefix', header: 'prefix', defaultFlex: 1 },\n  { name: 'suffix', header: 'suffix', defaultFlex: 1 },\n  { name: 'startValue', header: 'startValue', defaultFlex: 1 },\n  { name: 'step', header: 'step', defaultFlex: 1 },\n  { name: 'maxValue', header: 'maxValue', defaultFlex: 1 },\n  { name: 'warningValue', header: 'warningValue', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salessequenceprofile/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesSequenceProfile = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesSequenceProfile;","/backup/apps/magentotest/ui/src/pages/tables/SalesSequenceMeta.js",["2309"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'metaId', header: 'metaId', defaultFlex: 1 },\n  { name: 'entityType', header: 'entityType', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'sequenceTable', header: 'sequenceTable', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salessequencemeta/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesSequenceMeta = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesSequenceMeta;","/backup/apps/magentotest/ui/src/pages/tables/SalesRefundedAggregatedOrder.js",["2310"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'ordersCount', header: 'ordersCount', defaultFlex: 1 },\n  { name: 'refunded', header: 'refunded', defaultFlex: 1 },\n  { name: 'onlineRefunded', header: 'onlineRefunded', defaultFlex: 1 },\n  { name: 'offlineRefunded', header: 'offlineRefunded', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesrefundedaggregatedorder/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesRefundedAggregatedOrder = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesRefundedAggregatedOrder;","/backup/apps/magentotest/ui/src/pages/tables/SalesRefundedAggregated.js",["2311"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'ordersCount', header: 'ordersCount', defaultFlex: 1 },\n  { name: 'refunded', header: 'refunded', defaultFlex: 1 },\n  { name: 'onlineRefunded', header: 'onlineRefunded', defaultFlex: 1 },\n  { name: 'offlineRefunded', header: 'offlineRefunded', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesrefundedaggregated/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesRefundedAggregated = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesRefundedAggregated;","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderTaxItem.js",["2312"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'taxItemId', header: 'taxItemId', defaultFlex: 1 },\n  { name: 'taxId', header: 'taxId', defaultFlex: 1 },\n  { name: 'itemId', header: 'itemId', defaultFlex: 1 },\n  { name: 'taxPercent', header: 'taxPercent', defaultFlex: 1 },\n  { name: 'amount', header: 'amount', defaultFlex: 1 },\n  { name: 'baseAmount', header: 'baseAmount', defaultFlex: 1 },\n  { name: 'realAmount', header: 'realAmount', defaultFlex: 1 },\n  { name: 'realBaseAmount', header: 'realBaseAmount', defaultFlex: 1 },\n  { name: 'associatedItemId', header: 'associatedItemId', defaultFlex: 1 },\n  { name: 'taxableItemType', header: 'taxableItemType', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesordertaxitem/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesOrderTaxItem = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesOrderTaxItem;","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderTax.js",["2313"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'taxId', header: 'taxId', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n  { name: 'percent', header: 'percent', defaultFlex: 1 },\n  { name: 'amount', header: 'amount', defaultFlex: 1 },\n  { name: 'priority', header: 'priority', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'baseAmount', header: 'baseAmount', defaultFlex: 1 },\n  { name: 'process', header: 'process', defaultFlex: 1 },\n  { name: 'baseRealAmount', header: 'baseRealAmount', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesordertax/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesOrderTax = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesOrderTax;","/backup/apps/magentotest/ui/src/pages/tables/SalesPaymentTransaction.js",["2314"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'transactionId', header: 'transactionId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'paymentId', header: 'paymentId', defaultFlex: 1 },\n  { name: 'txnId', header: 'txnId', defaultFlex: 1 },\n  { name: 'parentTxnId', header: 'parentTxnId', defaultFlex: 1 },\n  { name: 'txnType', header: 'txnType', defaultFlex: 1 },\n  { name: 'isClosed', header: 'isClosed', defaultFlex: 1 },\n  { name: 'additionalInformation', header: 'additionalInformation', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salespaymenttransaction/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesPaymentTransaction = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesPaymentTransaction;","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderStatusState.js",["2315"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'state', header: 'state', defaultFlex: 1 },\n  { name: 'isDefault', header: 'isDefault', defaultFlex: 1 },\n  { name: 'visibleOnFront', header: 'visibleOnFront', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesorderstatusstate/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesOrderStatusState = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesOrderStatusState;","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderStatusLabel.js",["2316"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'label', header: 'label', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesorderstatuslabel/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesOrderStatusLabel = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesOrderStatusLabel;","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderStatusHistory.js",["2317"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'isCustomerNotified', header: 'isCustomerNotified', defaultFlex: 1 },\n  { name: 'isVisibleOnFront', header: 'isVisibleOnFront', defaultFlex: 1 },\n  { name: 'comment', header: 'comment', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'entityName', header: 'entityName', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesorderstatushistory/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesOrderStatusHistory = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesOrderStatusHistory;","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderStatus.js",["2318"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'label', header: 'label', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesorderstatus/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesOrderStatus = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesOrderStatus;","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderPayment.js",["2319"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'baseShippingCaptured', header: 'baseShippingCaptured', defaultFlex: 1 },\n  { name: 'shippingCaptured', header: 'shippingCaptured', defaultFlex: 1 },\n  { name: 'amountRefunded', header: 'amountRefunded', defaultFlex: 1 },\n  { name: 'baseAmountPaid', header: 'baseAmountPaid', defaultFlex: 1 },\n  { name: 'amountCanceled', header: 'amountCanceled', defaultFlex: 1 },\n  { name: 'baseAmountAuthorized', header: 'baseAmountAuthorized', defaultFlex: 1 },\n  { name: 'baseAmountPaidOnline', header: 'baseAmountPaidOnline', defaultFlex: 1 },\n  { name: 'baseAmountRefundedOnline', header: 'baseAmountRefundedOnline', defaultFlex: 1 },\n  { name: 'baseShippingAmount', header: 'baseShippingAmount', defaultFlex: 1 },\n  { name: 'shippingAmount', header: 'shippingAmount', defaultFlex: 1 },\n  { name: 'amountPaid', header: 'amountPaid', defaultFlex: 1 },\n  { name: 'amountAuthorized', header: 'amountAuthorized', defaultFlex: 1 },\n  { name: 'baseAmountOrdered', header: 'baseAmountOrdered', defaultFlex: 1 },\n  { name: 'baseShippingRefunded', header: 'baseShippingRefunded', defaultFlex: 1 },\n  { name: 'shippingRefunded', header: 'shippingRefunded', defaultFlex: 1 },\n  { name: 'baseAmountRefunded', header: 'baseAmountRefunded', defaultFlex: 1 },\n  { name: 'amountOrdered', header: 'amountOrdered', defaultFlex: 1 },\n  { name: 'baseAmountCanceled', header: 'baseAmountCanceled', defaultFlex: 1 },\n  { name: 'quotePaymentId', header: 'quotePaymentId', defaultFlex: 1 },\n  { name: 'additionalData', header: 'additionalData', defaultFlex: 1 },\n  { name: 'ccExpMonth', header: 'ccExpMonth', defaultFlex: 1 },\n  { name: 'ccSsStartYear', header: 'ccSsStartYear', defaultFlex: 1 },\n  { name: 'echeckBankName', header: 'echeckBankName', defaultFlex: 1 },\n  { name: 'method', header: 'method', defaultFlex: 1 },\n  { name: 'ccDebugRequestBody', header: 'ccDebugRequestBody', defaultFlex: 1 },\n  { name: 'ccSecureVerify', header: 'ccSecureVerify', defaultFlex: 1 },\n  { name: 'protectionEligibility', header: 'protectionEligibility', defaultFlex: 1 },\n  { name: 'ccApproval', header: 'ccApproval', defaultFlex: 1 },\n  { name: 'ccLast4', header: 'ccLast4', defaultFlex: 1 },\n  { name: 'ccStatusDescription', header: 'ccStatusDescription', defaultFlex: 1 },\n  { name: 'echeckType', header: 'echeckType', defaultFlex: 1 },\n  { name: 'ccDebugResponseSerialized', header: 'ccDebugResponseSerialized', defaultFlex: 1 },\n  { name: 'ccSsStartMonth', header: 'ccSsStartMonth', defaultFlex: 1 },\n  { name: 'echeckAccountType', header: 'echeckAccountType', defaultFlex: 1 },\n  { name: 'lastTransId', header: 'lastTransId', defaultFlex: 1 },\n  { name: 'ccCidStatus', header: 'ccCidStatus', defaultFlex: 1 },\n  { name: 'ccOwner', header: 'ccOwner', defaultFlex: 1 },\n  { name: 'ccType', header: 'ccType', defaultFlex: 1 },\n  { name: 'poNumber', header: 'poNumber', defaultFlex: 1 },\n  { name: 'ccExpYear', header: 'ccExpYear', defaultFlex: 1 },\n  { name: 'ccStatus', header: 'ccStatus', defaultFlex: 1 },\n  { name: 'echeckRoutingNumber', header: 'echeckRoutingNumber', defaultFlex: 1 },\n  { name: 'accountStatus', header: 'accountStatus', defaultFlex: 1 },\n  { name: 'anetTransMethod', header: 'anetTransMethod', defaultFlex: 1 },\n  { name: 'ccDebugResponseBody', header: 'ccDebugResponseBody', defaultFlex: 1 },\n  { name: 'ccSsIssue', header: 'ccSsIssue', defaultFlex: 1 },\n  { name: 'echeckAccountName', header: 'echeckAccountName', defaultFlex: 1 },\n  { name: 'ccAvsStatus', header: 'ccAvsStatus', defaultFlex: 1 },\n  { name: 'ccNumberEnc', header: 'ccNumberEnc', defaultFlex: 1 },\n  { name: 'ccTransId', header: 'ccTransId', defaultFlex: 1 },\n  { name: 'addressStatus', header: 'addressStatus', defaultFlex: 1 },\n  { name: 'additionalInformation', header: 'additionalInformation', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesorderpayment/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesOrderPayment = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesOrderPayment;","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderGrid.js",["2320"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'storeName', header: 'storeName', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'baseGrandTotal', header: 'baseGrandTotal', defaultFlex: 1 },\n  { name: 'baseTotalPaid', header: 'baseTotalPaid', defaultFlex: 1 },\n  { name: 'grandTotal', header: 'grandTotal', defaultFlex: 1 },\n  { name: 'totalPaid', header: 'totalPaid', defaultFlex: 1 },\n  { name: 'incrementId', header: 'incrementId', defaultFlex: 1 },\n  { name: 'baseCurrencyCode', header: 'baseCurrencyCode', defaultFlex: 1 },\n  { name: 'orderCurrencyCode', header: 'orderCurrencyCode', defaultFlex: 1 },\n  { name: 'shippingName', header: 'shippingName', defaultFlex: 1 },\n  { name: 'billingName', header: 'billingName', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'billingAddress', header: 'billingAddress', defaultFlex: 1 },\n  { name: 'shippingAddress', header: 'shippingAddress', defaultFlex: 1 },\n  { name: 'shippingInformation', header: 'shippingInformation', defaultFlex: 1 },\n  { name: 'customerEmail', header: 'customerEmail', defaultFlex: 1 },\n  { name: 'customerGroup', header: 'customerGroup', defaultFlex: 1 },\n  { name: 'subtotal', header: 'subtotal', defaultFlex: 1 },\n  { name: 'shippingAndHandling', header: 'shippingAndHandling', defaultFlex: 1 },\n  { name: 'customerName', header: 'customerName', defaultFlex: 1 },\n  { name: 'paymentMethod', header: 'paymentMethod', defaultFlex: 1 },\n  { name: 'totalRefunded', header: 'totalRefunded', defaultFlex: 1 },\n  { name: 'signifydGuaranteeStatus', header: 'signifydGuaranteeStatus', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesordergrid/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesOrderGrid = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesOrderGrid;","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderItem.js",["2321"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'itemId', header: 'itemId', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'parentItemId', header: 'parentItemId', defaultFlex: 1 },\n  { name: 'quoteItemId', header: 'quoteItemId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'productType', header: 'productType', defaultFlex: 1 },\n  { name: 'productOptions', header: 'productOptions', defaultFlex: 1 },\n  { name: 'weight', header: 'weight', defaultFlex: 1 },\n  { name: 'isVirtual', header: 'isVirtual', defaultFlex: 1 },\n  { name: 'sku', header: 'sku', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'appliedRuleIds', header: 'appliedRuleIds', defaultFlex: 1 },\n  { name: 'additionalData', header: 'additionalData', defaultFlex: 1 },\n  { name: 'isQtyDecimal', header: 'isQtyDecimal', defaultFlex: 1 },\n  { name: 'noDiscount', header: 'noDiscount', defaultFlex: 1 },\n  { name: 'qtyBackordered', header: 'qtyBackordered', defaultFlex: 1 },\n  { name: 'qtyCanceled', header: 'qtyCanceled', defaultFlex: 1 },\n  { name: 'qtyInvoiced', header: 'qtyInvoiced', defaultFlex: 1 },\n  { name: 'qtyOrdered', header: 'qtyOrdered', defaultFlex: 1 },\n  { name: 'qtyRefunded', header: 'qtyRefunded', defaultFlex: 1 },\n  { name: 'qtyShipped', header: 'qtyShipped', defaultFlex: 1 },\n  { name: 'baseCost', header: 'baseCost', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'basePrice', header: 'basePrice', defaultFlex: 1 },\n  { name: 'originalPrice', header: 'originalPrice', defaultFlex: 1 },\n  { name: 'baseOriginalPrice', header: 'baseOriginalPrice', defaultFlex: 1 },\n  { name: 'taxPercent', header: 'taxPercent', defaultFlex: 1 },\n  { name: 'taxAmount', header: 'taxAmount', defaultFlex: 1 },\n  { name: 'baseTaxAmount', header: 'baseTaxAmount', defaultFlex: 1 },\n  { name: 'taxInvoiced', header: 'taxInvoiced', defaultFlex: 1 },\n  { name: 'baseTaxInvoiced', header: 'baseTaxInvoiced', defaultFlex: 1 },\n  { name: 'discountPercent', header: 'discountPercent', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n  { name: 'baseDiscountAmount', header: 'baseDiscountAmount', defaultFlex: 1 },\n  { name: 'discountInvoiced', header: 'discountInvoiced', defaultFlex: 1 },\n  { name: 'baseDiscountInvoiced', header: 'baseDiscountInvoiced', defaultFlex: 1 },\n  { name: 'amountRefunded', header: 'amountRefunded', defaultFlex: 1 },\n  { name: 'baseAmountRefunded', header: 'baseAmountRefunded', defaultFlex: 1 },\n  { name: 'rowTotal', header: 'rowTotal', defaultFlex: 1 },\n  { name: 'baseRowTotal', header: 'baseRowTotal', defaultFlex: 1 },\n  { name: 'rowInvoiced', header: 'rowInvoiced', defaultFlex: 1 },\n  { name: 'baseRowInvoiced', header: 'baseRowInvoiced', defaultFlex: 1 },\n  { name: 'rowWeight', header: 'rowWeight', defaultFlex: 1 },\n  { name: 'baseTaxBeforeDiscount', header: 'baseTaxBeforeDiscount', defaultFlex: 1 },\n  { name: 'taxBeforeDiscount', header: 'taxBeforeDiscount', defaultFlex: 1 },\n  { name: 'extOrderItemId', header: 'extOrderItemId', defaultFlex: 1 },\n  { name: 'lockedDoInvoice', header: 'lockedDoInvoice', defaultFlex: 1 },\n  { name: 'lockedDoShip', header: 'lockedDoShip', defaultFlex: 1 },\n  { name: 'priceInclTax', header: 'priceInclTax', defaultFlex: 1 },\n  { name: 'basePriceInclTax', header: 'basePriceInclTax', defaultFlex: 1 },\n  { name: 'rowTotalInclTax', header: 'rowTotalInclTax', defaultFlex: 1 },\n  { name: 'baseRowTotalInclTax', header: 'baseRowTotalInclTax', defaultFlex: 1 },\n  { name: 'discountTaxCompensationAmount', header: 'discountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'baseDiscountTaxCompensationAmount', header: 'baseDiscountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'discountTaxCompensationInvoiced', header: 'discountTaxCompensationInvoiced', defaultFlex: 1 },\n  { name: 'baseDiscountTaxCompensationInvoiced', header: 'baseDiscountTaxCompensationInvoiced', defaultFlex: 1 },\n  { name: 'discountTaxCompensationRefunded', header: 'discountTaxCompensationRefunded', defaultFlex: 1 },\n  { name: 'baseDiscountTaxCompensationRefunded', header: 'baseDiscountTaxCompensationRefunded', defaultFlex: 1 },\n  { name: 'taxCanceled', header: 'taxCanceled', defaultFlex: 1 },\n  { name: 'discountTaxCompensationCanceled', header: 'discountTaxCompensationCanceled', defaultFlex: 1 },\n  { name: 'taxRefunded', header: 'taxRefunded', defaultFlex: 1 },\n  { name: 'baseTaxRefunded', header: 'baseTaxRefunded', defaultFlex: 1 },\n  { name: 'discountRefunded', header: 'discountRefunded', defaultFlex: 1 },\n  { name: 'baseDiscountRefunded', header: 'baseDiscountRefunded', defaultFlex: 1 },\n  { name: 'giftMessageId', header: 'giftMessageId', defaultFlex: 1 },\n  { name: 'giftMessageAvailable', header: 'giftMessageAvailable', defaultFlex: 1 },\n  { name: 'freeShipping', header: 'freeShipping', defaultFlex: 1 },\n  { name: 'weeeTaxApplied', header: 'weeeTaxApplied', defaultFlex: 1 },\n  { name: 'weeeTaxAppliedAmount', header: 'weeeTaxAppliedAmount', defaultFlex: 1 },\n  { name: 'weeeTaxAppliedRowAmount', header: 'weeeTaxAppliedRowAmount', defaultFlex: 1 },\n  { name: 'weeeTaxDisposition', header: 'weeeTaxDisposition', defaultFlex: 1 },\n  { name: 'weeeTaxRowDisposition', header: 'weeeTaxRowDisposition', defaultFlex: 1 },\n  { name: 'baseWeeeTaxAppliedAmount', header: 'baseWeeeTaxAppliedAmount', defaultFlex: 1 },\n  { name: 'baseWeeeTaxAppliedRowAmnt', header: 'baseWeeeTaxAppliedRowAmnt', defaultFlex: 1 },\n  { name: 'baseWeeeTaxDisposition', header: 'baseWeeeTaxDisposition', defaultFlex: 1 },\n  { name: 'baseWeeeTaxRowDisposition', header: 'baseWeeeTaxRowDisposition', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesorderitem/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesOrderItem = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesOrderItem;","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderAggregatedUpdated.js",["2322"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'ordersCount', header: 'ordersCount', defaultFlex: 1 },\n  { name: 'totalQtyOrdered', header: 'totalQtyOrdered', defaultFlex: 1 },\n  { name: 'totalQtyInvoiced', header: 'totalQtyInvoiced', defaultFlex: 1 },\n  { name: 'totalIncomeAmount', header: 'totalIncomeAmount', defaultFlex: 1 },\n  { name: 'totalRevenueAmount', header: 'totalRevenueAmount', defaultFlex: 1 },\n  { name: 'totalProfitAmount', header: 'totalProfitAmount', defaultFlex: 1 },\n  { name: 'totalInvoicedAmount', header: 'totalInvoicedAmount', defaultFlex: 1 },\n  { name: 'totalCanceledAmount', header: 'totalCanceledAmount', defaultFlex: 1 },\n  { name: 'totalPaidAmount', header: 'totalPaidAmount', defaultFlex: 1 },\n  { name: 'totalRefundedAmount', header: 'totalRefundedAmount', defaultFlex: 1 },\n  { name: 'totalTaxAmount', header: 'totalTaxAmount', defaultFlex: 1 },\n  { name: 'totalTaxAmountActual', header: 'totalTaxAmountActual', defaultFlex: 1 },\n  { name: 'totalShippingAmount', header: 'totalShippingAmount', defaultFlex: 1 },\n  { name: 'totalShippingAmountActual', header: 'totalShippingAmountActual', defaultFlex: 1 },\n  { name: 'totalDiscountAmount', header: 'totalDiscountAmount', defaultFlex: 1 },\n  { name: 'totalDiscountAmountActual', header: 'totalDiscountAmountActual', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesorderaggregatedupdated/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesOrderAggregatedUpdated = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesOrderAggregatedUpdated;","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderAggregatedCreated.js",["2323"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'ordersCount', header: 'ordersCount', defaultFlex: 1 },\n  { name: 'totalQtyOrdered', header: 'totalQtyOrdered', defaultFlex: 1 },\n  { name: 'totalQtyInvoiced', header: 'totalQtyInvoiced', defaultFlex: 1 },\n  { name: 'totalIncomeAmount', header: 'totalIncomeAmount', defaultFlex: 1 },\n  { name: 'totalRevenueAmount', header: 'totalRevenueAmount', defaultFlex: 1 },\n  { name: 'totalProfitAmount', header: 'totalProfitAmount', defaultFlex: 1 },\n  { name: 'totalInvoicedAmount', header: 'totalInvoicedAmount', defaultFlex: 1 },\n  { name: 'totalCanceledAmount', header: 'totalCanceledAmount', defaultFlex: 1 },\n  { name: 'totalPaidAmount', header: 'totalPaidAmount', defaultFlex: 1 },\n  { name: 'totalRefundedAmount', header: 'totalRefundedAmount', defaultFlex: 1 },\n  { name: 'totalTaxAmount', header: 'totalTaxAmount', defaultFlex: 1 },\n  { name: 'totalTaxAmountActual', header: 'totalTaxAmountActual', defaultFlex: 1 },\n  { name: 'totalShippingAmount', header: 'totalShippingAmount', defaultFlex: 1 },\n  { name: 'totalShippingAmountActual', header: 'totalShippingAmountActual', defaultFlex: 1 },\n  { name: 'totalDiscountAmount', header: 'totalDiscountAmount', defaultFlex: 1 },\n  { name: 'totalDiscountAmountActual', header: 'totalDiscountAmountActual', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesorderaggregatedcreated/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesOrderAggregatedCreated = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesOrderAggregatedCreated;","/backup/apps/magentotest/ui/src/pages/tables/SalesOrderAddress.js",["2324"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'customerAddressId', header: 'customerAddressId', defaultFlex: 1 },\n  { name: 'quoteAddressId', header: 'quoteAddressId', defaultFlex: 1 },\n  { name: 'regionId', header: 'regionId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'fax', header: 'fax', defaultFlex: 1 },\n  { name: 'region', header: 'region', defaultFlex: 1 },\n  { name: 'postcode', header: 'postcode', defaultFlex: 1 },\n  { name: 'lastname', header: 'lastname', defaultFlex: 1 },\n  { name: 'street', header: 'street', defaultFlex: 1 },\n  { name: 'city', header: 'city', defaultFlex: 1 },\n  { name: 'email', header: 'email', defaultFlex: 1 },\n  { name: 'telephone', header: 'telephone', defaultFlex: 1 },\n  { name: 'countryId', header: 'countryId', defaultFlex: 1 },\n  { name: 'firstname', header: 'firstname', defaultFlex: 1 },\n  { name: 'addressType', header: 'addressType', defaultFlex: 1 },\n  { name: 'prefix', header: 'prefix', defaultFlex: 1 },\n  { name: 'middlename', header: 'middlename', defaultFlex: 1 },\n  { name: 'suffix', header: 'suffix', defaultFlex: 1 },\n  { name: 'company', header: 'company', defaultFlex: 1 },\n  { name: 'vatId', header: 'vatId', defaultFlex: 1 },\n  { name: 'vatIsValid', header: 'vatIsValid', defaultFlex: 1 },\n  { name: 'vatRequestId', header: 'vatRequestId', defaultFlex: 1 },\n  { name: 'vatRequestDate', header: 'vatRequestDate', defaultFlex: 1 },\n  { name: 'vatRequestSuccess', header: 'vatRequestSuccess', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesorderaddress/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesOrderAddress = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesOrderAddress;","/backup/apps/magentotest/ui/src/pages/tables/SalesOrder.js",["2325"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'state', header: 'state', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'couponCode', header: 'couponCode', defaultFlex: 1 },\n  { name: 'protectCode', header: 'protectCode', defaultFlex: 1 },\n  { name: 'shippingDescription', header: 'shippingDescription', defaultFlex: 1 },\n  { name: 'isVirtual', header: 'isVirtual', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'baseDiscountAmount', header: 'baseDiscountAmount', defaultFlex: 1 },\n  { name: 'baseDiscountCanceled', header: 'baseDiscountCanceled', defaultFlex: 1 },\n  { name: 'baseDiscountInvoiced', header: 'baseDiscountInvoiced', defaultFlex: 1 },\n  { name: 'baseDiscountRefunded', header: 'baseDiscountRefunded', defaultFlex: 1 },\n  { name: 'baseGrandTotal', header: 'baseGrandTotal', defaultFlex: 1 },\n  { name: 'baseShippingAmount', header: 'baseShippingAmount', defaultFlex: 1 },\n  { name: 'baseShippingCanceled', header: 'baseShippingCanceled', defaultFlex: 1 },\n  { name: 'baseShippingInvoiced', header: 'baseShippingInvoiced', defaultFlex: 1 },\n  { name: 'baseShippingRefunded', header: 'baseShippingRefunded', defaultFlex: 1 },\n  { name: 'baseShippingTaxAmount', header: 'baseShippingTaxAmount', defaultFlex: 1 },\n  { name: 'baseShippingTaxRefunded', header: 'baseShippingTaxRefunded', defaultFlex: 1 },\n  { name: 'baseSubtotal', header: 'baseSubtotal', defaultFlex: 1 },\n  { name: 'baseSubtotalCanceled', header: 'baseSubtotalCanceled', defaultFlex: 1 },\n  { name: 'baseSubtotalInvoiced', header: 'baseSubtotalInvoiced', defaultFlex: 1 },\n  { name: 'baseSubtotalRefunded', header: 'baseSubtotalRefunded', defaultFlex: 1 },\n  { name: 'baseTaxAmount', header: 'baseTaxAmount', defaultFlex: 1 },\n  { name: 'baseTaxCanceled', header: 'baseTaxCanceled', defaultFlex: 1 },\n  { name: 'baseTaxInvoiced', header: 'baseTaxInvoiced', defaultFlex: 1 },\n  { name: 'baseTaxRefunded', header: 'baseTaxRefunded', defaultFlex: 1 },\n  { name: 'baseToGlobalRate', header: 'baseToGlobalRate', defaultFlex: 1 },\n  { name: 'baseToOrderRate', header: 'baseToOrderRate', defaultFlex: 1 },\n  { name: 'baseTotalCanceled', header: 'baseTotalCanceled', defaultFlex: 1 },\n  { name: 'baseTotalInvoiced', header: 'baseTotalInvoiced', defaultFlex: 1 },\n  { name: 'baseTotalInvoicedCost', header: 'baseTotalInvoicedCost', defaultFlex: 1 },\n  { name: 'baseTotalOfflineRefunded', header: 'baseTotalOfflineRefunded', defaultFlex: 1 },\n  { name: 'baseTotalOnlineRefunded', header: 'baseTotalOnlineRefunded', defaultFlex: 1 },\n  { name: 'baseTotalPaid', header: 'baseTotalPaid', defaultFlex: 1 },\n  { name: 'baseTotalQtyOrdered', header: 'baseTotalQtyOrdered', defaultFlex: 1 },\n  { name: 'baseTotalRefunded', header: 'baseTotalRefunded', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n  { name: 'discountCanceled', header: 'discountCanceled', defaultFlex: 1 },\n  { name: 'discountInvoiced', header: 'discountInvoiced', defaultFlex: 1 },\n  { name: 'discountRefunded', header: 'discountRefunded', defaultFlex: 1 },\n  { name: 'grandTotal', header: 'grandTotal', defaultFlex: 1 },\n  { name: 'shippingAmount', header: 'shippingAmount', defaultFlex: 1 },\n  { name: 'shippingCanceled', header: 'shippingCanceled', defaultFlex: 1 },\n  { name: 'shippingInvoiced', header: 'shippingInvoiced', defaultFlex: 1 },\n  { name: 'shippingRefunded', header: 'shippingRefunded', defaultFlex: 1 },\n  { name: 'shippingTaxAmount', header: 'shippingTaxAmount', defaultFlex: 1 },\n  { name: 'shippingTaxRefunded', header: 'shippingTaxRefunded', defaultFlex: 1 },\n  { name: 'storeToBaseRate', header: 'storeToBaseRate', defaultFlex: 1 },\n  { name: 'storeToOrderRate', header: 'storeToOrderRate', defaultFlex: 1 },\n  { name: 'subtotal', header: 'subtotal', defaultFlex: 1 },\n  { name: 'subtotalCanceled', header: 'subtotalCanceled', defaultFlex: 1 },\n  { name: 'subtotalInvoiced', header: 'subtotalInvoiced', defaultFlex: 1 },\n  { name: 'subtotalRefunded', header: 'subtotalRefunded', defaultFlex: 1 },\n  { name: 'taxAmount', header: 'taxAmount', defaultFlex: 1 },\n  { name: 'taxCanceled', header: 'taxCanceled', defaultFlex: 1 },\n  { name: 'taxInvoiced', header: 'taxInvoiced', defaultFlex: 1 },\n  { name: 'taxRefunded', header: 'taxRefunded', defaultFlex: 1 },\n  { name: 'totalCanceled', header: 'totalCanceled', defaultFlex: 1 },\n  { name: 'totalInvoiced', header: 'totalInvoiced', defaultFlex: 1 },\n  { name: 'totalOfflineRefunded', header: 'totalOfflineRefunded', defaultFlex: 1 },\n  { name: 'totalOnlineRefunded', header: 'totalOnlineRefunded', defaultFlex: 1 },\n  { name: 'totalPaid', header: 'totalPaid', defaultFlex: 1 },\n  { name: 'totalQtyOrdered', header: 'totalQtyOrdered', defaultFlex: 1 },\n  { name: 'totalRefunded', header: 'totalRefunded', defaultFlex: 1 },\n  { name: 'canShipPartially', header: 'canShipPartially', defaultFlex: 1 },\n  { name: 'canShipPartiallyItem', header: 'canShipPartiallyItem', defaultFlex: 1 },\n  { name: 'customerIsGuest', header: 'customerIsGuest', defaultFlex: 1 },\n  { name: 'customerNoteNotify', header: 'customerNoteNotify', defaultFlex: 1 },\n  { name: 'billingAddressId', header: 'billingAddressId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'editIncrement', header: 'editIncrement', defaultFlex: 1 },\n  { name: 'emailSent', header: 'emailSent', defaultFlex: 1 },\n  { name: 'sendEmail', header: 'sendEmail', defaultFlex: 1 },\n  { name: 'forcedShipmentWithInvoice', header: 'forcedShipmentWithInvoice', defaultFlex: 1 },\n  { name: 'paymentAuthExpiration', header: 'paymentAuthExpiration', defaultFlex: 1 },\n  { name: 'quoteAddressId', header: 'quoteAddressId', defaultFlex: 1 },\n  { name: 'quoteId', header: 'quoteId', defaultFlex: 1 },\n  { name: 'shippingAddressId', header: 'shippingAddressId', defaultFlex: 1 },\n  { name: 'adjustmentNegative', header: 'adjustmentNegative', defaultFlex: 1 },\n  { name: 'adjustmentPositive', header: 'adjustmentPositive', defaultFlex: 1 },\n  { name: 'baseAdjustmentNegative', header: 'baseAdjustmentNegative', defaultFlex: 1 },\n  { name: 'baseAdjustmentPositive', header: 'baseAdjustmentPositive', defaultFlex: 1 },\n  { name: 'baseShippingDiscountAmount', header: 'baseShippingDiscountAmount', defaultFlex: 1 },\n  { name: 'baseSubtotalInclTax', header: 'baseSubtotalInclTax', defaultFlex: 1 },\n  { name: 'baseTotalDue', header: 'baseTotalDue', defaultFlex: 1 },\n  { name: 'paymentAuthorizationAmount', header: 'paymentAuthorizationAmount', defaultFlex: 1 },\n  { name: 'shippingDiscountAmount', header: 'shippingDiscountAmount', defaultFlex: 1 },\n  { name: 'subtotalInclTax', header: 'subtotalInclTax', defaultFlex: 1 },\n  { name: 'totalDue', header: 'totalDue', defaultFlex: 1 },\n  { name: 'weight', header: 'weight', defaultFlex: 1 },\n  { name: 'customerDob', header: 'customerDob', defaultFlex: 1 },\n  { name: 'incrementId', header: 'incrementId', defaultFlex: 1 },\n  { name: 'appliedRuleIds', header: 'appliedRuleIds', defaultFlex: 1 },\n  { name: 'baseCurrencyCode', header: 'baseCurrencyCode', defaultFlex: 1 },\n  { name: 'customerEmail', header: 'customerEmail', defaultFlex: 1 },\n  { name: 'customerFirstname', header: 'customerFirstname', defaultFlex: 1 },\n  { name: 'customerLastname', header: 'customerLastname', defaultFlex: 1 },\n  { name: 'customerMiddlename', header: 'customerMiddlename', defaultFlex: 1 },\n  { name: 'customerPrefix', header: 'customerPrefix', defaultFlex: 1 },\n  { name: 'customerSuffix', header: 'customerSuffix', defaultFlex: 1 },\n  { name: 'customerTaxvat', header: 'customerTaxvat', defaultFlex: 1 },\n  { name: 'discountDescription', header: 'discountDescription', defaultFlex: 1 },\n  { name: 'extCustomerId', header: 'extCustomerId', defaultFlex: 1 },\n  { name: 'extOrderId', header: 'extOrderId', defaultFlex: 1 },\n  { name: 'globalCurrencyCode', header: 'globalCurrencyCode', defaultFlex: 1 },\n  { name: 'holdBeforeState', header: 'holdBeforeState', defaultFlex: 1 },\n  { name: 'holdBeforeStatus', header: 'holdBeforeStatus', defaultFlex: 1 },\n  { name: 'orderCurrencyCode', header: 'orderCurrencyCode', defaultFlex: 1 },\n  { name: 'originalIncrementId', header: 'originalIncrementId', defaultFlex: 1 },\n  { name: 'relationChildId', header: 'relationChildId', defaultFlex: 1 },\n  { name: 'relationChildRealId', header: 'relationChildRealId', defaultFlex: 1 },\n  { name: 'relationParentId', header: 'relationParentId', defaultFlex: 1 },\n  { name: 'relationParentRealId', header: 'relationParentRealId', defaultFlex: 1 },\n  { name: 'remoteIp', header: 'remoteIp', defaultFlex: 1 },\n  { name: 'shippingMethod', header: 'shippingMethod', defaultFlex: 1 },\n  { name: 'storeCurrencyCode', header: 'storeCurrencyCode', defaultFlex: 1 },\n  { name: 'storeName', header: 'storeName', defaultFlex: 1 },\n  { name: 'xForwardedFor', header: 'xForwardedFor', defaultFlex: 1 },\n  { name: 'customerNote', header: 'customerNote', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'totalItemCount', header: 'totalItemCount', defaultFlex: 1 },\n  { name: 'customerGender', header: 'customerGender', defaultFlex: 1 },\n  { name: 'discountTaxCompensationAmount', header: 'discountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'baseDiscountTaxCompensationAmount', header: 'baseDiscountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'shippingDiscountTaxCompensationAmount', header: 'shippingDiscountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'baseShippingDiscountTaxCompensationAmnt', header: 'baseShippingDiscountTaxCompensationAmnt', defaultFlex: 1 },\n  { name: 'discountTaxCompensationInvoiced', header: 'discountTaxCompensationInvoiced', defaultFlex: 1 },\n  { name: 'baseDiscountTaxCompensationInvoiced', header: 'baseDiscountTaxCompensationInvoiced', defaultFlex: 1 },\n  { name: 'discountTaxCompensationRefunded', header: 'discountTaxCompensationRefunded', defaultFlex: 1 },\n  { name: 'baseDiscountTaxCompensationRefunded', header: 'baseDiscountTaxCompensationRefunded', defaultFlex: 1 },\n  { name: 'shippingInclTax', header: 'shippingInclTax', defaultFlex: 1 },\n  { name: 'baseShippingInclTax', header: 'baseShippingInclTax', defaultFlex: 1 },\n  { name: 'couponRuleName', header: 'couponRuleName', defaultFlex: 1 },\n  { name: 'giftMessageId', header: 'giftMessageId', defaultFlex: 1 },\n  { name: 'paypalIpnCustomerNotified', header: 'paypalIpnCustomerNotified', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesorder/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesOrder = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesOrder;","/backup/apps/magentotest/ui/src/pages/tables/SalesInvoicedAggregatedOrder.js",["2326"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'ordersCount', header: 'ordersCount', defaultFlex: 1 },\n  { name: 'ordersInvoiced', header: 'ordersInvoiced', defaultFlex: 1 },\n  { name: 'invoiced', header: 'invoiced', defaultFlex: 1 },\n  { name: 'invoicedCaptured', header: 'invoicedCaptured', defaultFlex: 1 },\n  { name: 'invoicedNotCaptured', header: 'invoicedNotCaptured', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesinvoicedaggregatedorder/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesInvoicedAggregatedOrder = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesInvoicedAggregatedOrder;","/backup/apps/magentotest/ui/src/pages/tables/SalesInvoicedAggregated.js",["2327"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'ordersCount', header: 'ordersCount', defaultFlex: 1 },\n  { name: 'ordersInvoiced', header: 'ordersInvoiced', defaultFlex: 1 },\n  { name: 'invoiced', header: 'invoiced', defaultFlex: 1 },\n  { name: 'invoicedCaptured', header: 'invoicedCaptured', defaultFlex: 1 },\n  { name: 'invoicedNotCaptured', header: 'invoicedNotCaptured', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesinvoicedaggregated/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesInvoicedAggregated = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesInvoicedAggregated;","/backup/apps/magentotest/ui/src/pages/tables/SalesInvoiceItem.js",["2328"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'basePrice', header: 'basePrice', defaultFlex: 1 },\n  { name: 'taxAmount', header: 'taxAmount', defaultFlex: 1 },\n  { name: 'baseRowTotal', header: 'baseRowTotal', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n  { name: 'rowTotal', header: 'rowTotal', defaultFlex: 1 },\n  { name: 'baseDiscountAmount', header: 'baseDiscountAmount', defaultFlex: 1 },\n  { name: 'priceInclTax', header: 'priceInclTax', defaultFlex: 1 },\n  { name: 'baseTaxAmount', header: 'baseTaxAmount', defaultFlex: 1 },\n  { name: 'basePriceInclTax', header: 'basePriceInclTax', defaultFlex: 1 },\n  { name: 'qty', header: 'qty', defaultFlex: 1 },\n  { name: 'baseCost', header: 'baseCost', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'baseRowTotalInclTax', header: 'baseRowTotalInclTax', defaultFlex: 1 },\n  { name: 'rowTotalInclTax', header: 'rowTotalInclTax', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'orderItemId', header: 'orderItemId', defaultFlex: 1 },\n  { name: 'additionalData', header: 'additionalData', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'sku', header: 'sku', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'discountTaxCompensationAmount', header: 'discountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'baseDiscountTaxCompensationAmount', header: 'baseDiscountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'taxRatio', header: 'taxRatio', defaultFlex: 1 },\n  { name: 'weeeTaxApplied', header: 'weeeTaxApplied', defaultFlex: 1 },\n  { name: 'weeeTaxAppliedAmount', header: 'weeeTaxAppliedAmount', defaultFlex: 1 },\n  { name: 'weeeTaxAppliedRowAmount', header: 'weeeTaxAppliedRowAmount', defaultFlex: 1 },\n  { name: 'weeeTaxDisposition', header: 'weeeTaxDisposition', defaultFlex: 1 },\n  { name: 'weeeTaxRowDisposition', header: 'weeeTaxRowDisposition', defaultFlex: 1 },\n  { name: 'baseWeeeTaxAppliedAmount', header: 'baseWeeeTaxAppliedAmount', defaultFlex: 1 },\n  { name: 'baseWeeeTaxAppliedRowAmnt', header: 'baseWeeeTaxAppliedRowAmnt', defaultFlex: 1 },\n  { name: 'baseWeeeTaxDisposition', header: 'baseWeeeTaxDisposition', defaultFlex: 1 },\n  { name: 'baseWeeeTaxRowDisposition', header: 'baseWeeeTaxRowDisposition', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesinvoiceitem/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesInvoiceItem = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesInvoiceItem;","/backup/apps/magentotest/ui/src/pages/tables/SalesInvoiceGrid.js",["2329"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'incrementId', header: 'incrementId', defaultFlex: 1 },\n  { name: 'state', header: 'state', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'storeName', header: 'storeName', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'orderIncrementId', header: 'orderIncrementId', defaultFlex: 1 },\n  { name: 'orderCreatedAt', header: 'orderCreatedAt', defaultFlex: 1 },\n  { name: 'customerName', header: 'customerName', defaultFlex: 1 },\n  { name: 'customerEmail', header: 'customerEmail', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'paymentMethod', header: 'paymentMethod', defaultFlex: 1 },\n  { name: 'storeCurrencyCode', header: 'storeCurrencyCode', defaultFlex: 1 },\n  { name: 'orderCurrencyCode', header: 'orderCurrencyCode', defaultFlex: 1 },\n  { name: 'baseCurrencyCode', header: 'baseCurrencyCode', defaultFlex: 1 },\n  { name: 'globalCurrencyCode', header: 'globalCurrencyCode', defaultFlex: 1 },\n  { name: 'billingName', header: 'billingName', defaultFlex: 1 },\n  { name: 'billingAddress', header: 'billingAddress', defaultFlex: 1 },\n  { name: 'shippingAddress', header: 'shippingAddress', defaultFlex: 1 },\n  { name: 'shippingInformation', header: 'shippingInformation', defaultFlex: 1 },\n  { name: 'subtotal', header: 'subtotal', defaultFlex: 1 },\n  { name: 'shippingAndHandling', header: 'shippingAndHandling', defaultFlex: 1 },\n  { name: 'grandTotal', header: 'grandTotal', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'baseGrandTotal', header: 'baseGrandTotal', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesinvoicegrid/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesInvoiceGrid = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesInvoiceGrid;","/backup/apps/magentotest/ui/src/pages/tables/SalesInvoiceComment.js",["2330"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'isCustomerNotified', header: 'isCustomerNotified', defaultFlex: 1 },\n  { name: 'isVisibleOnFront', header: 'isVisibleOnFront', defaultFlex: 1 },\n  { name: 'comment', header: 'comment', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesinvoicecomment/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesInvoiceComment = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesInvoiceComment;","/backup/apps/magentotest/ui/src/pages/tables/SalesInvoice.js",["2331"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'baseGrandTotal', header: 'baseGrandTotal', defaultFlex: 1 },\n  { name: 'shippingTaxAmount', header: 'shippingTaxAmount', defaultFlex: 1 },\n  { name: 'taxAmount', header: 'taxAmount', defaultFlex: 1 },\n  { name: 'baseTaxAmount', header: 'baseTaxAmount', defaultFlex: 1 },\n  { name: 'storeToOrderRate', header: 'storeToOrderRate', defaultFlex: 1 },\n  { name: 'baseShippingTaxAmount', header: 'baseShippingTaxAmount', defaultFlex: 1 },\n  { name: 'baseDiscountAmount', header: 'baseDiscountAmount', defaultFlex: 1 },\n  { name: 'baseToOrderRate', header: 'baseToOrderRate', defaultFlex: 1 },\n  { name: 'grandTotal', header: 'grandTotal', defaultFlex: 1 },\n  { name: 'shippingAmount', header: 'shippingAmount', defaultFlex: 1 },\n  { name: 'subtotalInclTax', header: 'subtotalInclTax', defaultFlex: 1 },\n  { name: 'baseSubtotalInclTax', header: 'baseSubtotalInclTax', defaultFlex: 1 },\n  { name: 'storeToBaseRate', header: 'storeToBaseRate', defaultFlex: 1 },\n  { name: 'baseShippingAmount', header: 'baseShippingAmount', defaultFlex: 1 },\n  { name: 'totalQty', header: 'totalQty', defaultFlex: 1 },\n  { name: 'baseToGlobalRate', header: 'baseToGlobalRate', defaultFlex: 1 },\n  { name: 'subtotal', header: 'subtotal', defaultFlex: 1 },\n  { name: 'baseSubtotal', header: 'baseSubtotal', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n  { name: 'billingAddressId', header: 'billingAddressId', defaultFlex: 1 },\n  { name: 'isUsedForRefund', header: 'isUsedForRefund', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'emailSent', header: 'emailSent', defaultFlex: 1 },\n  { name: 'sendEmail', header: 'sendEmail', defaultFlex: 1 },\n  { name: 'canVoidFlag', header: 'canVoidFlag', defaultFlex: 1 },\n  { name: 'state', header: 'state', defaultFlex: 1 },\n  { name: 'shippingAddressId', header: 'shippingAddressId', defaultFlex: 1 },\n  { name: 'storeCurrencyCode', header: 'storeCurrencyCode', defaultFlex: 1 },\n  { name: 'transactionId', header: 'transactionId', defaultFlex: 1 },\n  { name: 'orderCurrencyCode', header: 'orderCurrencyCode', defaultFlex: 1 },\n  { name: 'baseCurrencyCode', header: 'baseCurrencyCode', defaultFlex: 1 },\n  { name: 'globalCurrencyCode', header: 'globalCurrencyCode', defaultFlex: 1 },\n  { name: 'incrementId', header: 'incrementId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'discountTaxCompensationAmount', header: 'discountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'baseDiscountTaxCompensationAmount', header: 'baseDiscountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'shippingDiscountTaxCompensationAmount', header: 'shippingDiscountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'baseShippingDiscountTaxCompensationAmnt', header: 'baseShippingDiscountTaxCompensationAmnt', defaultFlex: 1 },\n  { name: 'shippingInclTax', header: 'shippingInclTax', defaultFlex: 1 },\n  { name: 'baseShippingInclTax', header: 'baseShippingInclTax', defaultFlex: 1 },\n  { name: 'baseTotalRefunded', header: 'baseTotalRefunded', defaultFlex: 1 },\n  { name: 'discountDescription', header: 'discountDescription', defaultFlex: 1 },\n  { name: 'customerNote', header: 'customerNote', defaultFlex: 1 },\n  { name: 'customerNoteNotify', header: 'customerNoteNotify', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesinvoice/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesInvoice = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesInvoice;","/backup/apps/magentotest/ui/src/pages/tables/SalesCreditmemoItem.js",["2332"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'basePrice', header: 'basePrice', defaultFlex: 1 },\n  { name: 'taxAmount', header: 'taxAmount', defaultFlex: 1 },\n  { name: 'baseRowTotal', header: 'baseRowTotal', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n  { name: 'rowTotal', header: 'rowTotal', defaultFlex: 1 },\n  { name: 'baseDiscountAmount', header: 'baseDiscountAmount', defaultFlex: 1 },\n  { name: 'priceInclTax', header: 'priceInclTax', defaultFlex: 1 },\n  { name: 'baseTaxAmount', header: 'baseTaxAmount', defaultFlex: 1 },\n  { name: 'basePriceInclTax', header: 'basePriceInclTax', defaultFlex: 1 },\n  { name: 'qty', header: 'qty', defaultFlex: 1 },\n  { name: 'baseCost', header: 'baseCost', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'baseRowTotalInclTax', header: 'baseRowTotalInclTax', defaultFlex: 1 },\n  { name: 'rowTotalInclTax', header: 'rowTotalInclTax', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'orderItemId', header: 'orderItemId', defaultFlex: 1 },\n  { name: 'additionalData', header: 'additionalData', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'sku', header: 'sku', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'discountTaxCompensationAmount', header: 'discountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'baseDiscountTaxCompensationAmount', header: 'baseDiscountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'taxRatio', header: 'taxRatio', defaultFlex: 1 },\n  { name: 'weeeTaxApplied', header: 'weeeTaxApplied', defaultFlex: 1 },\n  { name: 'weeeTaxAppliedAmount', header: 'weeeTaxAppliedAmount', defaultFlex: 1 },\n  { name: 'weeeTaxAppliedRowAmount', header: 'weeeTaxAppliedRowAmount', defaultFlex: 1 },\n  { name: 'weeeTaxDisposition', header: 'weeeTaxDisposition', defaultFlex: 1 },\n  { name: 'weeeTaxRowDisposition', header: 'weeeTaxRowDisposition', defaultFlex: 1 },\n  { name: 'baseWeeeTaxAppliedAmount', header: 'baseWeeeTaxAppliedAmount', defaultFlex: 1 },\n  { name: 'baseWeeeTaxAppliedRowAmnt', header: 'baseWeeeTaxAppliedRowAmnt', defaultFlex: 1 },\n  { name: 'baseWeeeTaxDisposition', header: 'baseWeeeTaxDisposition', defaultFlex: 1 },\n  { name: 'baseWeeeTaxRowDisposition', header: 'baseWeeeTaxRowDisposition', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salescreditmemoitem/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesCreditmemoItem = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesCreditmemoItem;","/backup/apps/magentotest/ui/src/pages/tables/SalesCreditmemoGrid.js",["2333"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'incrementId', header: 'incrementId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'orderIncrementId', header: 'orderIncrementId', defaultFlex: 1 },\n  { name: 'orderCreatedAt', header: 'orderCreatedAt', defaultFlex: 1 },\n  { name: 'billingName', header: 'billingName', defaultFlex: 1 },\n  { name: 'state', header: 'state', defaultFlex: 1 },\n  { name: 'baseGrandTotal', header: 'baseGrandTotal', defaultFlex: 1 },\n  { name: 'orderStatus', header: 'orderStatus', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'billingAddress', header: 'billingAddress', defaultFlex: 1 },\n  { name: 'shippingAddress', header: 'shippingAddress', defaultFlex: 1 },\n  { name: 'customerName', header: 'customerName', defaultFlex: 1 },\n  { name: 'customerEmail', header: 'customerEmail', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'paymentMethod', header: 'paymentMethod', defaultFlex: 1 },\n  { name: 'shippingInformation', header: 'shippingInformation', defaultFlex: 1 },\n  { name: 'subtotal', header: 'subtotal', defaultFlex: 1 },\n  { name: 'shippingAndHandling', header: 'shippingAndHandling', defaultFlex: 1 },\n  { name: 'adjustmentPositive', header: 'adjustmentPositive', defaultFlex: 1 },\n  { name: 'adjustmentNegative', header: 'adjustmentNegative', defaultFlex: 1 },\n  { name: 'orderBaseGrandTotal', header: 'orderBaseGrandTotal', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salescreditmemogrid/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesCreditmemoGrid = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesCreditmemoGrid;","/backup/apps/magentotest/ui/src/pages/tables/SalesCreditmemoComment.js",["2334"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'parentId', header: 'parentId', defaultFlex: 1 },\n  { name: 'isCustomerNotified', header: 'isCustomerNotified', defaultFlex: 1 },\n  { name: 'isVisibleOnFront', header: 'isVisibleOnFront', defaultFlex: 1 },\n  { name: 'comment', header: 'comment', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salescreditmemocomment/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesCreditmemoComment = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesCreditmemoComment;","/backup/apps/magentotest/ui/src/pages/tables/SalesCreditmemo.js",["2335"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'adjustmentPositive', header: 'adjustmentPositive', defaultFlex: 1 },\n  { name: 'baseShippingTaxAmount', header: 'baseShippingTaxAmount', defaultFlex: 1 },\n  { name: 'storeToOrderRate', header: 'storeToOrderRate', defaultFlex: 1 },\n  { name: 'baseDiscountAmount', header: 'baseDiscountAmount', defaultFlex: 1 },\n  { name: 'baseToOrderRate', header: 'baseToOrderRate', defaultFlex: 1 },\n  { name: 'grandTotal', header: 'grandTotal', defaultFlex: 1 },\n  { name: 'baseAdjustmentNegative', header: 'baseAdjustmentNegative', defaultFlex: 1 },\n  { name: 'baseSubtotalInclTax', header: 'baseSubtotalInclTax', defaultFlex: 1 },\n  { name: 'shippingAmount', header: 'shippingAmount', defaultFlex: 1 },\n  { name: 'subtotalInclTax', header: 'subtotalInclTax', defaultFlex: 1 },\n  { name: 'adjustmentNegative', header: 'adjustmentNegative', defaultFlex: 1 },\n  { name: 'baseShippingAmount', header: 'baseShippingAmount', defaultFlex: 1 },\n  { name: 'storeToBaseRate', header: 'storeToBaseRate', defaultFlex: 1 },\n  { name: 'baseToGlobalRate', header: 'baseToGlobalRate', defaultFlex: 1 },\n  { name: 'baseAdjustment', header: 'baseAdjustment', defaultFlex: 1 },\n  { name: 'baseSubtotal', header: 'baseSubtotal', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n  { name: 'subtotal', header: 'subtotal', defaultFlex: 1 },\n  { name: 'adjustment', header: 'adjustment', defaultFlex: 1 },\n  { name: 'baseGrandTotal', header: 'baseGrandTotal', defaultFlex: 1 },\n  { name: 'baseAdjustmentPositive', header: 'baseAdjustmentPositive', defaultFlex: 1 },\n  { name: 'baseTaxAmount', header: 'baseTaxAmount', defaultFlex: 1 },\n  { name: 'shippingTaxAmount', header: 'shippingTaxAmount', defaultFlex: 1 },\n  { name: 'taxAmount', header: 'taxAmount', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'emailSent', header: 'emailSent', defaultFlex: 1 },\n  { name: 'sendEmail', header: 'sendEmail', defaultFlex: 1 },\n  { name: 'creditmemoStatus', header: 'creditmemoStatus', defaultFlex: 1 },\n  { name: 'state', header: 'state', defaultFlex: 1 },\n  { name: 'shippingAddressId', header: 'shippingAddressId', defaultFlex: 1 },\n  { name: 'billingAddressId', header: 'billingAddressId', defaultFlex: 1 },\n  { name: 'invoiceId', header: 'invoiceId', defaultFlex: 1 },\n  { name: 'storeCurrencyCode', header: 'storeCurrencyCode', defaultFlex: 1 },\n  { name: 'orderCurrencyCode', header: 'orderCurrencyCode', defaultFlex: 1 },\n  { name: 'baseCurrencyCode', header: 'baseCurrencyCode', defaultFlex: 1 },\n  { name: 'globalCurrencyCode', header: 'globalCurrencyCode', defaultFlex: 1 },\n  { name: 'transactionId', header: 'transactionId', defaultFlex: 1 },\n  { name: 'incrementId', header: 'incrementId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'discountTaxCompensationAmount', header: 'discountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'baseDiscountTaxCompensationAmount', header: 'baseDiscountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'shippingDiscountTaxCompensationAmount', header: 'shippingDiscountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'baseShippingDiscountTaxCompensationAmnt', header: 'baseShippingDiscountTaxCompensationAmnt', defaultFlex: 1 },\n  { name: 'shippingInclTax', header: 'shippingInclTax', defaultFlex: 1 },\n  { name: 'baseShippingInclTax', header: 'baseShippingInclTax', defaultFlex: 1 },\n  { name: 'discountDescription', header: 'discountDescription', defaultFlex: 1 },\n  { name: 'customerNote', header: 'customerNote', defaultFlex: 1 },\n  { name: 'customerNoteNotify', header: 'customerNoteNotify', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salescreditmemo/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesCreditmemo = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesCreditmemo;","/backup/apps/magentotest/ui/src/pages/tables/SalesBestsellersAggregatedYearly.js",["2336"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'productName', header: 'productName', defaultFlex: 1 },\n  { name: 'productPrice', header: 'productPrice', defaultFlex: 1 },\n  { name: 'qtyOrdered', header: 'qtyOrdered', defaultFlex: 1 },\n  { name: 'ratingPos', header: 'ratingPos', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesbestsellersaggregatedyearly/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesBestsellersAggregatedYearly = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesBestsellersAggregatedYearly;","/backup/apps/magentotest/ui/src/pages/tables/SalesBestsellersAggregatedMonthly.js",["2337"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'productName', header: 'productName', defaultFlex: 1 },\n  { name: 'productPrice', header: 'productPrice', defaultFlex: 1 },\n  { name: 'qtyOrdered', header: 'qtyOrdered', defaultFlex: 1 },\n  { name: 'ratingPos', header: 'ratingPos', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesbestsellersaggregatedmonthly/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesBestsellersAggregatedMonthly = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesBestsellersAggregatedMonthly;","/backup/apps/magentotest/ui/src/pages/tables/SalesBestsellersAggregatedDaily.js",["2338"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'productName', header: 'productName', defaultFlex: 1 },\n  { name: 'productPrice', header: 'productPrice', defaultFlex: 1 },\n  { name: 'qtyOrdered', header: 'qtyOrdered', defaultFlex: 1 },\n  { name: 'ratingPos', header: 'ratingPos', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'salesbestsellersaggregateddaily/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst SalesBestsellersAggregatedDaily = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default SalesBestsellersAggregatedDaily;","/backup/apps/magentotest/ui/src/pages/tables/ReviewStore.js",["2339"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'reviewId', header: 'reviewId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reviewstore/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReviewStore = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReviewStore;","/backup/apps/magentotest/ui/src/pages/tables/ReviewEntitySummary.js",["2340"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'primaryId', header: 'primaryId', defaultFlex: 1 },\n  { name: 'entityPkValue', header: 'entityPkValue', defaultFlex: 1 },\n  { name: 'entityType', header: 'entityType', defaultFlex: 1 },\n  { name: 'reviewsCount', header: 'reviewsCount', defaultFlex: 1 },\n  { name: 'ratingSummary', header: 'ratingSummary', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reviewentitysummary/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReviewEntitySummary = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReviewEntitySummary;","/backup/apps/magentotest/ui/src/pages/tables/ReviewStatus.js",["2341"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'statusId', header: 'statusId', defaultFlex: 1 },\n  { name: 'statusCode', header: 'statusCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reviewstatus/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReviewStatus = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReviewStatus;","/backup/apps/magentotest/ui/src/pages/tables/ReviewEntity.js",["2342"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'entityCode', header: 'entityCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reviewentity/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReviewEntity = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReviewEntity;","/backup/apps/magentotest/ui/src/pages/tables/ReviewDetail.js",["2343"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'detailId', header: 'detailId', defaultFlex: 1 },\n  { name: 'reviewId', header: 'reviewId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'title', header: 'title', defaultFlex: 1 },\n  { name: 'detail', header: 'detail', defaultFlex: 1 },\n  { name: 'nickname', header: 'nickname', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reviewdetail/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReviewDetail = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReviewDetail;","/backup/apps/magentotest/ui/src/pages/tables/Review.js",["2344"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'reviewId', header: 'reviewId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'entityPkValue', header: 'entityPkValue', defaultFlex: 1 },\n  { name: 'statusId', header: 'statusId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'review/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Review = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Review;","/backup/apps/magentotest/ui/src/pages/tables/ReportingUsers.js",["2345"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'type', header: 'type', defaultFlex: 1 },\n  { name: 'action', header: 'action', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reportingusers/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReportingUsers = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReportingUsers;","/backup/apps/magentotest/ui/src/pages/tables/ReportingSystemUpdates.js",["2346"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'type', header: 'type', defaultFlex: 1 },\n  { name: 'action', header: 'action', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reportingsystemupdates/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReportingSystemUpdates = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReportingSystemUpdates;","/backup/apps/magentotest/ui/src/pages/tables/ReportingOrders.js",["2347"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'total', header: 'total', defaultFlex: 1 },\n  { name: 'totalBase', header: 'totalBase', defaultFlex: 1 },\n  { name: 'itemCount', header: 'itemCount', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reportingorders/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReportingOrders = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReportingOrders;","/backup/apps/magentotest/ui/src/pages/tables/ReportingModuleStatus.js",["2348"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'active', header: 'active', defaultFlex: 1 },\n  { name: 'setupVersion', header: 'setupVersion', defaultFlex: 1 },\n  { name: 'state', header: 'state', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reportingmodulestatus/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReportingModuleStatus = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReportingModuleStatus;","/backup/apps/magentotest/ui/src/pages/tables/ReportingCounts.js",["2349"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'type', header: 'type', defaultFlex: 1 },\n  { name: 'count', header: 'count', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reportingcounts/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReportingCounts = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReportingCounts;","/backup/apps/magentotest/ui/src/pages/tables/ReportViewedProductIndex.js",["2350"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'indexId', header: 'indexId', defaultFlex: 1 },\n  { name: 'visitorId', header: 'visitorId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'addedAt', header: 'addedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reportviewedproductindex/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReportViewedProductIndex = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReportViewedProductIndex;","/backup/apps/magentotest/ui/src/pages/tables/ReportViewedProductAggregatedYearly.js",["2351"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'productName', header: 'productName', defaultFlex: 1 },\n  { name: 'productPrice', header: 'productPrice', defaultFlex: 1 },\n  { name: 'viewsNum', header: 'viewsNum', defaultFlex: 1 },\n  { name: 'ratingPos', header: 'ratingPos', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reportviewedproductaggregatedyearly/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReportViewedProductAggregatedYearly = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReportViewedProductAggregatedYearly;","/backup/apps/magentotest/ui/src/pages/tables/ReportViewedProductAggregatedMonthly.js",["2352"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'productName', header: 'productName', defaultFlex: 1 },\n  { name: 'productPrice', header: 'productPrice', defaultFlex: 1 },\n  { name: 'viewsNum', header: 'viewsNum', defaultFlex: 1 },\n  { name: 'ratingPos', header: 'ratingPos', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reportviewedproductaggregatedmonthly/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReportViewedProductAggregatedMonthly = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReportViewedProductAggregatedMonthly;","/backup/apps/magentotest/ui/src/pages/tables/ReportViewedProductAggregatedDaily.js",["2353"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'period', header: 'period', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'productName', header: 'productName', defaultFlex: 1 },\n  { name: 'productPrice', header: 'productPrice', defaultFlex: 1 },\n  { name: 'viewsNum', header: 'viewsNum', defaultFlex: 1 },\n  { name: 'ratingPos', header: 'ratingPos', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reportviewedproductaggregateddaily/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReportViewedProductAggregatedDaily = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReportViewedProductAggregatedDaily;","/backup/apps/magentotest/ui/src/pages/tables/ReportEventTypes.js",["2354"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'eventTypeId', header: 'eventTypeId', defaultFlex: 1 },\n  { name: 'eventName', header: 'eventName', defaultFlex: 1 },\n  { name: 'customerLogin', header: 'customerLogin', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reporteventtypes/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReportEventTypes = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReportEventTypes;","/backup/apps/magentotest/ui/src/pages/tables/ReportEvent.js",["2355"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'eventId', header: 'eventId', defaultFlex: 1 },\n  { name: 'loggedAt', header: 'loggedAt', defaultFlex: 1 },\n  { name: 'eventTypeId', header: 'eventTypeId', defaultFlex: 1 },\n  { name: 'objectId', header: 'objectId', defaultFlex: 1 },\n  { name: 'subjectId', header: 'subjectId', defaultFlex: 1 },\n  { name: 'subtype', header: 'subtype', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reportevent/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReportEvent = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReportEvent;","/backup/apps/magentotest/ui/src/pages/tables/ReportComparedProductIndex.js",["2356"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'indexId', header: 'indexId', defaultFlex: 1 },\n  { name: 'visitorId', header: 'visitorId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'addedAt', header: 'addedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'reportcomparedproductindex/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReportComparedProductIndex = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReportComparedProductIndex;","/backup/apps/magentotest/ui/src/pages/tables/ReleaseNotificationViewerLog.js",["2357"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'viewerId', header: 'viewerId', defaultFlex: 1 },\n  { name: 'lastViewVersion', header: 'lastViewVersion', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'releasenotificationviewerlog/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ReleaseNotificationViewerLog = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ReleaseNotificationViewerLog;","/backup/apps/magentotest/ui/src/pages/tables/RatingTitle.js",["2358"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ratingId', header: 'ratingId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'ratingtitle/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst RatingTitle = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default RatingTitle;","/backup/apps/magentotest/ui/src/pages/tables/RatingStore.js",["2359"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ratingId', header: 'ratingId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'ratingstore/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst RatingStore = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default RatingStore;","/backup/apps/magentotest/ui/src/pages/tables/RatingOptionVoteAggregated.js",["2360"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'primaryId', header: 'primaryId', defaultFlex: 1 },\n  { name: 'ratingId', header: 'ratingId', defaultFlex: 1 },\n  { name: 'entityPkValue', header: 'entityPkValue', defaultFlex: 1 },\n  { name: 'voteCount', header: 'voteCount', defaultFlex: 1 },\n  { name: 'voteValueSum', header: 'voteValueSum', defaultFlex: 1 },\n  { name: 'percent', header: 'percent', defaultFlex: 1 },\n  { name: 'percentApproved', header: 'percentApproved', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'ratingoptionvoteaggregated/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst RatingOptionVoteAggregated = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default RatingOptionVoteAggregated;","/backup/apps/magentotest/ui/src/pages/tables/RatingOptionVote.js",["2361"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'voteId', header: 'voteId', defaultFlex: 1 },\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'remoteIp', header: 'remoteIp', defaultFlex: 1 },\n  { name: 'remoteIpLong', header: 'remoteIpLong', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'entityPkValue', header: 'entityPkValue', defaultFlex: 1 },\n  { name: 'ratingId', header: 'ratingId', defaultFlex: 1 },\n  { name: 'reviewId', header: 'reviewId', defaultFlex: 1 },\n  { name: 'percent', header: 'percent', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'ratingoptionvote/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst RatingOptionVote = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default RatingOptionVote;","/backup/apps/magentotest/ui/src/pages/tables/RatingOption.js",["2362"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'ratingId', header: 'ratingId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'ratingoption/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst RatingOption = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default RatingOption;","/backup/apps/magentotest/ui/src/pages/tables/RatingEntity.js",["2363"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'entityCode', header: 'entityCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'ratingentity/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst RatingEntity = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default RatingEntity;","/backup/apps/magentotest/ui/src/pages/tables/Rating.js",["2364"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'ratingId', header: 'ratingId', defaultFlex: 1 },\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'ratingCode', header: 'ratingCode', defaultFlex: 1 },\n  { name: 'position', header: 'position', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'rating/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Rating = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Rating;","/backup/apps/magentotest/ui/src/pages/tables/QuoteShippingRate.js",["2365"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'rateId', header: 'rateId', defaultFlex: 1 },\n  { name: 'addressId', header: 'addressId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'carrier', header: 'carrier', defaultFlex: 1 },\n  { name: 'carrierTitle', header: 'carrierTitle', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'method', header: 'method', defaultFlex: 1 },\n  { name: 'methodDescription', header: 'methodDescription', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'errorMessage', header: 'errorMessage', defaultFlex: 1 },\n  { name: 'methodTitle', header: 'methodTitle', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'quoteshippingrate/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst QuoteShippingRate = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default QuoteShippingRate;","/backup/apps/magentotest/ui/src/pages/tables/QuotePayment.js",["2366"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'paymentId', header: 'paymentId', defaultFlex: 1 },\n  { name: 'quoteId', header: 'quoteId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'method', header: 'method', defaultFlex: 1 },\n  { name: 'ccType', header: 'ccType', defaultFlex: 1 },\n  { name: 'ccNumberEnc', header: 'ccNumberEnc', defaultFlex: 1 },\n  { name: 'ccLast4', header: 'ccLast4', defaultFlex: 1 },\n  { name: 'ccCidEnc', header: 'ccCidEnc', defaultFlex: 1 },\n  { name: 'ccOwner', header: 'ccOwner', defaultFlex: 1 },\n  { name: 'ccExpMonth', header: 'ccExpMonth', defaultFlex: 1 },\n  { name: 'ccExpYear', header: 'ccExpYear', defaultFlex: 1 },\n  { name: 'ccSsOwner', header: 'ccSsOwner', defaultFlex: 1 },\n  { name: 'ccSsStartMonth', header: 'ccSsStartMonth', defaultFlex: 1 },\n  { name: 'ccSsStartYear', header: 'ccSsStartYear', defaultFlex: 1 },\n  { name: 'poNumber', header: 'poNumber', defaultFlex: 1 },\n  { name: 'additionalData', header: 'additionalData', defaultFlex: 1 },\n  { name: 'ccSsIssue', header: 'ccSsIssue', defaultFlex: 1 },\n  { name: 'additionalInformation', header: 'additionalInformation', defaultFlex: 1 },\n  { name: 'paypalPayerId', header: 'paypalPayerId', defaultFlex: 1 },\n  { name: 'paypalPayerStatus', header: 'paypalPayerStatus', defaultFlex: 1 },\n  { name: 'paypalCorrelationId', header: 'paypalCorrelationId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'quotepayment/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst QuotePayment = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default QuotePayment;","/backup/apps/magentotest/ui/src/pages/tables/QuoteItemOption.js",["2367"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'optionId', header: 'optionId', defaultFlex: 1 },\n  { name: 'itemId', header: 'itemId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'value', header: 'value', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'quoteitemoption/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst QuoteItemOption = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default QuoteItemOption;","/backup/apps/magentotest/ui/src/pages/tables/QuoteItem.js",["2368"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'itemId', header: 'itemId', defaultFlex: 1 },\n  { name: 'quoteId', header: 'quoteId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'parentItemId', header: 'parentItemId', defaultFlex: 1 },\n  { name: 'isVirtual', header: 'isVirtual', defaultFlex: 1 },\n  { name: 'sku', header: 'sku', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'appliedRuleIds', header: 'appliedRuleIds', defaultFlex: 1 },\n  { name: 'additionalData', header: 'additionalData', defaultFlex: 1 },\n  { name: 'isQtyDecimal', header: 'isQtyDecimal', defaultFlex: 1 },\n  { name: 'noDiscount', header: 'noDiscount', defaultFlex: 1 },\n  { name: 'weight', header: 'weight', defaultFlex: 1 },\n  { name: 'qty', header: 'qty', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'basePrice', header: 'basePrice', defaultFlex: 1 },\n  { name: 'customPrice', header: 'customPrice', defaultFlex: 1 },\n  { name: 'discountPercent', header: 'discountPercent', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n  { name: 'baseDiscountAmount', header: 'baseDiscountAmount', defaultFlex: 1 },\n  { name: 'taxPercent', header: 'taxPercent', defaultFlex: 1 },\n  { name: 'taxAmount', header: 'taxAmount', defaultFlex: 1 },\n  { name: 'baseTaxAmount', header: 'baseTaxAmount', defaultFlex: 1 },\n  { name: 'rowTotal', header: 'rowTotal', defaultFlex: 1 },\n  { name: 'baseRowTotal', header: 'baseRowTotal', defaultFlex: 1 },\n  { name: 'rowTotalWithDiscount', header: 'rowTotalWithDiscount', defaultFlex: 1 },\n  { name: 'rowWeight', header: 'rowWeight', defaultFlex: 1 },\n  { name: 'productType', header: 'productType', defaultFlex: 1 },\n  { name: 'baseTaxBeforeDiscount', header: 'baseTaxBeforeDiscount', defaultFlex: 1 },\n  { name: 'taxBeforeDiscount', header: 'taxBeforeDiscount', defaultFlex: 1 },\n  { name: 'originalCustomPrice', header: 'originalCustomPrice', defaultFlex: 1 },\n  { name: 'redirectUrl', header: 'redirectUrl', defaultFlex: 1 },\n  { name: 'baseCost', header: 'baseCost', defaultFlex: 1 },\n  { name: 'priceInclTax', header: 'priceInclTax', defaultFlex: 1 },\n  { name: 'basePriceInclTax', header: 'basePriceInclTax', defaultFlex: 1 },\n  { name: 'rowTotalInclTax', header: 'rowTotalInclTax', defaultFlex: 1 },\n  { name: 'baseRowTotalInclTax', header: 'baseRowTotalInclTax', defaultFlex: 1 },\n  { name: 'discountTaxCompensationAmount', header: 'discountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'baseDiscountTaxCompensationAmount', header: 'baseDiscountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'giftMessageId', header: 'giftMessageId', defaultFlex: 1 },\n  { name: 'freeShipping', header: 'freeShipping', defaultFlex: 1 },\n  { name: 'weeeTaxApplied', header: 'weeeTaxApplied', defaultFlex: 1 },\n  { name: 'weeeTaxAppliedAmount', header: 'weeeTaxAppliedAmount', defaultFlex: 1 },\n  { name: 'weeeTaxAppliedRowAmount', header: 'weeeTaxAppliedRowAmount', defaultFlex: 1 },\n  { name: 'weeeTaxDisposition', header: 'weeeTaxDisposition', defaultFlex: 1 },\n  { name: 'weeeTaxRowDisposition', header: 'weeeTaxRowDisposition', defaultFlex: 1 },\n  { name: 'baseWeeeTaxAppliedAmount', header: 'baseWeeeTaxAppliedAmount', defaultFlex: 1 },\n  { name: 'baseWeeeTaxAppliedRowAmnt', header: 'baseWeeeTaxAppliedRowAmnt', defaultFlex: 1 },\n  { name: 'baseWeeeTaxDisposition', header: 'baseWeeeTaxDisposition', defaultFlex: 1 },\n  { name: 'baseWeeeTaxRowDisposition', header: 'baseWeeeTaxRowDisposition', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'quoteitem/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst QuoteItem = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default QuoteItem;","/backup/apps/magentotest/ui/src/pages/tables/QuoteIdMask.js",["2369"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'quoteId', header: 'quoteId', defaultFlex: 1 },\n  { name: 'maskedId', header: 'maskedId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'quoteidmask/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst QuoteIdMask = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default QuoteIdMask;","/backup/apps/magentotest/ui/src/pages/tables/QuoteAddressItem.js",["2370"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'addressItemId', header: 'addressItemId', defaultFlex: 1 },\n  { name: 'parentItemId', header: 'parentItemId', defaultFlex: 1 },\n  { name: 'quoteAddressId', header: 'quoteAddressId', defaultFlex: 1 },\n  { name: 'quoteItemId', header: 'quoteItemId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'appliedRuleIds', header: 'appliedRuleIds', defaultFlex: 1 },\n  { name: 'additionalData', header: 'additionalData', defaultFlex: 1 },\n  { name: 'weight', header: 'weight', defaultFlex: 1 },\n  { name: 'qty', header: 'qty', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n  { name: 'taxAmount', header: 'taxAmount', defaultFlex: 1 },\n  { name: 'rowTotal', header: 'rowTotal', defaultFlex: 1 },\n  { name: 'baseRowTotal', header: 'baseRowTotal', defaultFlex: 1 },\n  { name: 'rowTotalWithDiscount', header: 'rowTotalWithDiscount', defaultFlex: 1 },\n  { name: 'baseDiscountAmount', header: 'baseDiscountAmount', defaultFlex: 1 },\n  { name: 'baseTaxAmount', header: 'baseTaxAmount', defaultFlex: 1 },\n  { name: 'rowWeight', header: 'rowWeight', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'superProductId', header: 'superProductId', defaultFlex: 1 },\n  { name: 'parentProductId', header: 'parentProductId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'sku', header: 'sku', defaultFlex: 1 },\n  { name: 'image', header: 'image', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'isQtyDecimal', header: 'isQtyDecimal', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'discountPercent', header: 'discountPercent', defaultFlex: 1 },\n  { name: 'noDiscount', header: 'noDiscount', defaultFlex: 1 },\n  { name: 'taxPercent', header: 'taxPercent', defaultFlex: 1 },\n  { name: 'basePrice', header: 'basePrice', defaultFlex: 1 },\n  { name: 'baseCost', header: 'baseCost', defaultFlex: 1 },\n  { name: 'priceInclTax', header: 'priceInclTax', defaultFlex: 1 },\n  { name: 'basePriceInclTax', header: 'basePriceInclTax', defaultFlex: 1 },\n  { name: 'rowTotalInclTax', header: 'rowTotalInclTax', defaultFlex: 1 },\n  { name: 'baseRowTotalInclTax', header: 'baseRowTotalInclTax', defaultFlex: 1 },\n  { name: 'discountTaxCompensationAmount', header: 'discountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'baseDiscountTaxCompensationAmount', header: 'baseDiscountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'giftMessageId', header: 'giftMessageId', defaultFlex: 1 },\n  { name: 'freeShipping', header: 'freeShipping', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'quoteaddressitem/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst QuoteAddressItem = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default QuoteAddressItem;","/backup/apps/magentotest/ui/src/pages/tables/QuoteAddress.js",["2371"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'addressId', header: 'addressId', defaultFlex: 1 },\n  { name: 'quoteId', header: 'quoteId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'saveInAddressBook', header: 'saveInAddressBook', defaultFlex: 1 },\n  { name: 'customerAddressId', header: 'customerAddressId', defaultFlex: 1 },\n  { name: 'addressType', header: 'addressType', defaultFlex: 1 },\n  { name: 'email', header: 'email', defaultFlex: 1 },\n  { name: 'prefix', header: 'prefix', defaultFlex: 1 },\n  { name: 'firstname', header: 'firstname', defaultFlex: 1 },\n  { name: 'middlename', header: 'middlename', defaultFlex: 1 },\n  { name: 'lastname', header: 'lastname', defaultFlex: 1 },\n  { name: 'suffix', header: 'suffix', defaultFlex: 1 },\n  { name: 'company', header: 'company', defaultFlex: 1 },\n  { name: 'street', header: 'street', defaultFlex: 1 },\n  { name: 'city', header: 'city', defaultFlex: 1 },\n  { name: 'region', header: 'region', defaultFlex: 1 },\n  { name: 'regionId', header: 'regionId', defaultFlex: 1 },\n  { name: 'postcode', header: 'postcode', defaultFlex: 1 },\n  { name: 'countryId', header: 'countryId', defaultFlex: 1 },\n  { name: 'telephone', header: 'telephone', defaultFlex: 1 },\n  { name: 'fax', header: 'fax', defaultFlex: 1 },\n  { name: 'sameAsBilling', header: 'sameAsBilling', defaultFlex: 1 },\n  { name: 'collectShippingRates', header: 'collectShippingRates', defaultFlex: 1 },\n  { name: 'shippingMethod', header: 'shippingMethod', defaultFlex: 1 },\n  { name: 'shippingDescription', header: 'shippingDescription', defaultFlex: 1 },\n  { name: 'weight', header: 'weight', defaultFlex: 1 },\n  { name: 'subtotal', header: 'subtotal', defaultFlex: 1 },\n  { name: 'baseSubtotal', header: 'baseSubtotal', defaultFlex: 1 },\n  { name: 'subtotalWithDiscount', header: 'subtotalWithDiscount', defaultFlex: 1 },\n  { name: 'baseSubtotalWithDiscount', header: 'baseSubtotalWithDiscount', defaultFlex: 1 },\n  { name: 'taxAmount', header: 'taxAmount', defaultFlex: 1 },\n  { name: 'baseTaxAmount', header: 'baseTaxAmount', defaultFlex: 1 },\n  { name: 'shippingAmount', header: 'shippingAmount', defaultFlex: 1 },\n  { name: 'baseShippingAmount', header: 'baseShippingAmount', defaultFlex: 1 },\n  { name: 'shippingTaxAmount', header: 'shippingTaxAmount', defaultFlex: 1 },\n  { name: 'baseShippingTaxAmount', header: 'baseShippingTaxAmount', defaultFlex: 1 },\n  { name: 'discountAmount', header: 'discountAmount', defaultFlex: 1 },\n  { name: 'baseDiscountAmount', header: 'baseDiscountAmount', defaultFlex: 1 },\n  { name: 'grandTotal', header: 'grandTotal', defaultFlex: 1 },\n  { name: 'baseGrandTotal', header: 'baseGrandTotal', defaultFlex: 1 },\n  { name: 'customerNotes', header: 'customerNotes', defaultFlex: 1 },\n  { name: 'appliedTaxes', header: 'appliedTaxes', defaultFlex: 1 },\n  { name: 'discountDescription', header: 'discountDescription', defaultFlex: 1 },\n  { name: 'shippingDiscountAmount', header: 'shippingDiscountAmount', defaultFlex: 1 },\n  { name: 'baseShippingDiscountAmount', header: 'baseShippingDiscountAmount', defaultFlex: 1 },\n  { name: 'subtotalInclTax', header: 'subtotalInclTax', defaultFlex: 1 },\n  { name: 'baseSubtotalTotalInclTax', header: 'baseSubtotalTotalInclTax', defaultFlex: 1 },\n  { name: 'discountTaxCompensationAmount', header: 'discountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'baseDiscountTaxCompensationAmount', header: 'baseDiscountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'shippingDiscountTaxCompensationAmount', header: 'shippingDiscountTaxCompensationAmount', defaultFlex: 1 },\n  { name: 'baseShippingDiscountTaxCompensationAmnt', header: 'baseShippingDiscountTaxCompensationAmnt', defaultFlex: 1 },\n  { name: 'shippingInclTax', header: 'shippingInclTax', defaultFlex: 1 },\n  { name: 'baseShippingInclTax', header: 'baseShippingInclTax', defaultFlex: 1 },\n  { name: 'vatId', header: 'vatId', defaultFlex: 1 },\n  { name: 'vatIsValid', header: 'vatIsValid', defaultFlex: 1 },\n  { name: 'vatRequestId', header: 'vatRequestId', defaultFlex: 1 },\n  { name: 'vatRequestDate', header: 'vatRequestDate', defaultFlex: 1 },\n  { name: 'vatRequestSuccess', header: 'vatRequestSuccess', defaultFlex: 1 },\n  { name: 'validatedCountryCode', header: 'validatedCountryCode', defaultFlex: 1 },\n  { name: 'validatedVatNumber', header: 'validatedVatNumber', defaultFlex: 1 },\n  { name: 'giftMessageId', header: 'giftMessageId', defaultFlex: 1 },\n  { name: 'freeShipping', header: 'freeShipping', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'quoteaddress/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst QuoteAddress = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default QuoteAddress;","/backup/apps/magentotest/ui/src/pages/tables/Quote.js",["2372"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'convertedAt', header: 'convertedAt', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n  { name: 'isVirtual', header: 'isVirtual', defaultFlex: 1 },\n  { name: 'isMultiShipping', header: 'isMultiShipping', defaultFlex: 1 },\n  { name: 'itemsCount', header: 'itemsCount', defaultFlex: 1 },\n  { name: 'itemsQty', header: 'itemsQty', defaultFlex: 1 },\n  { name: 'origOrderId', header: 'origOrderId', defaultFlex: 1 },\n  { name: 'storeToBaseRate', header: 'storeToBaseRate', defaultFlex: 1 },\n  { name: 'storeToQuoteRate', header: 'storeToQuoteRate', defaultFlex: 1 },\n  { name: 'baseCurrencyCode', header: 'baseCurrencyCode', defaultFlex: 1 },\n  { name: 'storeCurrencyCode', header: 'storeCurrencyCode', defaultFlex: 1 },\n  { name: 'quoteCurrencyCode', header: 'quoteCurrencyCode', defaultFlex: 1 },\n  { name: 'grandTotal', header: 'grandTotal', defaultFlex: 1 },\n  { name: 'baseGrandTotal', header: 'baseGrandTotal', defaultFlex: 1 },\n  { name: 'checkoutMethod', header: 'checkoutMethod', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'customerTaxClassId', header: 'customerTaxClassId', defaultFlex: 1 },\n  { name: 'customerGroupId', header: 'customerGroupId', defaultFlex: 1 },\n  { name: 'customerEmail', header: 'customerEmail', defaultFlex: 1 },\n  { name: 'customerPrefix', header: 'customerPrefix', defaultFlex: 1 },\n  { name: 'customerFirstname', header: 'customerFirstname', defaultFlex: 1 },\n  { name: 'customerMiddlename', header: 'customerMiddlename', defaultFlex: 1 },\n  { name: 'customerLastname', header: 'customerLastname', defaultFlex: 1 },\n  { name: 'customerSuffix', header: 'customerSuffix', defaultFlex: 1 },\n  { name: 'customerDob', header: 'customerDob', defaultFlex: 1 },\n  { name: 'customerNote', header: 'customerNote', defaultFlex: 1 },\n  { name: 'customerNoteNotify', header: 'customerNoteNotify', defaultFlex: 1 },\n  { name: 'customerIsGuest', header: 'customerIsGuest', defaultFlex: 1 },\n  { name: 'remoteIp', header: 'remoteIp', defaultFlex: 1 },\n  { name: 'appliedRuleIds', header: 'appliedRuleIds', defaultFlex: 1 },\n  { name: 'reservedOrderId', header: 'reservedOrderId', defaultFlex: 1 },\n  { name: 'passwordHash', header: 'passwordHash', defaultFlex: 1 },\n  { name: 'couponCode', header: 'couponCode', defaultFlex: 1 },\n  { name: 'globalCurrencyCode', header: 'globalCurrencyCode', defaultFlex: 1 },\n  { name: 'baseToGlobalRate', header: 'baseToGlobalRate', defaultFlex: 1 },\n  { name: 'baseToQuoteRate', header: 'baseToQuoteRate', defaultFlex: 1 },\n  { name: 'customerTaxvat', header: 'customerTaxvat', defaultFlex: 1 },\n  { name: 'customerGender', header: 'customerGender', defaultFlex: 1 },\n  { name: 'subtotal', header: 'subtotal', defaultFlex: 1 },\n  { name: 'baseSubtotal', header: 'baseSubtotal', defaultFlex: 1 },\n  { name: 'subtotalWithDiscount', header: 'subtotalWithDiscount', defaultFlex: 1 },\n  { name: 'baseSubtotalWithDiscount', header: 'baseSubtotalWithDiscount', defaultFlex: 1 },\n  { name: 'isChanged', header: 'isChanged', defaultFlex: 1 },\n  { name: 'triggerRecollect', header: 'triggerRecollect', defaultFlex: 1 },\n  { name: 'extShippingInfo', header: 'extShippingInfo', defaultFlex: 1 },\n  { name: 'giftMessageId', header: 'giftMessageId', defaultFlex: 1 },\n  { name: 'isPersistent', header: 'isPersistent', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'quote/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Quote = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Quote;","/backup/apps/magentotest/ui/src/pages/tables/QueuePoisonPill.js",["2373"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'version', header: 'version', defaultFlex: 1 },\n  { name: 'defaultId', header: 'defaultId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'queuepoisonpill/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst QueuePoisonPill = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default QueuePoisonPill;","/backup/apps/magentotest/ui/src/pages/tables/QueueMessageStatus.js",["2374"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'queueId', header: 'queueId', defaultFlex: 1 },\n  { name: 'messageId', header: 'messageId', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'numberOfTrials', header: 'numberOfTrials', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'queuemessagestatus/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst QueueMessageStatus = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default QueueMessageStatus;","/backup/apps/magentotest/ui/src/pages/tables/QueueMessage.js",["2375"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'topicName', header: 'topicName', defaultFlex: 1 },\n  { name: 'body', header: 'body', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'queuemessage/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst QueueMessage = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default QueueMessage;","/backup/apps/magentotest/ui/src/pages/tables/Queue.js",["2376"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'queue/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst Queue = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default Queue;","/backup/apps/magentotest/ui/src/pages/tables/QueueLock.js",["2377"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'messageCode', header: 'messageCode', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'queuelock/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst QueueLock = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default QueueLock;","/backup/apps/magentotest/ui/src/pages/tables/ProductAlertStock.js",["2378"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'alertStockId', header: 'alertStockId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'addDate', header: 'addDate', defaultFlex: 1 },\n  { name: 'sendDate', header: 'sendDate', defaultFlex: 1 },\n  { name: 'sendCount', header: 'sendCount', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'productalertstock/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ProductAlertStock = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ProductAlertStock;","/backup/apps/magentotest/ui/src/pages/tables/ProductAlertPrice.js",["2379"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'alertPriceId', header: 'alertPriceId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'productId', header: 'productId', defaultFlex: 1 },\n  { name: 'price', header: 'price', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'addDate', header: 'addDate', defaultFlex: 1 },\n  { name: 'lastSendDate', header: 'lastSendDate', defaultFlex: 1 },\n  { name: 'sendCount', header: 'sendCount', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'productalertprice/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst ProductAlertPrice = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default ProductAlertPrice;","/backup/apps/magentotest/ui/src/pages/tables/PersistentSession.js",["2380"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'persistentId', header: 'persistentId', defaultFlex: 1 },\n  { name: 'key', header: 'key', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'info', header: 'info', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'persistentsession/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst PersistentSession = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default PersistentSession;","/backup/apps/magentotest/ui/src/pages/tables/PaypalSettlementReportRow.js",["2381"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'rowId', header: 'rowId', defaultFlex: 1 },\n  { name: 'reportId', header: 'reportId', defaultFlex: 1 },\n  { name: 'transactionId', header: 'transactionId', defaultFlex: 1 },\n  { name: 'invoiceId', header: 'invoiceId', defaultFlex: 1 },\n  { name: 'paypalReferenceId', header: 'paypalReferenceId', defaultFlex: 1 },\n  { name: 'paypalReferenceIdType', header: 'paypalReferenceIdType', defaultFlex: 1 },\n  { name: 'transactionEventCode', header: 'transactionEventCode', defaultFlex: 1 },\n  { name: 'transactionInitiationDate', header: 'transactionInitiationDate', defaultFlex: 1 },\n  { name: 'transactionCompletionDate', header: 'transactionCompletionDate', defaultFlex: 1 },\n  { name: 'transactionDebitOrCredit', header: 'transactionDebitOrCredit', defaultFlex: 1 },\n  { name: 'grossTransactionAmount', header: 'grossTransactionAmount', defaultFlex: 1 },\n  { name: 'grossTransactionCurrency', header: 'grossTransactionCurrency', defaultFlex: 1 },\n  { name: 'feeDebitOrCredit', header: 'feeDebitOrCredit', defaultFlex: 1 },\n  { name: 'feeAmount', header: 'feeAmount', defaultFlex: 1 },\n  { name: 'feeCurrency', header: 'feeCurrency', defaultFlex: 1 },\n  { name: 'customField', header: 'customField', defaultFlex: 1 },\n  { name: 'consumerId', header: 'consumerId', defaultFlex: 1 },\n  { name: 'paymentTrackingId', header: 'paymentTrackingId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'paypalsettlementreportrow/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst PaypalSettlementReportRow = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default PaypalSettlementReportRow;","/backup/apps/magentotest/ui/src/pages/tables/PaypalSettlementReport.js",["2382"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'reportId', header: 'reportId', defaultFlex: 1 },\n  { name: 'reportDate', header: 'reportDate', defaultFlex: 1 },\n  { name: 'accountId', header: 'accountId', defaultFlex: 1 },\n  { name: 'filename', header: 'filename', defaultFlex: 1 },\n  { name: 'lastModified', header: 'lastModified', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'paypalsettlementreport/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst PaypalSettlementReport = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default PaypalSettlementReport;","/backup/apps/magentotest/ui/src/pages/tables/PaypalPaymentTransaction.js",["2383"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'transactionId', header: 'transactionId', defaultFlex: 1 },\n  { name: 'txnId', header: 'txnId', defaultFlex: 1 },\n  { name: 'additionalInformation', header: 'additionalInformation', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'paypalpaymenttransaction/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst PaypalPaymentTransaction = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default PaypalPaymentTransaction;","/backup/apps/magentotest/ui/src/pages/tables/PaypalCert.js",["2384"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'certId', header: 'certId', defaultFlex: 1 },\n  { name: 'websiteId', header: 'websiteId', defaultFlex: 1 },\n  { name: 'content', header: 'content', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'paypalcert/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst PaypalCert = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default PaypalCert;","/backup/apps/magentotest/ui/src/pages/tables/PaypalBillingAgreementOrder.js",["2385"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'agreementId', header: 'agreementId', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'paypalbillingagreementorder/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst PaypalBillingAgreementOrder = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default PaypalBillingAgreementOrder;","/backup/apps/magentotest/ui/src/pages/tables/PaypalBillingAgreement.js",["2386"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'agreementId', header: 'agreementId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'methodCode', header: 'methodCode', defaultFlex: 1 },\n  { name: 'referenceId', header: 'referenceId', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'agreementLabel', header: 'agreementLabel', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'paypalbillingagreement/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst PaypalBillingAgreement = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default PaypalBillingAgreement;","/backup/apps/magentotest/ui/src/pages/tables/PasswordResetRequestEvent.js",["2387"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'requestType', header: 'requestType', defaultFlex: 1 },\n  { name: 'accountReference', header: 'accountReference', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'ip', header: 'ip', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'passwordresetrequestevent/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst PasswordResetRequestEvent = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default PasswordResetRequestEvent;","/backup/apps/magentotest/ui/src/pages/tables/PatchList.js",["2388"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'patchId', header: 'patchId', defaultFlex: 1 },\n  { name: 'patchName', header: 'patchName', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'patchlist/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst PatchList = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default PatchList;","/backup/apps/magentotest/ui/src/pages/tables/OauthTokenRequestLog.js",["2389"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'logId', header: 'logId', defaultFlex: 1 },\n  { name: 'userName', header: 'userName', defaultFlex: 1 },\n  { name: 'userType', header: 'userType', defaultFlex: 1 },\n  { name: 'failuresCount', header: 'failuresCount', defaultFlex: 1 },\n  { name: 'lockExpiresAt', header: 'lockExpiresAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'oauthtokenrequestlog/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst OauthTokenRequestLog = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default OauthTokenRequestLog;","/backup/apps/magentotest/ui/src/pages/tables/OauthToken.js",["2390"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'consumerId', header: 'consumerId', defaultFlex: 1 },\n  { name: 'adminId', header: 'adminId', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'type', header: 'type', defaultFlex: 1 },\n  { name: 'token', header: 'token', defaultFlex: 1 },\n  { name: 'secret', header: 'secret', defaultFlex: 1 },\n  { name: 'verifier', header: 'verifier', defaultFlex: 1 },\n  { name: 'callbackUrl', header: 'callbackUrl', defaultFlex: 1 },\n  { name: 'revoked', header: 'revoked', defaultFlex: 1 },\n  { name: 'authorized', header: 'authorized', defaultFlex: 1 },\n  { name: 'userType', header: 'userType', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'oauthtoken/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst OauthToken = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default OauthToken;","/backup/apps/magentotest/ui/src/pages/tables/OauthNonce.js",["2391"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'nonce', header: 'nonce', defaultFlex: 1 },\n  { name: 'timestamp', header: 'timestamp', defaultFlex: 1 },\n  { name: 'consumerId', header: 'consumerId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'oauthnonce/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst OauthNonce = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default OauthNonce;","/backup/apps/magentotest/ui/src/pages/tables/OauthConsumer.js",["2392"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'entityId', header: 'entityId', defaultFlex: 1 },\n  { name: 'createdAt', header: 'createdAt', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'key', header: 'key', defaultFlex: 1 },\n  { name: 'secret', header: 'secret', defaultFlex: 1 },\n  { name: 'callbackUrl', header: 'callbackUrl', defaultFlex: 1 },\n  { name: 'rejectedCallbackUrl', header: 'rejectedCallbackUrl', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'oauthconsumer/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst OauthConsumer = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default OauthConsumer;","/backup/apps/magentotest/ui/src/pages/tables/NewsletterTemplate.js",["2393"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'templateId', header: 'templateId', defaultFlex: 1 },\n  { name: 'templateCode', header: 'templateCode', defaultFlex: 1 },\n  { name: 'templateText', header: 'templateText', defaultFlex: 1 },\n  { name: 'templateStyles', header: 'templateStyles', defaultFlex: 1 },\n  { name: 'templateType', header: 'templateType', defaultFlex: 1 },\n  { name: 'templateSubject', header: 'templateSubject', defaultFlex: 1 },\n  { name: 'templateSenderName', header: 'templateSenderName', defaultFlex: 1 },\n  { name: 'templateSenderEmail', header: 'templateSenderEmail', defaultFlex: 1 },\n  { name: 'templateActual', header: 'templateActual', defaultFlex: 1 },\n  { name: 'addedAt', header: 'addedAt', defaultFlex: 1 },\n  { name: 'modifiedAt', header: 'modifiedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'newslettertemplate/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst NewsletterTemplate = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default NewsletterTemplate;","/backup/apps/magentotest/ui/src/pages/tables/NewsletterSubscriber.js",["2394"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'subscriberId', header: 'subscriberId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'changeStatusAt', header: 'changeStatusAt', defaultFlex: 1 },\n  { name: 'customerId', header: 'customerId', defaultFlex: 1 },\n  { name: 'subscriberEmail', header: 'subscriberEmail', defaultFlex: 1 },\n  { name: 'subscriberStatus', header: 'subscriberStatus', defaultFlex: 1 },\n  { name: 'subscriberConfirmCode', header: 'subscriberConfirmCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'newslettersubscriber/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst NewsletterSubscriber = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default NewsletterSubscriber;","/backup/apps/magentotest/ui/src/pages/tables/NewsletterQueueStoreLink.js",["2395"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'queueId', header: 'queueId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'newsletterqueuestorelink/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst NewsletterQueueStoreLink = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default NewsletterQueueStoreLink;","/backup/apps/magentotest/ui/src/pages/tables/NewsletterQueueLink.js",["2396"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'queueLinkId', header: 'queueLinkId', defaultFlex: 1 },\n  { name: 'queueId', header: 'queueId', defaultFlex: 1 },\n  { name: 'subscriberId', header: 'subscriberId', defaultFlex: 1 },\n  { name: 'letterSentAt', header: 'letterSentAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'newsletterqueuelink/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst NewsletterQueueLink = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default NewsletterQueueLink;","/backup/apps/magentotest/ui/src/pages/tables/NewsletterQueue.js",["2397"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'queueId', header: 'queueId', defaultFlex: 1 },\n  { name: 'templateId', header: 'templateId', defaultFlex: 1 },\n  { name: 'newsletterType', header: 'newsletterType', defaultFlex: 1 },\n  { name: 'newsletterText', header: 'newsletterText', defaultFlex: 1 },\n  { name: 'newsletterStyles', header: 'newsletterStyles', defaultFlex: 1 },\n  { name: 'newsletterSubject', header: 'newsletterSubject', defaultFlex: 1 },\n  { name: 'newsletterSenderName', header: 'newsletterSenderName', defaultFlex: 1 },\n  { name: 'newsletterSenderEmail', header: 'newsletterSenderEmail', defaultFlex: 1 },\n  { name: 'queueStatus', header: 'queueStatus', defaultFlex: 1 },\n  { name: 'queueStartAt', header: 'queueStartAt', defaultFlex: 1 },\n  { name: 'queueFinishAt', header: 'queueFinishAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'newsletterqueue/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst NewsletterQueue = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default NewsletterQueue;","/backup/apps/magentotest/ui/src/pages/tables/NewsletterProblem.js",["2398"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'problemId', header: 'problemId', defaultFlex: 1 },\n  { name: 'subscriberId', header: 'subscriberId', defaultFlex: 1 },\n  { name: 'queueId', header: 'queueId', defaultFlex: 1 },\n  { name: 'problemErrorCode', header: 'problemErrorCode', defaultFlex: 1 },\n  { name: 'problemErrorText', header: 'problemErrorText', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'newsletterproblem/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst NewsletterProblem = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default NewsletterProblem;","/backup/apps/magentotest/ui/src/pages/tables/MviewState.js",["2399"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'stateId', header: 'stateId', defaultFlex: 1 },\n  { name: 'viewId', header: 'viewId', defaultFlex: 1 },\n  { name: 'mode', header: 'mode', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'updated', header: 'updated', defaultFlex: 1 },\n  { name: 'versionId', header: 'versionId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'mviewstate/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst MviewState = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default MviewState;","/backup/apps/magentotest/ui/src/pages/tables/MspTfaUserConfig.js",["2400"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'mspTfaUserConfigId', header: 'mspTfaUserConfigId', defaultFlex: 1 },\n  { name: 'userId', header: 'userId', defaultFlex: 1 },\n  { name: 'encodedProviders', header: 'encodedProviders', defaultFlex: 1 },\n  { name: 'encodedConfig', header: 'encodedConfig', defaultFlex: 1 },\n  { name: 'defaultProvider', header: 'defaultProvider', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'msptfauserconfig/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst MspTfaUserConfig = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default MspTfaUserConfig;","/backup/apps/magentotest/ui/src/pages/tables/MspTfaTrusted.js",["2401"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'mspTfaTrustedId', header: 'mspTfaTrustedId', defaultFlex: 1 },\n  { name: 'dateTime', header: 'dateTime', defaultFlex: 1 },\n  { name: 'userId', header: 'userId', defaultFlex: 1 },\n  { name: 'deviceName', header: 'deviceName', defaultFlex: 1 },\n  { name: 'token', header: 'token', defaultFlex: 1 },\n  { name: 'lastIp', header: 'lastIp', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'msptfatrusted/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst MspTfaTrusted = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default MspTfaTrusted;","/backup/apps/magentotest/ui/src/pages/tables/MspTfaCountryCodes.js",["2402"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'mspTfaCountryCodesId', header: 'mspTfaCountryCodesId', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'name', header: 'name', defaultFlex: 1 },\n  { name: 'dialCode', header: 'dialCode', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'msptfacountrycodes/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst MspTfaCountryCodes = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default MspTfaCountryCodes;","/backup/apps/magentotest/ui/src/pages/tables/MagentoOperation.js",["2403"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'bulkUuid', header: 'bulkUuid', defaultFlex: 1 },\n  { name: 'topicName', header: 'topicName', defaultFlex: 1 },\n  { name: 'serializedData', header: 'serializedData', defaultFlex: 1 },\n  { name: 'resultSerializedData', header: 'resultSerializedData', defaultFlex: 1 },\n  { name: 'status', header: 'status', defaultFlex: 1 },\n  { name: 'errorCode', header: 'errorCode', defaultFlex: 1 },\n  { name: 'resultMessage', header: 'resultMessage', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'magentooperation/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst MagentoOperation = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default MagentoOperation;","/backup/apps/magentotest/ui/src/pages/tables/MagentoBulk.js",["2404"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'uuid', header: 'uuid', defaultFlex: 1 },\n  { name: 'userId', header: 'userId', defaultFlex: 1 },\n  { name: 'userType', header: 'userType', defaultFlex: 1 },\n  { name: 'description', header: 'description', defaultFlex: 1 },\n  { name: 'operationCount', header: 'operationCount', defaultFlex: 1 },\n  { name: 'startTime', header: 'startTime', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'magentobulk/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst MagentoBulk = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default MagentoBulk;","/backup/apps/magentotest/ui/src/pages/tables/MagentoAcknowledgedBulk.js",["2405"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'bulkUuid', header: 'bulkUuid', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'magentoacknowledgedbulk/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst MagentoAcknowledgedBulk = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default MagentoAcknowledgedBulk;","/backup/apps/magentotest/ui/src/pages/tables/LayoutUpdate.js",["2406"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'layoutUpdateId', header: 'layoutUpdateId', defaultFlex: 1 },\n  { name: 'handle', header: 'handle', defaultFlex: 1 },\n  { name: 'xml', header: 'xml', defaultFlex: 1 },\n  { name: 'sortOrder', header: 'sortOrder', defaultFlex: 1 },\n  { name: 'updatedAt', header: 'updatedAt', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'layoutupdate/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst LayoutUpdate = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default LayoutUpdate;","/backup/apps/magentotest/ui/src/pages/tables/LayoutLink.js",["2407"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'layoutLinkId', header: 'layoutLinkId', defaultFlex: 1 },\n  { name: 'storeId', header: 'storeId', defaultFlex: 1 },\n  { name: 'themeId', header: 'themeId', defaultFlex: 1 },\n  { name: 'layoutUpdateId', header: 'layoutUpdateId', defaultFlex: 1 },\n  { name: 'isTemporary', header: 'isTemporary', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'layoutlink/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst LayoutLink = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default LayoutLink;","/backup/apps/magentotest/ui/src/pages/tables/KlarnaPaymentsQuote.js",["2408"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'paymentsQuoteId', header: 'paymentsQuoteId', defaultFlex: 1 },\n  { name: 'sessionId', header: 'sessionId', defaultFlex: 1 },\n  { name: 'clientToken', header: 'clientToken', defaultFlex: 1 },\n  { name: 'authorizationToken', header: 'authorizationToken', defaultFlex: 1 },\n  { name: 'isActive', header: 'isActive', defaultFlex: 1 },\n  { name: 'quoteId', header: 'quoteId', defaultFlex: 1 },\n  { name: 'paymentMethods', header: 'paymentMethods', defaultFlex: 1 },\n  { name: 'paymentMethodInfo', header: 'paymentMethodInfo', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'klarnapaymentsquote/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst KlarnaPaymentsQuote = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default KlarnaPaymentsQuote;","/backup/apps/magentotest/ui/src/pages/tables/KlarnaCoreOrder.js",["2409"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'id', header: 'id', defaultFlex: 1 },\n  { name: 'klarnaOrderId', header: 'klarnaOrderId', defaultFlex: 1 },\n  { name: 'sessionId', header: 'sessionId', defaultFlex: 1 },\n  { name: 'reservationId', header: 'reservationId', defaultFlex: 1 },\n  { name: 'orderId', header: 'orderId', defaultFlex: 1 },\n  { name: 'isAcknowledged', header: 'isAcknowledged', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'klarnacoreorder/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst KlarnaCoreOrder = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default KlarnaCoreOrder;","/backup/apps/magentotest/ui/src/pages/tables/InventoryStockSalesChannel.js",["2410"],"import React, { useCallback } from 'react';\nimport ReactDataGrid from '@inovua/reactdatagrid-community';\nimport '@inovua/reactdatagrid-community/index.css';\nimport init from \"../../init\";\n\nconst gridStyle = { minHeight: 550 }\n\nconst columns = [\n  { name: 'type', header: 'type', defaultFlex: 1 },\n  { name: 'code', header: 'code', defaultFlex: 1 },\n  { name: 'stockId', header: 'stockId', defaultFlex: 1 },\n]\n\nconst loadData = () => {\n  return fetch('/' + init.appName + '/rest/'  + 'inventorystocksaleschannel/selectAll',{\n    headers : {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n     }\n  }).then(response => {\n    return response.json().then(data => {\n      console.log(data);\n      return data;\n    })\n  })\n}\n\nconst InventoryStockSalesChannel = () => {\n  const dataSource = useCallback(loadData, []);\n  return (\n      <ReactDataGrid\n        idProperty=\"id\"\n        style={gridStyle}\n        columns={columns}\n        pagination\n        defaultLimit={15}\n        defaultSkip={15}\n        dataSource={dataSource}\n        />\n  )\n}\n\nexport default InventoryStockSalesChannel;",{"ruleId":"2411","severity":1,"message":"2412","line":2,"column":20,"nodeType":"2413","messageId":"2414","endLine":2,"endColumn":23},{"ruleId":"2411","severity":1,"message":"2415","line":2,"column":25,"nodeType":"2413","messageId":"2414","endLine":2,"endColumn":28},{"ruleId":"2411","severity":1,"message":"2416","line":2,"column":30,"nodeType":"2413","messageId":"2414","endLine":2,"endColumn":35},{"ruleId":"2411","severity":1,"message":"2417","line":4,"column":8,"nodeType":"2413","messageId":"2414","endLine":4,"endColumn":22},{"ruleId":"2411","severity":1,"message":"2418","line":5,"column":8,"nodeType":"2413","messageId":"2414","endLine":5,"endColumn":18},{"ruleId":"2411","severity":1,"message":"2419","line":3,"column":27,"nodeType":"2413","messageId":"2414","endLine":3,"endColumn":33},{"ruleId":"2411","severity":1,"message":"2420","line":11,"column":29,"nodeType":"2413","messageId":"2414","endLine":11,"endColumn":39},{"ruleId":"2421","severity":1,"message":"2422","line":32,"column":47,"nodeType":"2423","messageId":"2424","endLine":32,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":36,"column":47,"nodeType":"2423","messageId":"2424","endLine":36,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":22,"column":47,"nodeType":"2423","messageId":"2424","endLine":22,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":25,"column":47,"nodeType":"2423","messageId":"2424","endLine":25,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":25,"column":47,"nodeType":"2423","messageId":"2424","endLine":25,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":29,"column":47,"nodeType":"2423","messageId":"2424","endLine":29,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":22,"column":47,"nodeType":"2423","messageId":"2424","endLine":22,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2411","severity":1,"message":"2416","line":4,"column":8,"nodeType":"2413","messageId":"2414","endLine":4,"endColumn":13},{"ruleId":"2425","severity":1,"message":"2426","line":54,"column":13,"nodeType":"2427","endLine":54,"endColumn":29},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":24,"column":47,"nodeType":"2423","messageId":"2424","endLine":24,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":25,"column":47,"nodeType":"2423","messageId":"2424","endLine":25,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":24,"column":47,"nodeType":"2423","messageId":"2424","endLine":24,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":27,"column":47,"nodeType":"2423","messageId":"2424","endLine":27,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":23,"column":47,"nodeType":"2423","messageId":"2424","endLine":23,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":25,"column":47,"nodeType":"2423","messageId":"2424","endLine":25,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":28,"column":47,"nodeType":"2423","messageId":"2424","endLine":28,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":29,"column":47,"nodeType":"2423","messageId":"2424","endLine":29,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":28,"column":47,"nodeType":"2423","messageId":"2424","endLine":28,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":22,"column":47,"nodeType":"2423","messageId":"2424","endLine":22,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":23,"column":47,"nodeType":"2423","messageId":"2424","endLine":23,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":37,"column":47,"nodeType":"2423","messageId":"2424","endLine":37,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":40,"column":47,"nodeType":"2423","messageId":"2424","endLine":40,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":24,"column":47,"nodeType":"2423","messageId":"2424","endLine":24,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":37,"column":47,"nodeType":"2423","messageId":"2424","endLine":37,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":31,"column":47,"nodeType":"2423","messageId":"2424","endLine":31,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":23,"column":47,"nodeType":"2423","messageId":"2424","endLine":23,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":23,"column":47,"nodeType":"2423","messageId":"2424","endLine":23,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":24,"column":47,"nodeType":"2423","messageId":"2424","endLine":24,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":38,"column":47,"nodeType":"2423","messageId":"2424","endLine":38,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":22,"column":47,"nodeType":"2423","messageId":"2424","endLine":22,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":22,"column":47,"nodeType":"2423","messageId":"2424","endLine":22,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":22,"column":47,"nodeType":"2423","messageId":"2424","endLine":22,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":25,"column":47,"nodeType":"2423","messageId":"2424","endLine":25,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":23,"column":47,"nodeType":"2423","messageId":"2424","endLine":23,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":22,"column":47,"nodeType":"2423","messageId":"2424","endLine":22,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":25,"column":47,"nodeType":"2423","messageId":"2424","endLine":25,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":25,"column":47,"nodeType":"2423","messageId":"2424","endLine":25,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":23,"column":47,"nodeType":"2423","messageId":"2424","endLine":23,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":13,"column":47,"nodeType":"2423","messageId":"2424","endLine":13,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":13,"column":47,"nodeType":"2423","messageId":"2424","endLine":13,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":13,"column":47,"nodeType":"2423","messageId":"2424","endLine":13,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":13,"column":47,"nodeType":"2423","messageId":"2424","endLine":13,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":13,"column":47,"nodeType":"2423","messageId":"2424","endLine":13,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":13,"column":47,"nodeType":"2423","messageId":"2424","endLine":13,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":13,"column":47,"nodeType":"2423","messageId":"2424","endLine":13,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":13,"column":47,"nodeType":"2423","messageId":"2424","endLine":13,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":22,"column":47,"nodeType":"2423","messageId":"2424","endLine":22,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":25,"column":47,"nodeType":"2423","messageId":"2424","endLine":25,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":22,"column":47,"nodeType":"2423","messageId":"2424","endLine":22,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":25,"column":47,"nodeType":"2423","messageId":"2424","endLine":25,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":23,"column":47,"nodeType":"2423","messageId":"2424","endLine":23,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":36,"column":47,"nodeType":"2423","messageId":"2424","endLine":36,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":23,"column":47,"nodeType":"2423","messageId":"2424","endLine":23,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":24,"column":47,"nodeType":"2423","messageId":"2424","endLine":24,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":32,"column":47,"nodeType":"2423","messageId":"2424","endLine":32,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":30,"column":47,"nodeType":"2423","messageId":"2424","endLine":30,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":22,"column":47,"nodeType":"2423","messageId":"2424","endLine":22,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":23,"column":47,"nodeType":"2423","messageId":"2424","endLine":23,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":22,"column":47,"nodeType":"2423","messageId":"2424","endLine":22,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":66,"column":47,"nodeType":"2423","messageId":"2424","endLine":66,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":39,"column":47,"nodeType":"2423","messageId":"2424","endLine":39,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":92,"column":47,"nodeType":"2423","messageId":"2424","endLine":92,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":32,"column":47,"nodeType":"2423","messageId":"2424","endLine":32,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":32,"column":47,"nodeType":"2423","messageId":"2424","endLine":32,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":38,"column":47,"nodeType":"2423","messageId":"2424","endLine":38,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":150,"column":47,"nodeType":"2423","messageId":"2424","endLine":150,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":46,"column":47,"nodeType":"2423","messageId":"2424","endLine":46,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":38,"column":47,"nodeType":"2423","messageId":"2424","endLine":38,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":59,"column":47,"nodeType":"2423","messageId":"2424","endLine":59,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":46,"column":47,"nodeType":"2423","messageId":"2424","endLine":46,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":36,"column":47,"nodeType":"2423","messageId":"2424","endLine":36,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":63,"column":47,"nodeType":"2423","messageId":"2424","endLine":63,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":22,"column":47,"nodeType":"2423","messageId":"2424","endLine":22,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":24,"column":47,"nodeType":"2423","messageId":"2424","endLine":24,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":34,"column":47,"nodeType":"2423","messageId":"2424","endLine":34,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":65,"column":47,"nodeType":"2423","messageId":"2424","endLine":65,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":53,"column":47,"nodeType":"2423","messageId":"2424","endLine":53,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":76,"column":47,"nodeType":"2423","messageId":"2424","endLine":76,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":63,"column":47,"nodeType":"2423","messageId":"2424","endLine":63,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":22,"column":47,"nodeType":"2423","messageId":"2424","endLine":22,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":31,"column":47,"nodeType":"2423","messageId":"2424","endLine":31,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":21,"column":47,"nodeType":"2423","messageId":"2424","endLine":21,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":25,"column":47,"nodeType":"2423","messageId":"2424","endLine":25,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":23,"column":47,"nodeType":"2423","messageId":"2424","endLine":23,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":23,"column":47,"nodeType":"2423","messageId":"2424","endLine":23,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":16,"column":47,"nodeType":"2423","messageId":"2424","endLine":16,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":19,"column":47,"nodeType":"2423","messageId":"2424","endLine":19,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":14,"column":47,"nodeType":"2423","messageId":"2424","endLine":14,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":17,"column":47,"nodeType":"2423","messageId":"2424","endLine":17,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":20,"column":47,"nodeType":"2423","messageId":"2424","endLine":20,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":18,"column":47,"nodeType":"2423","messageId":"2424","endLine":18,"endColumn":48},{"ruleId":"2421","severity":1,"message":"2422","line":15,"column":47,"nodeType":"2423","messageId":"2424","endLine":15,"endColumn":48},"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Image' is defined but never used.","'DatabaseSchema' is defined but never used.","'htmlSample' is defined but never used.","'Router' is defined but never used.","'faDatabase' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]